/**
 * Name: Rumbleverse
 * Version: Latest
 */

#include "pch.h"

namespace CG
{
	// --------------------------------------------------
	// # Structs Functions
	// --------------------------------------------------
	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.BattlePassProgressionManager.PurchaseBattlePassTiersComplete
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UBattlePassProgressionManager::PurchaseBattlePassTiersComplete(bool bSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.BattlePassProgressionManager.PurchaseBattlePassTiersComplete");
		
		UBattlePassProgressionManager_PurchaseBattlePassTiersComplete_Params params {};
		params.bSuccessful = bSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.BattlePassProgressionManager.PurchaseBattlePassComplete
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void UBattlePassProgressionManager::PurchaseBattlePassComplete(bool bSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.BattlePassProgressionManager.PurchaseBattlePassComplete");
		
		UBattlePassProgressionManager_PurchaseBattlePassComplete_Params params {};
		params.bSuccessful = bSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.BattlePassProgressionManager.OnEntitlementsRefreshed
	 * 		Flags  -> ()
	 */
	void UBattlePassProgressionManager::OnEntitlementsRefreshed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.BattlePassProgressionManager.OnEntitlementsRefreshed");
		
		UBattlePassProgressionManager_OnEntitlementsRefreshed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBattlePassProgressionManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBattlePassProgressionManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.BattlePassProgressionManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ABRLaunchLocation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ABRLaunchLocation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.BRLaunchLocation");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCharacterSkinNameList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCharacterSkinNameList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.CharacterSkinNameList");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.CloutProgressionManager.RefreshCloutLevel
	 * 		Flags  -> ()
	 */
	void UCloutProgressionManager::RefreshCloutLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.CloutProgressionManager.RefreshCloutLevel");
		
		UCloutProgressionManager_RefreshCloutLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.CloutProgressionManager.GetNextCloutLevelForDisplayOnly
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FProgressionLevel                           OutNextCloutLevel                                          (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool UCloutProgressionManager::GetNextCloutLevelForDisplayOnly(struct FProgressionLevel* OutNextCloutLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.CloutProgressionManager.GetNextCloutLevelForDisplayOnly");
		
		UCloutProgressionManager_GetNextCloutLevelForDisplayOnly_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutNextCloutLevel != nullptr)
			*OutNextCloutLevel = params.OutNextCloutLevel;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.CloutProgressionManager.GetMaxCloutLevel
	 * 		Flags  -> ()
	 */
	int32_t UCloutProgressionManager::GetMaxCloutLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.CloutProgressionManager.GetMaxCloutLevel");
		
		UCloutProgressionManager_GetMaxCloutLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.CloutProgressionManager.GetCurrentNumCloutFans
	 * 		Flags  -> ()
	 */
	int32_t UCloutProgressionManager::GetCurrentNumCloutFans()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.CloutProgressionManager.GetCurrentNumCloutFans");
		
		UCloutProgressionManager_GetCurrentNumCloutFans_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.CloutProgressionManager.GetCloutLevel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FProgressionLevel                           OutProgressionLevel                                        (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool UCloutProgressionManager::GetCloutLevel(struct FProgressionLevel* OutProgressionLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.CloutProgressionManager.GetCloutLevel");
		
		UCloutProgressionManager_GetCloutLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutProgressionLevel != nullptr)
			*OutProgressionLevel = params.OutProgressionLevel;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.CloutProgressionManager.CheckWillCloutLevelUpGivenCurrentFans
	 * 		Flags  -> ()
	 */
	bool UCloutProgressionManager::CheckWillCloutLevelUpGivenCurrentFans()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.CloutProgressionManager.CheckWillCloutLevelUpGivenCurrentFans");
		
		UCloutProgressionManager_CheckWillCloutLevelUpGivenCurrentFans_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCloutProgressionManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCloutProgressionManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.CloutProgressionManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.FrontendHUD.GetSheikTitleCardFrontendUtility
	 * 		Flags  -> ()
	 */
	class ASheikTitleCardFrontendUtility* AFrontendHUD::GetSheikTitleCardFrontendUtility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.FrontendHUD.GetSheikTitleCardFrontendUtility");
		
		AFrontendHUD_GetSheikTitleCardFrontendUtility_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.FrontendHUD.GetSheikStoreSystem
	 * 		Flags  -> ()
	 */
	class USheikStoreSystem* AFrontendHUD::GetSheikStoreSystem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.FrontendHUD.GetSheikStoreSystem");
		
		AFrontendHUD_GetSheikStoreSystem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.FrontendHUD.GetSheikAccessorySystem
	 * 		Flags  -> ()
	 */
	class USheikAccessorySystem* AFrontendHUD::GetSheikAccessorySystem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.FrontendHUD.GetSheikAccessorySystem");
		
		AFrontendHUD_GetSheikAccessorySystem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AFrontendHUD.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AFrontendHUD::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.FrontendHUD");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.IG_EditableTextBox.OpenVirtualKeyboard
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            UserIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UIG_EditableTextBox::OpenVirtualKeyboard(int32_t UserIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.IG_EditableTextBox.OpenVirtualKeyboard");
		
		UIG_EditableTextBox_OpenVirtualKeyboard_Params params {};
		params.UserIndex = UserIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UIG_EditableTextBox.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIG_EditableTextBox::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.IG_EditableTextBox");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.IGCollisionTransitionState.TriggerTransitionForTwoWallImpact
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OldHitNormal                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     MoveDelta                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UIGCollisionTransitionState::TriggerTransitionForTwoWallImpact(class AIGCharacter* Character, const struct FHitResult& Hit, const struct FVector& OldHitNormal, const struct FVector& MoveDelta)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.IGCollisionTransitionState.TriggerTransitionForTwoWallImpact");
		
		UIGCollisionTransitionState_TriggerTransitionForTwoWallImpact_Params params {};
		params.Character = Character;
		params.Hit = Hit;
		params.OldHitNormal = OldHitNormal;
		params.MoveDelta = MoveDelta;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.IGCollisionTransitionState.TriggerTransitionForImpact
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		float                                              TimeSlice                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     MoveDelta                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void UIGCollisionTransitionState::TriggerTransitionForImpact(class AIGCharacter* Character, const struct FHitResult& Hit, float TimeSlice, const struct FVector& MoveDelta)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.IGCollisionTransitionState.TriggerTransitionForImpact");
		
		UIGCollisionTransitionState_TriggerTransitionForImpact_Params params {};
		params.Character = Character;
		params.Hit = Hit;
		params.TimeSlice = TimeSlice;
		params.MoveDelta = MoveDelta;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UIGCollisionTransitionState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIGCollisionTransitionState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.IGCollisionTransitionState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UIGSmokeConnectTask.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIGSmokeConnectTask::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.IGSmokeConnectTask");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UIGSmokeContinuousCaptureTask.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIGSmokeContinuousCaptureTask::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.IGSmokeContinuousCaptureTask");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UIGSmokeDelayTask.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIGSmokeDelayTask::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.IGSmokeDelayTask");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UIGSmokeDestroyBotsTask.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIGSmokeDestroyBotsTask::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.IGSmokeDestroyBotsTask");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction AIGSmokeMobileCamera.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* AIGSmokeMobileCamera::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.IGSmokeMobileCamera");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UIGSmokePreparePlayerTask.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIGSmokePreparePlayerTask::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.IGSmokePreparePlayerTask");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UIGSmokeSpawnBotsTask.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIGSmokeSpawnBotsTask::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.IGSmokeSpawnBotsTask");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.MeshMergeFunctionLibrary.MergeMeshes
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSkeletalMeshMergeParams                    Params                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class USkeletalMesh* UMeshMergeFunctionLibrary::MergeMeshes(const struct FSkeletalMeshMergeParams& Params)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.MeshMergeFunctionLibrary.MergeMeshes");
		
		UMeshMergeFunctionLibrary_MergeMeshes_Params params {};
		params.Params = Params;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMeshMergeFunctionLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMeshMergeFunctionLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.MeshMergeFunctionLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UMoveOptionContainer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UMoveOptionContainer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.MoveOptionContainer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAccessorySystem.VerifyUnlockedOutfits
	 * 		Flags  -> ()
	 */
	void USheikAccessorySystem::VerifyUnlockedOutfits()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAccessorySystem.VerifyUnlockedOutfits");
		
		USheikAccessorySystem_VerifyUnlockedOutfits_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAccessorySystem.SetSheikWalletSystem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USheikWalletSystem*                          InSheikWalletSystem                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikAccessorySystem::SetSheikWalletSystem(class USheikWalletSystem* InSheikWalletSystem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAccessorySystem.SetSheikWalletSystem");
		
		USheikAccessorySystem_SetSheikWalletSystem_Params params {};
		params.InSheikWalletSystem = InSheikWalletSystem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAccessorySystem.ProcessDataTables
	 * 		Flags  -> ()
	 */
	void USheikAccessorySystem::ProcessDataTables()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAccessorySystem.ProcessDataTables");
		
		USheikAccessorySystem_ProcessDataTables_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAccessorySystem.LoadTextureAccessoryTable
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGDataTable*                                DataTable                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FSoftObjectPath>                     OutPendingTextureAssets                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikAccessorySystem::LoadTextureAccessoryTable(class UIGDataTable* DataTable, TArray<struct FSoftObjectPath>* OutPendingTextureAssets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAccessorySystem.LoadTextureAccessoryTable");
		
		USheikAccessorySystem_LoadTextureAccessoryTable_Params params {};
		params.DataTable = DataTable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPendingTextureAssets != nullptr)
			*OutPendingTextureAssets = params.OutPendingTextureAssets;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAccessorySystem.HandleOnTextureIconsLoadComplete
	 * 		Flags  -> ()
	 */
	void USheikAccessorySystem::HandleOnTextureIconsLoadComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAccessorySystem.HandleOnTextureIconsLoadComplete");
		
		USheikAccessorySystem_HandleOnTextureIconsLoadComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAccessorySystem.HandleOnDefaultUndergarmentsLoadComplete
	 * 		Flags  -> ()
	 */
	void USheikAccessorySystem::HandleOnDefaultUndergarmentsLoadComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAccessorySystem.HandleOnDefaultUndergarmentsLoadComplete");
		
		USheikAccessorySystem_HandleOnDefaultUndergarmentsLoadComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAccessorySystem.HandleDevOnlyAccessoryLoadComplete
	 * 		Flags  -> ()
	 */
	void USheikAccessorySystem::HandleDevOnlyAccessoryLoadComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAccessorySystem.HandleDevOnlyAccessoryLoadComplete");
		
		USheikAccessorySystem_HandleDevOnlyAccessoryLoadComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAccessorySystem.GetRegionZoomForBody
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EIGBodyType                                        BodyType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EIGBodyRegion                                      DesiredRegion                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikBodyRegionInfo                        OutRegionInfo                                              (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikAccessorySystem::GetRegionZoomForBody(EIGBodyType BodyType, EIGBodyRegion DesiredRegion, struct FSheikBodyRegionInfo* OutRegionInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAccessorySystem.GetRegionZoomForBody");
		
		USheikAccessorySystem_GetRegionZoomForBody_Params params {};
		params.BodyType = BodyType;
		params.DesiredRegion = DesiredRegion;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutRegionInfo != nullptr)
			*OutRegionInfo = params.OutRegionInfo;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAccessorySystem.GetRarityForOutfit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikOutfitInfo                            InOutfit                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	EAccessoryItemRarity USheikAccessorySystem::GetRarityForOutfit(const struct FSheikOutfitInfo& InOutfit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAccessorySystem.GetRarityForOutfit");
		
		USheikAccessorySystem_GetRarityForOutfit_Params params {};
		params.InOutfit = InOutfit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAccessorySystem.GetPerfCostForLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterLoadout                           InLoadout                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	int32_t USheikAccessorySystem::GetPerfCostForLoadout(const struct FCharacterLoadout& InLoadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAccessorySystem.GetPerfCostForLoadout");
		
		USheikAccessorySystem_GetPerfCostForLoadout_Params params {};
		params.InLoadout = InLoadout;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAccessorySystem.GetGeneralDataByType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EAccessoryType                                     Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FSheikAccessoryInfo>                 OutAccessories                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		bool                                               bFilterUnowned                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikAccessorySystem::GetGeneralDataByType(EAccessoryType Type, TArray<struct FSheikAccessoryInfo>* OutAccessories, bool bFilterUnowned)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAccessorySystem.GetGeneralDataByType");
		
		USheikAccessorySystem_GetGeneralDataByType_Params params {};
		params.Type = Type;
		params.bFilterUnowned = bFilterUnowned;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutAccessories != nullptr)
			*OutAccessories = params.OutAccessories;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAccessorySystem.GetBudgetLimit
	 * 		Flags  -> ()
	 */
	int32_t USheikAccessorySystem::GetBudgetLimit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAccessorySystem.GetBudgetLimit");
		
		USheikAccessorySystem_GetBudgetLimit_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAccessorySystem.GetBodyShapeIdByType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EIGBodyType                                        BodyType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        OutBodyShapeId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikAccessorySystem::GetBodyShapeIdByType(EIGBodyType BodyType, class FName* OutBodyShapeId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAccessorySystem.GetBodyShapeIdByType");
		
		USheikAccessorySystem_GetBodyShapeIdByType_Params params {};
		params.BodyType = BodyType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBodyShapeId != nullptr)
			*OutBodyShapeId = params.OutBodyShapeId;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAccessorySystem.GetAccessoryByWalletId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        WalletId                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EIGBodyType                                        BodyType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikAccessoryInfo                         Accessory                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikAccessorySystem::GetAccessoryByWalletId(const class FName& WalletId, EIGBodyType BodyType, struct FSheikAccessoryInfo* Accessory)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAccessorySystem.GetAccessoryByWalletId");
		
		USheikAccessorySystem_GetAccessoryByWalletId_Params params {};
		params.WalletId = WalletId;
		params.BodyType = BodyType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Accessory != nullptr)
			*Accessory = params.Accessory;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAccessorySystem.GetAccessory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ID                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EIGBodyType                                        BodyType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikAccessoryInfo                         Accessory                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikAccessorySystem::GetAccessory(const class FName& ID, EIGBodyType BodyType, struct FSheikAccessoryInfo* Accessory)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAccessorySystem.GetAccessory");
		
		USheikAccessorySystem_GetAccessory_Params params {};
		params.ID = ID;
		params.BodyType = BodyType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Accessory != nullptr)
			*Accessory = params.Accessory;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAccessorySystem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAccessorySystem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAccessorySystem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAchievementsManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAchievementsManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAchievementsManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikActorCollisionComponent.OnSurfaceHitStart
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USheikActorCollisionComponent::OnSurfaceHitStart(class AActor* OverlappedActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikActorCollisionComponent.OnSurfaceHitStart");
		
		USheikActorCollisionComponent_OnSurfaceHitStart_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikActorCollisionComponent.OnSurfaceCollisionStart
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikActorCollisionComponent::OnSurfaceCollisionStart(class AActor* OverlappedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikActorCollisionComponent.OnSurfaceCollisionStart");
		
		USheikActorCollisionComponent_OnSurfaceCollisionStart_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikActorCollisionComponent.OnSurfaceCollisionEnd
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikActorCollisionComponent::OnSurfaceCollisionEnd(class AActor* OverlappedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikActorCollisionComponent.OnSurfaceCollisionEnd");
		
		USheikActorCollisionComponent_OnSurfaceCollisionEnd_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikActorCollisionComponent.BP_OnSurfaceHitStart
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USheikActorCollisionComponent::BP_OnSurfaceHitStart(class AActor* OverlappedActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikActorCollisionComponent.BP_OnSurfaceHitStart");
		
		USheikActorCollisionComponent_BP_OnSurfaceHitStart_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikActorCollisionComponent.BP_OnSurfaceCollisionStart
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikActorCollisionComponent::BP_OnSurfaceCollisionStart(class AActor* OverlappedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikActorCollisionComponent.BP_OnSurfaceCollisionStart");
		
		USheikActorCollisionComponent_BP_OnSurfaceCollisionStart_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikActorCollisionComponent.BP_OnSurfaceCollisionEnd
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      OverlappedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikActorCollisionComponent::BP_OnSurfaceCollisionEnd(class AActor* OverlappedActor, class AActor* OtherActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikActorCollisionComponent.BP_OnSurfaceCollisionEnd");
		
		USheikActorCollisionComponent_BP_OnSurfaceCollisionEnd_Params params {};
		params.OverlappedActor = OverlappedActor;
		params.OtherActor = OtherActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikActorCollisionComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikActorCollisionComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikActorCollisionComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAgeGatingManager.QueryKidRequirements
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikAgeGatingManager::QueryKidRequirements(const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAgeGatingManager.QueryKidRequirements");
		
		USheikAgeGatingManager_QueryKidRequirements_Params params {};
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikAgeGatingManager.OnQueryKidRequirements__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bDateOfBirthRequired                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bPermissionsRequired                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikAgeGatingManager::OnQueryKidRequirements__DelegateSignature(bool bDateOfBirthRequired, bool bPermissionsRequired, bool bSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikAgeGatingManager.OnQueryKidRequirements__DelegateSignature");
		
		USheikAgeGatingManager_OnQueryKidRequirements__DelegateSignature_Params params {};
		params.bDateOfBirthRequired = bDateOfBirthRequired;
		params.bPermissionsRequired = bPermissionsRequired;
		params.bSuccessful = bSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikAgeGatingManager.OnPermissionsUpdated__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FString>                              Names                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<EKWSPermissionStatus>                       Statuses                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikAgeGatingManager::OnPermissionsUpdated__DelegateSignature(TArray<class FString> Names, TArray<EKWSPermissionStatus> Statuses)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikAgeGatingManager.OnPermissionsUpdated__DelegateSignature");
		
		USheikAgeGatingManager_OnPermissionsUpdated__DelegateSignature_Params params {};
		params.Names = Names;
		params.Statuses = Statuses;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikAgeGatingManager.OnCommitParentEmail__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikAgeGatingManager::OnCommitParentEmail__DelegateSignature(bool bSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikAgeGatingManager.OnCommitParentEmail__DelegateSignature");
		
		USheikAgeGatingManager_OnCommitParentEmail__DelegateSignature_Params params {};
		params.bSuccessful = bSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikAgeGatingManager.OnCommitDateOfBirth__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bParentEmailRequired                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikAgeGatingManager::OnCommitDateOfBirth__DelegateSignature(bool bParentEmailRequired)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikAgeGatingManager.OnCommitDateOfBirth__DelegateSignature");
		
		USheikAgeGatingManager_OnCommitDateOfBirth__DelegateSignature_Params params {};
		params.bParentEmailRequired = bParentEmailRequired;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAgeGatingManager.GetPermissions
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FString>                              Names                                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<EKWSPermissionStatus>                       Statuses                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikAgeGatingManager::GetPermissions(TArray<class FString>* Names, TArray<EKWSPermissionStatus>* Statuses)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAgeGatingManager.GetPermissions");
		
		USheikAgeGatingManager_GetPermissions_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Names != nullptr)
			*Names = params.Names;
		if (Statuses != nullptr)
			*Statuses = params.Statuses;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAgeGatingManager.GetLastCommittedParentEmail
	 * 		Flags  -> ()
	 */
	class FString USheikAgeGatingManager::GetLastCommittedParentEmail()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAgeGatingManager.GetLastCommittedParentEmail");
		
		USheikAgeGatingManager_GetLastCommittedParentEmail_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAgeGatingManager.CommitParentEmail
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ParentEmail                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikAgeGatingManager::CommitParentEmail(const class FString& ParentEmail, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAgeGatingManager.CommitParentEmail");
		
		USheikAgeGatingManager_CommitParentEmail_Params params {};
		params.ParentEmail = ParentEmail;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAgeGatingManager.CommitDateOfBirth
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDateTime                                   DateOfBirth                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikAgeGatingManager::CommitDateOfBirth(const struct FDateTime& DateOfBirth, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAgeGatingManager.CommitDateOfBirth");
		
		USheikAgeGatingManager_CommitDateOfBirth_Params params {};
		params.DateOfBirth = DateOfBirth;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAgeGatingManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAgeGatingManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAgeGatingManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIController.OnSpringboardLaunched
	 * 		Flags  -> ()
	 */
	void ASheikAIController::OnSpringboardLaunched()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIController.OnSpringboardLaunched");
		
		ASheikAIController_OnSpringboardLaunched_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikAIController.OnRoundPlacementChanged__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewPlace                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAIController::OnRoundPlacementChanged__DelegateSignature(int32_t NewPlace)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikAIController.OnRoundPlacementChanged__DelegateSignature");
		
		ASheikAIController_OnRoundPlacementChanged__DelegateSignature_Params params {};
		params.NewPlace = NewPlace;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIController.HasPlayerPlacementBeenProcessed
	 * 		Flags  -> ()
	 */
	bool ASheikAIController::HasPlayerPlacementBeenProcessed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIController.HasPlayerPlacementBeenProcessed");
		
		ASheikAIController_HasPlayerPlacementBeenProcessed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIController.GetSheikGameMode
	 * 		Flags  -> ()
	 */
	class ASheikGameModeCommon* ASheikAIController::GetSheikGameMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIController.GetSheikGameMode");
		
		ASheikAIController_GetSheikGameMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIController.GetRoundPlacement
	 * 		Flags  -> ()
	 */
	int32_t ASheikAIController::GetRoundPlacement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIController.GetRoundPlacement");
		
		ASheikAIController_GetRoundPlacement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIController.GetAIManager
	 * 		Flags  -> ()
	 */
	class USheikAIManager* ASheikAIController::GetAIManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIController.GetAIManager");
		
		ASheikAIController_GetAIManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIController.EnableClimbSurfaceChecks
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bInShouldCheckForClimbableSurfaces                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAIController::EnableClimbSurfaceChecks(bool bInShouldCheckForClimbableSurfaces)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIController.EnableClimbSurfaceChecks");
		
		ASheikAIController_EnableClimbSurfaceChecks_Params params {};
		params.bInShouldCheckForClimbableSurfaces = bInShouldCheckForClimbableSurfaces;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIController.BPNavAreaHandleEnteringEdgeNavLinkSegment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            SegmentStartIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikNavAreaFlag                                  NavLinkType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikAIController::BPNavAreaHandleEnteringEdgeNavLinkSegment(int32_t SegmentStartIndex, ESheikNavAreaFlag NavLinkType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIController.BPNavAreaHandleEnteringEdgeNavLinkSegment");
		
		ASheikAIController_BPNavAreaHandleEnteringEdgeNavLinkSegment_Params params {};
		params.SegmentStartIndex = SegmentStartIndex;
		params.NavLinkType = NavLinkType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIController.BPNavArea4HandleFollowPathSegment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGCharacterMovementComponent*               MoveComp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikAIController::BPNavArea4HandleFollowPathSegment(class UIGCharacterMovementComponent* MoveComp, float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIController.BPNavArea4HandleFollowPathSegment");
		
		ASheikAIController_BPNavArea4HandleFollowPathSegment_Params params {};
		params.MoveComp = MoveComp;
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIController.BPNavArea4HandleEnteringNavLinkSegment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            SegmentStartIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikAIController::BPNavArea4HandleEnteringNavLinkSegment(int32_t SegmentStartIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIController.BPNavArea4HandleEnteringNavLinkSegment");
		
		ASheikAIController_BPNavArea4HandleEnteringNavLinkSegment_Params params {};
		params.SegmentStartIndex = SegmentStartIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIController.BPNavArea3HandleFollowPathSegment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGCharacterMovementComponent*               MoveComp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikAIController::BPNavArea3HandleFollowPathSegment(class UIGCharacterMovementComponent* MoveComp, float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIController.BPNavArea3HandleFollowPathSegment");
		
		ASheikAIController_BPNavArea3HandleFollowPathSegment_Params params {};
		params.MoveComp = MoveComp;
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIController.BPNavArea3HandleEnteringNavLinkSegment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            SegmentStartIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikAIController::BPNavArea3HandleEnteringNavLinkSegment(int32_t SegmentStartIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIController.BPNavArea3HandleEnteringNavLinkSegment");
		
		ASheikAIController_BPNavArea3HandleEnteringNavLinkSegment_Params params {};
		params.SegmentStartIndex = SegmentStartIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIController.BPNavArea2HandleFollowPathSegment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGCharacterMovementComponent*               MoveComp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikAIController::BPNavArea2HandleFollowPathSegment(class UIGCharacterMovementComponent* MoveComp, float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIController.BPNavArea2HandleFollowPathSegment");
		
		ASheikAIController_BPNavArea2HandleFollowPathSegment_Params params {};
		params.MoveComp = MoveComp;
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIController.BPNavArea2HandleEnteringNavLinkSegment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            SegmentStartIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikAIController::BPNavArea2HandleEnteringNavLinkSegment(int32_t SegmentStartIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIController.BPNavArea2HandleEnteringNavLinkSegment");
		
		ASheikAIController_BPNavArea2HandleEnteringNavLinkSegment_Params params {};
		params.SegmentStartIndex = SegmentStartIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIController.BPNavArea1HandleFollowPathSegment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGCharacterMovementComponent*               MoveComp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikAIController::BPNavArea1HandleFollowPathSegment(class UIGCharacterMovementComponent* MoveComp, float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIController.BPNavArea1HandleFollowPathSegment");
		
		ASheikAIController_BPNavArea1HandleFollowPathSegment_Params params {};
		params.MoveComp = MoveComp;
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIController.BPNavArea1HandleEnteringNavLinkSegment
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            SegmentStartIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikAIController::BPNavArea1HandleEnteringNavLinkSegment(int32_t SegmentStartIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIController.BPNavArea1HandleEnteringNavLinkSegment");
		
		ASheikAIController_BPNavArea1HandleEnteringNavLinkSegment_Params params {};
		params.SegmentStartIndex = SegmentStartIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikAIController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikAIController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAIController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.UnstashItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EIGInventorySlot                                   Slot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikAICharacterController::UnstashItem(EIGInventorySlot Slot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.UnstashItem");
		
		ASheikAICharacterController_UnstashItem_Params params {};
		params.Slot = Slot;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.UnregisterNavigation
	 * 		Flags  -> ()
	 */
	void ASheikAICharacterController::UnregisterNavigation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.UnregisterNavigation");
		
		ASheikAICharacterController_UnregisterNavigation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.TryClaimInteractable
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      InInteractable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikAICharacterController::TryClaimInteractable(class AActor* InInteractable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.TryClaimInteractable");
		
		ASheikAICharacterController_TryClaimInteractable_Params params {};
		params.InInteractable = InInteractable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.TryClaimCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikCharacter*                             InCharacter                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bForce                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikAICharacterController::TryClaimCharacter(class ASheikCharacter* InCharacter, bool bForce)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.TryClaimCharacter");
		
		ASheikAICharacterController_TryClaimCharacter_Params params {};
		params.InCharacter = InCharacter;
		params.bForce = bForce;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.ToggleOverrideLootSpawn
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bInShouldOverrideInventorySpawn                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInShouldOverrideSpecialMoveSpawn                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::ToggleOverrideLootSpawn(bool bInShouldOverrideInventorySpawn, bool bInShouldOverrideSpecialMoveSpawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.ToggleOverrideLootSpawn");
		
		ASheikAICharacterController_ToggleOverrideLootSpawn_Params params {};
		params.bInShouldOverrideInventorySpawn = bInShouldOverrideInventorySpawn;
		params.bInShouldOverrideSpecialMoveSpawn = bInShouldOverrideSpecialMoveSpawn;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.ToggleFallDamageEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::ToggleFallDamageEnabled(bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.ToggleFallDamageEnabled");
		
		ASheikAICharacterController_ToggleFallDamageEnabled_Params params {};
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.StopObjectInteraction
	 * 		Flags  -> ()
	 */
	bool ASheikAICharacterController::StopObjectInteraction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.StopObjectInteraction");
		
		ASheikAICharacterController_StopObjectInteraction_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.StopBrain
	 * 		Flags  -> ()
	 */
	void ASheikAICharacterController::StopBrain()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.StopBrain");
		
		ASheikAICharacterController_StopBrain_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.StashHeldItem
	 * 		Flags  -> ()
	 */
	bool ASheikAICharacterController::StashHeldItem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.StashHeldItem");
		
		ASheikAICharacterController_StashHeldItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.StartObjectInteraction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     InObject                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikAICharacterController::StartObjectInteraction(class UObject* InObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.StartObjectInteraction");
		
		ASheikAICharacterController_StartObjectInteraction_Params params {};
		params.InObject = InObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.StartNewBehaviorTree
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        NewBehaviorProfile                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::StartNewBehaviorTree(const class FName& NewBehaviorProfile)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.StartNewBehaviorTree");
		
		ASheikAICharacterController_StartNewBehaviorTree_Params params {};
		params.NewBehaviorProfile = NewBehaviorProfile;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.StartNewAIProfile
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ProfileName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::StartNewAIProfile(const class FName& ProfileName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.StartNewAIProfile");
		
		ASheikAICharacterController_StartNewAIProfile_Params params {};
		params.ProfileName = ProfileName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.ResetInputDirection
	 * 		Flags  -> ()
	 */
	void ASheikAICharacterController::ResetInputDirection()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.ResetInputDirection");
		
		ASheikAICharacterController_ResetInputDirection_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.ResetBrain
	 * 		Flags  -> ()
	 */
	void ASheikAICharacterController::ResetBrain()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.ResetBrain");
		
		ASheikAICharacterController_ResetBrain_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.ReleaseInteractable
	 * 		Flags  -> ()
	 */
	void ASheikAICharacterController::ReleaseInteractable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.ReleaseInteractable");
		
		ASheikAICharacterController_ReleaseInteractable_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.ReleaseInputEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EMoveTrack                                         InputEventTrack                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::ReleaseInputEvent(EMoveTrack InputEventTrack)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.ReleaseInputEvent");
		
		ASheikAICharacterController_ReleaseInputEvent_Params params {};
		params.InputEventTrack = InputEventTrack;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.ReleaseClaimedTargets
	 * 		Flags  -> ()
	 */
	void ASheikAICharacterController::ReleaseClaimedTargets()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.ReleaseClaimedTargets");
		
		ASheikAICharacterController_ReleaseClaimedTargets_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.ReleaseCharacter
	 * 		Flags  -> ()
	 */
	void ASheikAICharacterController::ReleaseCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.ReleaseCharacter");
		
		ASheikAICharacterController_ReleaseCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.ReleaseBlock
	 * 		Flags  -> ()
	 */
	void ASheikAICharacterController::ReleaseBlock()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.ReleaseBlock");
		
		ASheikAICharacterController_ReleaseBlock_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.RegisterNavigation
	 * 		Flags  -> ()
	 */
	void ASheikAICharacterController::RegisterNavigation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.RegisterNavigation");
		
		ASheikAICharacterController_RegisterNavigation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.RecordInputDirectionWorld
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     WorldDirection                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TimeToPress                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::RecordInputDirectionWorld(const struct FVector& WorldDirection, float TimeToPress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.RecordInputDirectionWorld");
		
		ASheikAICharacterController_RecordInputDirectionWorld_Params params {};
		params.WorldDirection = WorldDirection;
		params.TimeToPress = TimeToPress;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.RecordInputDirectionLocal
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              RightVal                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ForwardVal                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TimeToPress                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::RecordInputDirectionLocal(float RightVal, float ForwardVal, float TimeToPress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.RecordInputDirectionLocal");
		
		ASheikAICharacterController_RecordInputDirectionLocal_Params params {};
		params.RightVal = RightVal;
		params.ForwardVal = ForwardVal;
		params.TimeToPress = TimeToPress;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.RecordInputDirection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EMoveInputDirection                                InputDirection                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TimeToPress                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::RecordInputDirection(EMoveInputDirection InputDirection, float TimeToPress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.RecordInputDirection");
		
		ASheikAICharacterController_RecordInputDirection_Params params {};
		params.InputDirection = InputDirection;
		params.TimeToPress = TimeToPress;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.PressInputEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EMoveTrack                                         InputEventTrack                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TimeToPress                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::PressInputEvent(EMoveTrack InputEventTrack, float TimeToPress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.PressInputEvent");
		
		ASheikAICharacterController_PressInputEvent_Params params {};
		params.InputEventTrack = InputEventTrack;
		params.TimeToPress = TimeToPress;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.PressBlock
	 * 		Flags  -> ()
	 */
	void ASheikAICharacterController::PressBlock()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.PressBlock");
		
		ASheikAICharacterController_PressBlock_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.OnNewAIProfileStarted
	 * 		Flags  -> ()
	 */
	void ASheikAICharacterController::OnNewAIProfileStarted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.OnNewAIProfileStarted");
		
		ASheikAICharacterController_OnNewAIProfileStarted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.OnCharacterInputToggled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsEnabled                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::OnCharacterInputToggled(bool bIsEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.OnCharacterInputToggled");
		
		ASheikAICharacterController_OnCharacterInputToggled_Params params {};
		params.bIsEnabled = bIsEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.OnAttackConnect
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FQueuedAttack                               InQueuedAttack                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::OnAttackConnect(const struct FQueuedAttack& InQueuedAttack)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.OnAttackConnect");
		
		ASheikAICharacterController_OnAttackConnect_Params params {};
		params.InQueuedAttack = InQueuedAttack;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.IsInteractableTargetable
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      InInteractable                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikAICharacterController::IsInteractableTargetable(class AActor* InInteractable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.IsInteractableTargetable");
		
		ASheikAICharacterController_IsInteractableTargetable_Params params {};
		params.InInteractable = InInteractable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.IsCharacterTargetable
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikCharacter*                             InCharacter                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikAICharacterController::IsCharacterTargetable(class ASheikCharacter* InCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.IsCharacterTargetable");
		
		ASheikAICharacterController_IsCharacterTargetable_Params params {};
		params.InCharacter = InCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.HandleOnMoveMontageStarted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                MoveMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AIGCharacter*                                Char                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::HandleOnMoveMontageStarted(class UAnimMontage* MoveMontage, class AIGCharacter* Char)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.HandleOnMoveMontageStarted");
		
		ASheikAICharacterController_HandleOnMoveMontageStarted_Params params {};
		params.MoveMontage = MoveMontage;
		params.Char = Char;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.HandleOnMoveMontageEnded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                MoveMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInterrupted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::HandleOnMoveMontageEnded(class UAnimMontage* MoveMontage, bool bInterrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.HandleOnMoveMontageEnded");
		
		ASheikAICharacterController_HandleOnMoveMontageEnded_Params params {};
		params.MoveMontage = MoveMontage;
		params.bInterrupted = bInterrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.HandleOnCharacterDied
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ECauseOfDeath                                      Cause                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::HandleOnCharacterDied(ECauseOfDeath Cause)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.HandleOnCharacterDied");
		
		ASheikAICharacterController_HandleOnCharacterDied_Params params {};
		params.Cause = Cause;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.GetSpecialMoveConsumerComponent
	 * 		Flags  -> ()
	 */
	class UIGSpecialMoveConsumer* ASheikAICharacterController::GetSpecialMoveConsumerComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.GetSpecialMoveConsumerComponent");
		
		ASheikAICharacterController_GetSpecialMoveConsumerComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.GetLaunchAngle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     LaunchTarget                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float ASheikAICharacterController::GetLaunchAngle(const struct FVector& LaunchTarget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.GetLaunchAngle");
		
		ASheikAICharacterController_GetLaunchAngle_Params params {};
		params.LaunchTarget = LaunchTarget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.GetDistanceNeededToHaltFreefallVelocity
	 * 		Flags  -> ()
	 */
	float ASheikAICharacterController::GetDistanceNeededToHaltFreefallVelocity()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.GetDistanceNeededToHaltFreefallVelocity");
		
		ASheikAICharacterController_GetDistanceNeededToHaltFreefallVelocity_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.GetCurrentTargetLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     OutLocation                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::GetCurrentTargetLocation(struct FVector* OutLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.GetCurrentTargetLocation");
		
		ASheikAICharacterController_GetCurrentTargetLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutLocation != nullptr)
			*OutLocation = params.OutLocation;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.GetActiveAIProfile
	 * 		Flags  -> ()
	 */
	struct FSheikAIProfileOptions ASheikAICharacterController::GetActiveAIProfile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.GetActiveAIProfile");
		
		ASheikAICharacterController_GetActiveAIProfile_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.ConsumeSpecialMoveMagazine
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bAssignToSlotOne                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UIGMoveMontage*                              MoveMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EMoveTier                                          ExecutionTier                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::ConsumeSpecialMoveMagazine(bool bAssignToSlotOne, class UIGMoveMontage* MoveMontage, EMoveTier ExecutionTier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.ConsumeSpecialMoveMagazine");
		
		ASheikAICharacterController_ConsumeSpecialMoveMagazine_Params params {};
		params.bAssignToSlotOne = bAssignToSlotOne;
		params.MoveMontage = MoveMontage;
		params.ExecutionTier = ExecutionTier;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.BPOnMoveMontageFinished
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                MoveMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInterrupted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::BPOnMoveMontageFinished(class UAnimMontage* MoveMontage, bool bInterrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.BPOnMoveMontageFinished");
		
		ASheikAICharacterController_BPOnMoveMontageFinished_Params params {};
		params.MoveMontage = MoveMontage;
		params.bInterrupted = bInterrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.BPOnAttackResultDetermined
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EQueuedAttackResult                                AttackResult                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      AttackedActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::BPOnAttackResultDetermined(EQueuedAttackResult AttackResult, class AActor* AttackedActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.BPOnAttackResultDetermined");
		
		ASheikAICharacterController_BPOnAttackResultDetermined_Params params {};
		params.AttackResult = AttackResult;
		params.AttackedActor = AttackedActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.AttemptResurrectTeammate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikCharacter*                             InTeammate                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikAICharacterController::AttemptResurrectTeammate(class ASheikCharacter* InTeammate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.AttemptResurrectTeammate");
		
		ASheikAICharacterController_AttemptResurrectTeammate_Params params {};
		params.InTeammate = InTeammate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAICharacterController.AssignSpecialMoveToSlot
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bAssignToSlotOne                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UIGMoveMontage*                              MoveMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EMoveTier                                          ExecutionTier                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAICharacterController::AssignSpecialMoveToSlot(bool bAssignToSlotOne, class UIGMoveMontage* MoveMontage, EMoveTier ExecutionTier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAICharacterController.AssignSpecialMoveToSlot");
		
		ASheikAICharacterController_AssignSpecialMoveToSlot_Params params {};
		params.bAssignToSlotOne = bAssignToSlotOne;
		params.MoveMontage = MoveMontage;
		params.ExecutionTier = ExecutionTier;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikAICharacterController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikAICharacterController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAICharacterController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikAIDeadController.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikAIDeadController::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAIDeadController");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAIGameInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAIGameInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAIGameInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIManager.ShouldUseStaticNavInvokers
	 * 		Flags  -> ()
	 */
	bool USheikAIManager::ShouldUseStaticNavInvokers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIManager.ShouldUseStaticNavInvokers");
		
		USheikAIManager_ShouldUseStaticNavInvokers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIManager.ShouldUseBotProfileImprovements
	 * 		Flags  -> ()
	 */
	bool USheikAIManager::ShouldUseBotProfileImprovements()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIManager.ShouldUseBotProfileImprovements");
		
		USheikAIManager_ShouldUseBotProfileImprovements_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIManager.RequestLaunchTarget
	 * 		Flags  -> ()
	 */
	struct FVector USheikAIManager::RequestLaunchTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIManager.RequestLaunchTarget");
		
		USheikAIManager_RequestLaunchTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIManager.ReportTrapped
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikAICharacterController*                 InBotController                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EBotTrappedSource                                  Reason                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikAIManager::ReportTrapped(class ASheikAICharacterController* InBotController, EBotTrappedSource Reason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIManager.ReportTrapped");
		
		USheikAIManager_ReportTrapped_Params params {};
		params.InBotController = InBotController;
		params.Reason = Reason;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIManager.OnRingShrinkEnd
	 * 		Flags  -> ()
	 */
	void USheikAIManager::OnRingShrinkEnd()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIManager.OnRingShrinkEnd");
		
		USheikAIManager_OnRingShrinkEnd_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIManager.OnGameFlowStateUpdated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EGameFlowState                                     OldGameFlowState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EGameFlowState                                     NewGameFlowState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikAIManager::OnGameFlowStateUpdated(EGameFlowState OldGameFlowState, EGameFlowState NewGameFlowState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIManager.OnGameFlowStateUpdated");
		
		USheikAIManager_OnGameFlowStateUpdated_Params params {};
		params.OldGameFlowState = OldGameFlowState;
		params.NewGameFlowState = NewGameFlowState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIManager.OnEnterFinalRing
	 * 		Flags  -> ()
	 */
	void USheikAIManager::OnEnterFinalRing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIManager.OnEnterFinalRing");
		
		USheikAIManager_OnEnterFinalRing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIManager.OnEmoteAssetsLoadedComplete
	 * 		Flags  -> ()
	 */
	void USheikAIManager::OnEmoteAssetsLoadedComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIManager.OnEmoteAssetsLoadedComplete");
		
		USheikAIManager_OnEmoteAssetsLoadedComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIManager.IsWeaponCombatAllowed
	 * 		Flags  -> ()
	 */
	bool USheikAIManager::IsWeaponCombatAllowed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIManager.IsWeaponCombatAllowed");
		
		USheikAIManager_IsWeaponCombatAllowed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIManager.IsRingShrinking
	 * 		Flags  -> ()
	 */
	bool USheikAIManager::IsRingShrinking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIManager.IsRingShrinking");
		
		USheikAIManager_IsRingShrinking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIManager.IsActorInPostShrinkRing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      InActor                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikAIManager::IsActorInPostShrinkRing(class AActor* InActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIManager.IsActorInPostShrinkRing");
		
		USheikAIManager_IsActorInPostShrinkRing_Params params {};
		params.InActor = InActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIManager.GetUnlockedEmoteByName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        EmoteDisplayName                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikBotEmoteInfo                          OutEmoteInfo                                               (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikAIManager::GetUnlockedEmoteByName(const class FName& EmoteDisplayName, struct FSheikBotEmoteInfo* OutEmoteInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIManager.GetUnlockedEmoteByName");
		
		USheikAIManager_GetUnlockedEmoteByName_Params params {};
		params.EmoteDisplayName = EmoteDisplayName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutEmoteInfo != nullptr)
			*OutEmoteInfo = params.OutEmoteInfo;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIManager.GetRandomUnlockedEmote
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FGameplayTagContainer                       GameplayTags                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FSheikBotEmoteInfo                          OutEmoteInfo                                               (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikAIManager::GetRandomUnlockedEmote(const struct FGameplayTagContainer& GameplayTags, struct FSheikBotEmoteInfo* OutEmoteInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIManager.GetRandomUnlockedEmote");
		
		USheikAIManager_GetRandomUnlockedEmote_Params params {};
		params.GameplayTags = GameplayTags;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutEmoteInfo != nullptr)
			*OutEmoteInfo = params.OutEmoteInfo;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIManager.GetBotName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      OutName                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikAIManager::GetBotName(class FString* OutName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIManager.GetBotName");
		
		USheikAIManager_GetBotName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutName != nullptr)
			*OutName = params.OutName;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIManager.GetAIGameInfo
	 * 		Flags  -> ()
	 */
	class USheikAIGameInfo* USheikAIManager::GetAIGameInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIManager.GetAIGameInfo");
		
		USheikAIManager_GetAIGameInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAIManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAIManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAIManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAINavArea.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAINavArea::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAINavArea");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAINavArea_BlueprintCustom1.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAINavArea_BlueprintCustom1::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAINavArea_BlueprintCustom1");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAINavArea_BlueprintCustom2.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAINavArea_BlueprintCustom2::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAINavArea_BlueprintCustom2");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAINavArea_BlueprintCustom3.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAINavArea_BlueprintCustom3::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAINavArea_BlueprintCustom3");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAINavArea_BlueprintCustom4.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAINavArea_BlueprintCustom4::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAINavArea_BlueprintCustom4");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAINavArea_Jump.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAINavArea_Jump::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAINavArea_Jump");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAINavArea_Fall.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAINavArea_Fall::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAINavArea_Fall");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIPathFollowingComponent.GetPathLocationByIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            SegmentIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FVector USheikAIPathFollowingComponent::GetPathLocationByIndex(int32_t SegmentIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIPathFollowingComponent.GetPathLocationByIndex");
		
		USheikAIPathFollowingComponent_GetPathLocationByIndex_Params params {};
		params.SegmentIndex = SegmentIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAIPathFollowingComponent.ForceNextPathSegment
	 * 		Flags  -> ()
	 */
	void USheikAIPathFollowingComponent::ForceNextPathSegment()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAIPathFollowingComponent.ForceNextPathSegment");
		
		USheikAIPathFollowingComponent_ForceNextPathSegment_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAIPathFollowingComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAIPathFollowingComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAIPathFollowingComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAISpawner.TriggerSpawner
	 * 		Flags  -> ()
	 */
	bool ASheikAISpawner::TriggerSpawner()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAISpawner.TriggerSpawner");
		
		ASheikAISpawner_TriggerSpawner_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikAISpawner.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikAISpawner::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAISpawner");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAISpawnerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAISpawnerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAISpawnerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikBotItemDefinitions.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikBotItemDefinitions::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikBotItemDefinitions");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAIProfile.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAIProfile::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAIProfile");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.UpdateActiveAnnouncement
	 * 		Flags  -> ()
	 */
	void USheikAnnouncementManager::UpdateActiveAnnouncement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.UpdateActiveAnnouncement");
		
		USheikAnnouncementManager_UpdateActiveAnnouncement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.ShowAnnouncement_BP
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikAnnouncement                          AnnouncementData                                           (Parm, NativeAccessSpecifierPublic)
	 */
	void USheikAnnouncementManager::ShowAnnouncement_BP(const struct FSheikAnnouncement& AnnouncementData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.ShowAnnouncement_BP");
		
		USheikAnnouncementManager_ShowAnnouncement_BP_Params params {};
		params.AnnouncementData = AnnouncementData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.SetSpeedFactor_BP
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            AnnouncementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              NewSpeedFactor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikAnnouncementManager::SetSpeedFactor_BP(int32_t AnnouncementId, float NewSpeedFactor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.SetSpeedFactor_BP");
		
		USheikAnnouncementManager_SetSpeedFactor_BP_Params params {};
		params.AnnouncementId = AnnouncementId;
		params.NewSpeedFactor = NewSpeedFactor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.QueueAnnouncement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikAnnouncement                          AnnouncementData                                           (Parm, NativeAccessSpecifierPublic)
	 */
	int32_t USheikAnnouncementManager::QueueAnnouncement(const struct FSheikAnnouncement& AnnouncementData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.QueueAnnouncement");
		
		USheikAnnouncementManager_QueueAnnouncement_Params params {};
		params.AnnouncementData = AnnouncementData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikAnnouncementManager.OnSheikAnnouncementDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            AnnouncementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikAnnouncementType                             AnnouncementType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikAnnouncementManager::OnSheikAnnouncementDelegate__DelegateSignature(int32_t AnnouncementId, ESheikAnnouncementType AnnouncementType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikAnnouncementManager.OnSheikAnnouncementDelegate__DelegateSignature");
		
		USheikAnnouncementManager_OnSheikAnnouncementDelegate__DelegateSignature_Params params {};
		params.AnnouncementId = AnnouncementId;
		params.AnnouncementType = AnnouncementType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.IsAnnouncementPlaying
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            AnnouncementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikAnnouncementManager::IsAnnouncementPlaying(int32_t AnnouncementId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.IsAnnouncementPlaying");
		
		USheikAnnouncementManager_IsAnnouncementPlaying_Params params {};
		params.AnnouncementId = AnnouncementId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.IsAnnouncementBeingShown
	 * 		Flags  -> ()
	 */
	bool USheikAnnouncementManager::IsAnnouncementBeingShown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.IsAnnouncementBeingShown");
		
		USheikAnnouncementManager_IsAnnouncementBeingShown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.HandleOnAnnouncementForciblyClosed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            AnnouncementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikAnnouncementManager::HandleOnAnnouncementForciblyClosed(int32_t AnnouncementId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.HandleOnAnnouncementForciblyClosed");
		
		USheikAnnouncementManager_HandleOnAnnouncementForciblyClosed_Params params {};
		params.AnnouncementId = AnnouncementId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.HandleOnAnnouncementClosed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            AnnouncementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikAnnouncementManager::HandleOnAnnouncementClosed(int32_t AnnouncementId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.HandleOnAnnouncementClosed");
		
		USheikAnnouncementManager_HandleOnAnnouncementClosed_Params params {};
		params.AnnouncementId = AnnouncementId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.GetCurrentlyActiveAnnouncement
	 * 		Flags  -> ()
	 */
	int32_t USheikAnnouncementManager::GetCurrentlyActiveAnnouncement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.GetCurrentlyActiveAnnouncement");
		
		USheikAnnouncementManager_GetCurrentlyActiveAnnouncement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.GetAnnouncementType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            AnnouncementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	ESheikAnnouncementType USheikAnnouncementManager::GetAnnouncementType(int32_t AnnouncementId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.GetAnnouncementType");
		
		USheikAnnouncementManager_GetAnnouncementType_Params params {};
		params.AnnouncementId = AnnouncementId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.GetAnnouncementData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            AnnouncementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FSheikAnnouncement USheikAnnouncementManager::GetAnnouncementData(int32_t AnnouncementId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.GetAnnouncementData");
		
		USheikAnnouncementManager_GetAnnouncementData_Params params {};
		params.AnnouncementId = AnnouncementId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.DoesAnnouncementWithIdExist
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            AnnouncementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikAnnouncementManager::DoesAnnouncementWithIdExist(int32_t AnnouncementId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.DoesAnnouncementWithIdExist");
		
		USheikAnnouncementManager_DoesAnnouncementWithIdExist_Params params {};
		params.AnnouncementId = AnnouncementId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.DeactivateAllAnnouncementWidgets
	 * 		Flags  -> ()
	 */
	void USheikAnnouncementManager::DeactivateAllAnnouncementWidgets()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.DeactivateAllAnnouncementWidgets");
		
		USheikAnnouncementManager_DeactivateAllAnnouncementWidgets_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.CloseAnnouncement_BP
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            AnnouncementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikAnnouncementManager::CloseAnnouncement_BP(int32_t AnnouncementId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.CloseAnnouncement_BP");
		
		USheikAnnouncementManager_CloseAnnouncement_BP_Params params {};
		params.AnnouncementId = AnnouncementId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.CloseAnnouncement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            AnnouncementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikAnnouncementManager::CloseAnnouncement(int32_t AnnouncementId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.CloseAnnouncement");
		
		USheikAnnouncementManager_CloseAnnouncement_Params params {};
		params.AnnouncementId = AnnouncementId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.CloseAllAnnouncements
	 * 		Flags  -> ()
	 */
	void USheikAnnouncementManager::CloseAllAnnouncements()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.CloseAllAnnouncements");
		
		USheikAnnouncementManager_CloseAllAnnouncements_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementManager.CloseActiveAnnouncement
	 * 		Flags  -> ()
	 */
	void USheikAnnouncementManager::CloseActiveAnnouncement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementManager.CloseActiveAnnouncement");
		
		USheikAnnouncementManager_CloseActiveAnnouncement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAnnouncementManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAnnouncementManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAnnouncementManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementWidget.StartAnnouncement_BP
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikAnnouncement                          SheikAnnouncementData                                      (Parm, NativeAccessSpecifierPublic)
	 */
	void USheikAnnouncementWidget::StartAnnouncement_BP(const struct FSheikAnnouncement& SheikAnnouncementData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementWidget.StartAnnouncement_BP");
		
		USheikAnnouncementWidget_StartAnnouncement_BP_Params params {};
		params.SheikAnnouncementData = SheikAnnouncementData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementWidget.StartAnnouncement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikAnnouncement                          SheikAnnouncementData                                      (Parm, NativeAccessSpecifierPublic)
	 */
	void USheikAnnouncementWidget::StartAnnouncement(const struct FSheikAnnouncement& SheikAnnouncementData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementWidget.StartAnnouncement");
		
		USheikAnnouncementWidget_StartAnnouncement_Params params {};
		params.SheikAnnouncementData = SheikAnnouncementData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementWidget.SetSpeedFactor_BP
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewSpeedFactor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikAnnouncementWidget::SetSpeedFactor_BP(float NewSpeedFactor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementWidget.SetSpeedFactor_BP");
		
		USheikAnnouncementWidget_SetSpeedFactor_BP_Params params {};
		params.NewSpeedFactor = NewSpeedFactor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementWidget.SetSpeedFactor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewSpeedFactor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikAnnouncementWidget::SetSpeedFactor(float NewSpeedFactor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementWidget.SetSpeedFactor");
		
		USheikAnnouncementWidget_SetSpeedFactor_Params params {};
		params.NewSpeedFactor = NewSpeedFactor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikAnnouncementWidget.OnSpeedFactorChanged__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewSpeedFactor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikAnnouncementWidget::OnSpeedFactorChanged__DelegateSignature(float NewSpeedFactor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikAnnouncementWidget.OnSpeedFactorChanged__DelegateSignature");
		
		USheikAnnouncementWidget_OnSpeedFactorChanged__DelegateSignature_Params params {};
		params.NewSpeedFactor = NewSpeedFactor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikAnnouncementWidget.OnAnnouncementStateChanged__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            AnnouncementId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikAnnouncementWidget::OnAnnouncementStateChanged__DelegateSignature(int32_t AnnouncementId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikAnnouncementWidget.OnAnnouncementStateChanged__DelegateSignature");
		
		USheikAnnouncementWidget_OnAnnouncementStateChanged__DelegateSignature_Params params {};
		params.AnnouncementId = AnnouncementId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementWidget.OnAnnouncementEnded
	 * 		Flags  -> ()
	 */
	void USheikAnnouncementWidget::OnAnnouncementEnded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementWidget.OnAnnouncementEnded");
		
		USheikAnnouncementWidget_OnAnnouncementEnded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementWidget.IsAnnouncementPlaying
	 * 		Flags  -> ()
	 */
	bool USheikAnnouncementWidget::IsAnnouncementPlaying()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementWidget.IsAnnouncementPlaying");
		
		USheikAnnouncementWidget_IsAnnouncementPlaying_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementWidget.GetSpeedFactor
	 * 		Flags  -> ()
	 */
	float USheikAnnouncementWidget::GetSpeedFactor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementWidget.GetSpeedFactor");
		
		USheikAnnouncementWidget_GetSpeedFactor_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementWidget.GetAnnouncementId
	 * 		Flags  -> ()
	 */
	int32_t USheikAnnouncementWidget::GetAnnouncementId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementWidget.GetAnnouncementId");
		
		USheikAnnouncementWidget_GetAnnouncementId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementWidget.ForciblyCloseAnnouncement
	 * 		Flags  -> ()
	 */
	void USheikAnnouncementWidget::ForciblyCloseAnnouncement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementWidget.ForciblyCloseAnnouncement");
		
		USheikAnnouncementWidget_ForciblyCloseAnnouncement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAnnouncementWidget.CloseAnnouncement_BP
	 * 		Flags  -> ()
	 */
	void USheikAnnouncementWidget::CloseAnnouncement_BP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAnnouncementWidget.CloseAnnouncement_BP");
		
		USheikAnnouncementWidget_CloseAnnouncement_BP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAnnouncementWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAnnouncementWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAnnouncementWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAudioHandlerActor.OnTimeTillLaunchChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            TimeTillLaunch                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAudioHandlerActor::OnTimeTillLaunchChanged(int32_t TimeTillLaunch)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAudioHandlerActor.OnTimeTillLaunchChanged");
		
		ASheikAudioHandlerActor_OnTimeTillLaunchChanged_Params params {};
		params.TimeTillLaunch = TimeTillLaunch;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikAudioHandlerActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikAudioHandlerActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAudioHandlerActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMusicDataAsset.GetSheikMusicInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        MusicName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikMusicInfo                             SheikMusicInfo                                             (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		bool                                               IsFound                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMusicDataAsset::GetSheikMusicInfo(const class FName& MusicName, struct FSheikMusicInfo* SheikMusicInfo, bool* IsFound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMusicDataAsset.GetSheikMusicInfo");
		
		USheikMusicDataAsset_GetSheikMusicInfo_Params params {};
		params.MusicName = MusicName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (SheikMusicInfo != nullptr)
			*SheikMusicInfo = params.SheikMusicInfo;
		if (IsFound != nullptr)
			*IsFound = params.IsFound;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikMusicDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikMusicDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikMusicDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAudioMusicManager.TriggerMusic
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        TriggerName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsBackgroundMusic                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikAudioMusicManager::TriggerMusic(const class FName& TriggerName, bool bIsBackgroundMusic)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAudioMusicManager.TriggerMusic");
		
		ASheikAudioMusicManager_TriggerMusic_Params params {};
		params.TriggerName = TriggerName;
		params.bIsBackgroundMusic = bIsBackgroundMusic;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikAudioMusicManager.StopCurrentMusic
	 * 		Flags  -> ()
	 */
	void ASheikAudioMusicManager::StopCurrentMusic()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikAudioMusicManager.StopCurrentMusic");
		
		ASheikAudioMusicManager_StopCurrentMusic_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikAudioMusicManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikAudioMusicManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAudioMusicManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikAutoLedgeVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikAutoLedgeVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAutoLedgeVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikBasicStructure.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikBasicStructure::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikBasicStructure");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikScreenBase.OnUpdateInputGroupEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USheikWidgetBase*                            Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikScreenBase::OnUpdateInputGroupEvent(class USheikWidgetBase* Widget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikScreenBase.OnUpdateInputGroupEvent");
		
		USheikScreenBase_OnUpdateInputGroupEvent_Params params {};
		params.Widget = Widget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikScreenBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikScreenBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikScreenBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBattlePassScreen.SimulatePurchaseButtonSelected
	 * 		Flags  -> ()
	 */
	void USheikBattlePassScreen::SimulatePurchaseButtonSelected()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBattlePassScreen.SimulatePurchaseButtonSelected");
		
		USheikBattlePassScreen_SimulatePurchaseButtonSelected_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBattlePassScreen.AreFullscreenVirtualCurrencyCelebrationsAllowed
	 * 		Flags  -> ()
	 */
	bool USheikBattlePassScreen::AreFullscreenVirtualCurrencyCelebrationsAllowed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBattlePassScreen.AreFullscreenVirtualCurrencyCelebrationsAllowed");
		
		USheikBattlePassScreen_AreFullscreenVirtualCurrencyCelebrationsAllowed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikBattlePassScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikBattlePassScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikBattlePassScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.UpdateMouseLockSettingsForPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           ForPlayer                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikBlueprintStatics::UpdateMouseLockSettingsForPlayer(class APlayerController* ForPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.UpdateMouseLockSettingsForPlayer");
		
		USheikBlueprintStatics_UpdateMouseLockSettingsForPlayer_Params params {};
		params.ForPlayer = ForPlayer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.UnlockMouseFromViewportForPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           ForPlayer                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikBlueprintStatics::UnlockMouseFromViewportForPlayer(class APlayerController* ForPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.UnlockMouseFromViewportForPlayer");
		
		USheikBlueprintStatics_UnlockMouseFromViewportForPlayer_Params params {};
		params.ForPlayer = ForPlayer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.SpawnVFXPhysActorFromPool
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FTransform                                  SpawnTransform                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class UClass*                                      PhysActorToSpawn                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class AIGVFXPhysActor* USheikBlueprintStatics::SpawnVFXPhysActorFromPool(class UObject* WorldContextObject, const struct FTransform& SpawnTransform, class UClass* PhysActorToSpawn, float Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.SpawnVFXPhysActorFromPool");
		
		USheikBlueprintStatics_SpawnVFXPhysActorFromPool_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.SpawnTransform = SpawnTransform;
		params.PhysActorToSpawn = PhysActorToSpawn;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.ShowAccountUpgradeUI
	 * 		Flags  -> ()
	 */
	void USheikBlueprintStatics::ShowAccountUpgradeUI()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.ShowAccountUpgradeUI");
		
		USheikBlueprintStatics_ShowAccountUpgradeUI_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.SetServerType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EServerHostType                                    Type                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikBlueprintStatics::SetServerType(EServerHostType Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.SetServerType");
		
		USheikBlueprintStatics_SetServerType_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.ResetTitleFileStorageEnumerateCounter
	 * 		Flags  -> ()
	 */
	void USheikBlueprintStatics::ResetTitleFileStorageEnumerateCounter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.ResetTitleFileStorageEnumerateCounter");
		
		USheikBlueprintStatics_ResetTitleFileStorageEnumerateCounter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.ReplacePlatformSpecificMatchmakingText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        InSource                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	class FText USheikBlueprintStatics::ReplacePlatformSpecificMatchmakingText(const class FText& InSource)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.ReplacePlatformSpecificMatchmakingText");
		
		USheikBlueprintStatics_ReplacePlatformSpecificMatchmakingText_Params params {};
		params.InSource = InSource;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.PasteStringFromClipboard
	 * 		Flags  -> ()
	 */
	class FString USheikBlueprintStatics::PasteStringFromClipboard()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.PasteStringFromClipboard");
		
		USheikBlueprintStatics_PasteStringFromClipboard_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.LogRuntimeMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      InContext                                                  (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      InMessage                                                  (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               ShowOnScreen                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bLogInShipping                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikBlueprintStatics::LogRuntimeMessage(const class FString& InContext, const class FString& InMessage, bool ShowOnScreen, bool bLogInShipping)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.LogRuntimeMessage");
		
		USheikBlueprintStatics_LogRuntimeMessage_Params params {};
		params.InContext = InContext;
		params.InMessage = InMessage;
		params.ShowOnScreen = ShowOnScreen;
		params.bLogInShipping = bLogInShipping;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.LockMouseToViewportForPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           ForPlayer                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikBlueprintStatics::LockMouseToViewportForPlayer(class APlayerController* ForPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.LockMouseToViewportForPlayer");
		
		USheikBlueprintStatics_LockMouseToViewportForPlayer_Params params {};
		params.ForPlayer = ForPlayer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.IsValidEmail
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      String                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikBlueprintStatics::IsValidEmail(const class FString& String)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.IsValidEmail");
		
		USheikBlueprintStatics_IsValidEmail_Params params {};
		params.String = String;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.IsUserLoggedIntoEOS
	 * 		Flags  -> ()
	 */
	bool USheikBlueprintStatics::IsUserLoggedIntoEOS()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.IsUserLoggedIntoEOS");
		
		USheikBlueprintStatics_IsUserLoggedIntoEOS_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.IsUserLoggedIntoCozmo
	 * 		Flags  -> ()
	 */
	bool USheikBlueprintStatics::IsUserLoggedIntoCozmo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.IsUserLoggedIntoCozmo");
		
		USheikBlueprintStatics_IsUserLoggedIntoCozmo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.IsGDKUsingSimpleUserModel
	 * 		Flags  -> ()
	 */
	bool USheikBlueprintStatics::IsGDKUsingSimpleUserModel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.IsGDKUsingSimpleUserModel");
		
		USheikBlueprintStatics_IsGDKUsingSimpleUserModel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.IsGDKUsingAdvancedUserModel
	 * 		Flags  -> ()
	 */
	bool USheikBlueprintStatics::IsGDKUsingAdvancedUserModel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.IsGDKUsingAdvancedUserModel");
		
		USheikBlueprintStatics_IsGDKUsingAdvancedUserModel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.HasUserPrivilege
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikUserPrivilege                                Type                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikBlueprintStatics::HasUserPrivilege(ESheikUserPrivilege Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.HasUserPrivilege");
		
		USheikBlueprintStatics_HasUserPrivilege_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.GetSplitLocale
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Language                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Script                                                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      CountryCode                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikBlueprintStatics::GetSplitLocale(class UObject* WorldContextObject, class FString* Language, class FString* Script, class FString* CountryCode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.GetSplitLocale");
		
		USheikBlueprintStatics_GetSplitLocale_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Language != nullptr)
			*Language = params.Language;
		if (Script != nullptr)
			*Script = params.Script;
		if (CountryCode != nullptr)
			*CountryCode = params.CountryCode;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.GetSheikGameInstance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USheikGameInstance* USheikBlueprintStatics::GetSheikGameInstance(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.GetSheikGameInstance");
		
		USheikBlueprintStatics_GetSheikGameInstance_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.GetServicePlatformFromString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlatformServiceString                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	ESheikPlatformService USheikBlueprintStatics::GetServicePlatformFromString(const class FString& PlatformServiceString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.GetServicePlatformFromString");
		
		USheikBlueprintStatics_GetServicePlatformFromString_Params params {};
		params.PlatformServiceString = PlatformServiceString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.GetServicePlatformAsString
	 * 		Flags  -> ()
	 */
	class FString USheikBlueprintStatics::GetServicePlatformAsString()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.GetServicePlatformAsString");
		
		USheikBlueprintStatics_GetServicePlatformAsString_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.GetServicePlatform
	 * 		Flags  -> ()
	 */
	ESheikPlatformService USheikBlueprintStatics::GetServicePlatform()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.GetServicePlatform");
		
		USheikBlueprintStatics_GetServicePlatform_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.GetPlatformNickname
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      OutNickname                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikBlueprintStatics::GetPlatformNickname(class FString* OutNickname)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.GetPlatformNickname");
		
		USheikBlueprintStatics_GetPlatformNickname_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutNickname != nullptr)
			*OutNickname = params.OutNickname;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.GetPlatformFromString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlatformString                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	ESheikPlatform USheikBlueprintStatics::GetPlatformFromString(const class FString& PlatformString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.GetPlatformFromString");
		
		USheikBlueprintStatics_GetPlatformFromString_Params params {};
		params.PlatformString = PlatformString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.GetPlatformDefaultLanguage
	 * 		Flags  -> ()
	 */
	class FString USheikBlueprintStatics::GetPlatformDefaultLanguage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.GetPlatformDefaultLanguage");
		
		USheikBlueprintStatics_GetPlatformDefaultLanguage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.GetPlatformActiveUserIndex
	 * 		Flags  -> ()
	 */
	int32_t USheikBlueprintStatics::GetPlatformActiveUserIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.GetPlatformActiveUserIndex");
		
		USheikBlueprintStatics_GetPlatformActiveUserIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.GetPlatformAccountInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikPlatform                                     OutPlatform                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikPlatformService                              OutPlatformService                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OutPlatformId                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OutPlatformName                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OutEosId                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OutProductId                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikBlueprintStatics::GetPlatformAccountInfo(ESheikPlatform* OutPlatform, ESheikPlatformService* OutPlatformService, class FString* OutPlatformId, class FString* OutPlatformName, class FString* OutEosId, class FString* OutProductId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.GetPlatformAccountInfo");
		
		USheikBlueprintStatics_GetPlatformAccountInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPlatform != nullptr)
			*OutPlatform = params.OutPlatform;
		if (OutPlatformService != nullptr)
			*OutPlatformService = params.OutPlatformService;
		if (OutPlatformId != nullptr)
			*OutPlatformId = params.OutPlatformId;
		if (OutPlatformName != nullptr)
			*OutPlatformName = params.OutPlatformName;
		if (OutEosId != nullptr)
			*OutEosId = params.OutEosId;
		if (OutProductId != nullptr)
			*OutProductId = params.OutProductId;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.GetPlatform
	 * 		Flags  -> ()
	 */
	ESheikPlatform USheikBlueprintStatics::GetPlatform()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.GetPlatform");
		
		USheikBlueprintStatics_GetPlatform_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.GetEOSActiveUserIndex
	 * 		Flags  -> ()
	 */
	int32_t USheikBlueprintStatics::GetEOSActiveUserIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.GetEOSActiveUserIndex");
		
		USheikBlueprintStatics_GetEOSActiveUserIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.GetCozmoActiveUserIndex
	 * 		Flags  -> ()
	 */
	int32_t USheikBlueprintStatics::GetCozmoActiveUserIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.GetCozmoActiveUserIndex");
		
		USheikBlueprintStatics_GetCozmoActiveUserIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.DisplaySonyChatResctrictionDialog
	 * 		Flags  -> ()
	 */
	void USheikBlueprintStatics::DisplaySonyChatResctrictionDialog()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.DisplaySonyChatResctrictionDialog");
		
		USheikBlueprintStatics_DisplaySonyChatResctrictionDialog_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.DisplayCrossPlayRestrictedDialog
	 * 		Flags  -> ()
	 */
	void USheikBlueprintStatics::DisplayCrossPlayRestrictedDialog()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.DisplayCrossPlayRestrictedDialog");
		
		USheikBlueprintStatics_DisplayCrossPlayRestrictedDialog_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.DescribeGameSessions
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDescribeGameSessionsRequest                Request                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<struct FCozmoGameSession>                   GameSessionList                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      ErrorString                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikBlueprintStatics::DescribeGameSessions(const struct FDescribeGameSessionsRequest& Request, TArray<struct FCozmoGameSession>* GameSessionList, class FString* ErrorString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.DescribeGameSessions");
		
		USheikBlueprintStatics_DescribeGameSessions_Params params {};
		params.Request = Request;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (GameSessionList != nullptr)
			*GameSessionList = params.GameSessionList;
		if (ErrorString != nullptr)
			*ErrorString = params.ErrorString;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.CopyStringToClipboard
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      StringToCopy                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikBlueprintStatics::CopyStringToClipboard(const class FString& StringToCopy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.CopyStringToClipboard");
		
		USheikBlueprintStatics_CopyStringToClipboard_Params params {};
		params.StringToCopy = StringToCopy;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.ConvertRenderTargetToBuffer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UTextureRenderTarget2D*                      TextureRenderTarget                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<unsigned char>                              OutBuffer                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool USheikBlueprintStatics::ConvertRenderTargetToBuffer(class UTextureRenderTarget2D* TextureRenderTarget, TArray<unsigned char>* OutBuffer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.ConvertRenderTargetToBuffer");
		
		USheikBlueprintStatics_ConvertRenderTargetToBuffer_Params params {};
		params.TextureRenderTarget = TextureRenderTarget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBuffer != nullptr)
			*OutBuffer = params.OutBuffer;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikBlueprintStatics.ApplySavedCultureSetting
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      InCulture                                                  (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikBlueprintStatics::ApplySavedCultureSetting(const class FString& InCulture)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikBlueprintStatics.ApplySavedCultureSetting");
		
		USheikBlueprintStatics_ApplySavedCultureSetting_Params params {};
		params.InCulture = InCulture;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikBlueprintStatics.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikBlueprintStatics::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikBlueprintStatics");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.RequestUserPriviligeCallbackProxy.RequestUserPrivilege
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikUserPrivilege                                InPrivilegeType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class URequestUserPriviligeCallbackProxy* URequestUserPriviligeCallbackProxy::RequestUserPrivilege(ESheikUserPrivilege InPrivilegeType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.RequestUserPriviligeCallbackProxy.RequestUserPrivilege");
		
		URequestUserPriviligeCallbackProxy_RequestUserPrivilege_Params params {};
		params.InPrivilegeType = InPrivilegeType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URequestUserPriviligeCallbackProxy.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URequestUserPriviligeCallbackProxy::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.RequestUserPriviligeCallbackProxy");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.RequestUserPremiumStatusCallbackProxy.RequestUserPremiumStatus
	 * 		Flags  -> ()
	 */
	class URequestUserPremiumStatusCallbackProxy* URequestUserPremiumStatusCallbackProxy::RequestUserPremiumStatus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.RequestUserPremiumStatusCallbackProxy.RequestUserPremiumStatus");
		
		URequestUserPremiumStatusCallbackProxy_RequestUserPremiumStatus_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction URequestUserPremiumStatusCallbackProxy.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* URequestUserPremiumStatusCallbackProxy::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.RequestUserPremiumStatusCallbackProxy");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikButtonBase.WidgetUnfocused
	 * 		Flags  -> ()
	 */
	void USheikButtonBase::WidgetUnfocused()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikButtonBase.WidgetUnfocused");
		
		USheikButtonBase_WidgetUnfocused_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikButtonBase.WidgetFocused
	 * 		Flags  -> ()
	 */
	void USheikButtonBase::WidgetFocused()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikButtonBase.WidgetFocused");
		
		USheikButtonBase_WidgetFocused_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikButtonBase.WidgetEnabled
	 * 		Flags  -> ()
	 */
	void USheikButtonBase::WidgetEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikButtonBase.WidgetEnabled");
		
		USheikButtonBase_WidgetEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikButtonBase.WidgetDisabled
	 * 		Flags  -> ()
	 */
	void USheikButtonBase::WidgetDisabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikButtonBase.WidgetDisabled");
		
		USheikButtonBase_WidgetDisabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikButtonBase.SetWidgetFocus
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSkipAnimations                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFocused                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikButtonBase::SetWidgetFocus(bool bSkipAnimations, bool bFocused)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikButtonBase.SetWidgetFocus");
		
		USheikButtonBase_SetWidgetFocus_Params params {};
		params.bSkipAnimations = bSkipAnimations;
		params.bFocused = bFocused;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikButtonBase.SetLabel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        InText                                                     (Parm, NativeAccessSpecifierPublic)
	 */
	void USheikButtonBase::SetLabel(const class FText& InText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikButtonBase.SetLabel");
		
		USheikButtonBase_SetLabel_Params params {};
		params.InText = InText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikButtonBase.SetDisabledWithoutAnimation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bDisabled                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikButtonBase::SetDisabledWithoutAnimation(bool bDisabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikButtonBase.SetDisabledWithoutAnimation");
		
		USheikButtonBase_SetDisabledWithoutAnimation_Params params {};
		params.bDisabled = bDisabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikButtonBase.SetDisabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bDisabled                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikButtonBase::SetDisabled(bool bDisabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikButtonBase.SetDisabled");
		
		USheikButtonBase_SetDisabled_Params params {};
		params.bDisabled = bDisabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikButtonBase.OnSelectedAnimationFinished
	 * 		Flags  -> ()
	 */
	void USheikButtonBase::OnSelectedAnimationFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikButtonBase.OnSelectedAnimationFinished");
		
		USheikButtonBase_OnSelectedAnimationFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikButtonBase.HandleSelect
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            UserIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikButtonBase::HandleSelect(int32_t UserIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikButtonBase.HandleSelect");
		
		USheikButtonBase_HandleSelect_Params params {};
		params.UserIndex = UserIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikButtonBase.GetButtonIndex
	 * 		Flags  -> ()
	 */
	int32_t USheikButtonBase::GetButtonIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikButtonBase.GetButtonIndex");
		
		USheikButtonBase_GetButtonIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikButtonBase.ApplyContentOnPreConstruct
	 * 		Flags  -> ()
	 */
	void USheikButtonBase::ApplyContentOnPreConstruct()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikButtonBase.ApplyContentOnPreConstruct");
		
		USheikButtonBase_ApplyContentOnPreConstruct_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikButtonBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikButtonBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikButtonBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikCableActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikCableActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikCableActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCableComponent.SetAttachEndToComponent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USceneComponent*                             Component                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SocketName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikCableComponent::SetAttachEndToComponent(class USceneComponent* Component, const class FName& SocketName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCableComponent.SetAttachEndToComponent");
		
		USheikCableComponent_SetAttachEndToComponent_Params params {};
		params.Component = Component;
		params.SocketName = SocketName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCableComponent.SetAttachEndTo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Actor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ComponentProperty                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        SocketName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikCableComponent::SetAttachEndTo(class AActor* Actor, const class FName& ComponentProperty, const class FName& SocketName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCableComponent.SetAttachEndTo");
		
		USheikCableComponent_SetAttachEndTo_Params params {};
		params.Actor = Actor;
		params.ComponentProperty = ComponentProperty;
		params.SocketName = SocketName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCableComponent.GetCableParticleLocations
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FVector>                             Locations                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikCableComponent::GetCableParticleLocations(TArray<struct FVector>* Locations)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCableComponent.GetCableParticleLocations");
		
		USheikCableComponent_GetCableParticleLocations_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Locations != nullptr)
			*Locations = params.Locations;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCableComponent.GetAttachedComponent
	 * 		Flags  -> ()
	 */
	class USceneComponent* USheikCableComponent::GetAttachedComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCableComponent.GetAttachedComponent");
		
		USheikCableComponent_GetAttachedComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCableComponent.GetAttachedActor
	 * 		Flags  -> ()
	 */
	class AActor* USheikCableComponent::GetAttachedActor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCableComponent.GetAttachedActor");
		
		USheikCableComponent_GetAttachedActor_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikCableComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikCableComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikCableComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikCableHandler.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikCableHandler::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikCableHandler");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCallbacksManager.GetMatchmakingCallbacks
	 * 		Flags  -> ()
	 */
	class USheikMatchmakingCallbacks* USheikCallbacksManager::GetMatchmakingCallbacks()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCallbacksManager.GetMatchmakingCallbacks");
		
		USheikCallbacksManager_GetMatchmakingCallbacks_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCallbacksManager.GetEndOfMatchCallbacks
	 * 		Flags  -> ()
	 */
	class USheikEndOfMatchCallbacks* USheikCallbacksManager::GetEndOfMatchCallbacks()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCallbacksManager.GetEndOfMatchCallbacks");
		
		USheikCallbacksManager_GetEndOfMatchCallbacks_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikCallbacksManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikCallbacksManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikCallbacksManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCaptureManager.SetTextCaptureResolution
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NewResX                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NewResY                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCaptureManager::SetTextCaptureResolution(unsigned char Target, int32_t NewResX, int32_t NewResY)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCaptureManager.SetTextCaptureResolution");
		
		ASheikCaptureManager_SetTextCaptureResolution_Params params {};
		params.Target = Target;
		params.NewResX = NewResX;
		params.NewResY = NewResY;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCaptureManager.SetCaptureResolution
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NewResX                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NewResY                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCaptureManager::SetCaptureResolution(unsigned char Target, int32_t NewResX, int32_t NewResY)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCaptureManager.SetCaptureResolution");
		
		ASheikCaptureManager_SetCaptureResolution_Params params {};
		params.Target = Target;
		params.NewResX = NewResX;
		params.NewResY = NewResY;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCaptureManager.SetAllCaptureResolutions
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewResX                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NewResY                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCaptureManager::SetAllCaptureResolutions(int32_t NewResX, int32_t NewResY)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCaptureManager.SetAllCaptureResolutions");
		
		ASheikCaptureManager_SetAllCaptureResolutions_Params params {};
		params.NewResX = NewResX;
		params.NewResY = NewResY;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCaptureManager.QueueCapture
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharDesc                                   CharacterDescription                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      RTIndex                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UMaterialInterface*>                  OverrideMaterials                                          (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               allowLongLoads                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               invalidatePrevCapture                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikCaptureManager::QueueCapture(const struct FCharDesc& CharacterDescription, unsigned char RTIndex, TArray<class UMaterialInterface*>* OverrideMaterials, bool allowLongLoads, bool invalidatePrevCapture)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCaptureManager.QueueCapture");
		
		ASheikCaptureManager_QueueCapture_Params params {};
		params.CharacterDescription = CharacterDescription;
		params.RTIndex = RTIndex;
		params.allowLongLoads = allowLongLoads;
		params.invalidatePrevCapture = invalidatePrevCapture;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OverrideMaterials != nullptr)
			*OverrideMaterials = params.OverrideMaterials;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCaptureManager.IsIndexValid
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      RTIndex                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikCaptureManager::IsIndexValid(unsigned char RTIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCaptureManager.IsIndexValid");
		
		ASheikCaptureManager_IsIndexValid_Params params {};
		params.RTIndex = RTIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCaptureManager.InvalidateCapture
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TargetToInvalidate                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCaptureManager::InvalidateCapture(unsigned char TargetToInvalidate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCaptureManager.InvalidateCapture");
		
		ASheikCaptureManager_InvalidateCapture_Params params {};
		params.TargetToInvalidate = TargetToInvalidate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCaptureManager.GetCaptureState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      RTIndex                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	ECaptureState ASheikCaptureManager::GetCaptureState(unsigned char RTIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCaptureManager.GetCaptureState");
		
		ASheikCaptureManager_GetCaptureState_Params params {};
		params.RTIndex = RTIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCaptureManager.GetCapture
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      RTIndex                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UTexture*                                    OutUITexture                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UTexture2D*                                  fallbackTexture                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UTexture* ASheikCaptureManager::GetCapture(unsigned char RTIndex, class UTexture** OutUITexture, class UTexture2D* fallbackTexture)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCaptureManager.GetCapture");
		
		ASheikCaptureManager_GetCapture_Params params {};
		params.RTIndex = RTIndex;
		params.fallbackTexture = fallbackTexture;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutUITexture != nullptr)
			*OutUITexture = params.OutUITexture;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikCaptureManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikCaptureManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikCaptureManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.VerifyRequiredSeasonalStatsLoaded
	 * 		Flags  -> ()
	 */
	bool USheikCareersScreen::VerifyRequiredSeasonalStatsLoaded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.VerifyRequiredSeasonalStatsLoaded");
		
		USheikCareersScreen_VerifyRequiredSeasonalStatsLoaded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.SetSheikTitleCardFrontendUtility
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikTitleCardFrontendUtility*              InTitleCardFrontendUtility                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikCareersScreen::SetSheikTitleCardFrontendUtility(class ASheikTitleCardFrontendUtility* InTitleCardFrontendUtility)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.SetSheikTitleCardFrontendUtility");
		
		USheikCareersScreen_SetSheikTitleCardFrontendUtility_Params params {};
		params.InTitleCardFrontendUtility = InTitleCardFrontendUtility;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.RewardIsOutOfSeason
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EIGSeasonIdentifier                                RewardSeason                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikCareersScreen::RewardIsOutOfSeason(EIGSeasonIdentifier RewardSeason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.RewardIsOutOfSeason");
		
		USheikCareersScreen_RewardIsOutOfSeason_Params params {};
		params.RewardSeason = RewardSeason;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.ReleaseLoadedPreviewIcons
	 * 		Flags  -> ()
	 */
	void USheikCareersScreen::ReleaseLoadedPreviewIcons()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.ReleaseLoadedPreviewIcons");
		
		USheikCareersScreen_ReleaseLoadedPreviewIcons_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikCareersScreen.OnPreviewIconSoftPointersLoadSucceeded__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikCareersScreen::OnPreviewIconSoftPointersLoadSucceeded__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikCareersScreen.OnPreviewIconSoftPointersLoadSucceeded__DelegateSignature");
		
		USheikCareersScreen_OnPreviewIconSoftPointersLoadSucceeded__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikCareersScreen.OnPreviewIconSoftPointersLoadFailed__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikCareersScreen::OnPreviewIconSoftPointersLoadFailed__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikCareersScreen.OnPreviewIconSoftPointersLoadFailed__DelegateSignature");
		
		USheikCareersScreen_OnPreviewIconSoftPointersLoadFailed__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikCareersScreen.OnCareerScreenStatsLoaded__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikCareersScreen::OnCareerScreenStatsLoaded__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikCareersScreen.OnCareerScreenStatsLoaded__DelegateSignature");
		
		USheikCareersScreen_OnCareerScreenStatsLoaded__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.LoadAllPreviewIcons
	 * 		Flags  -> ()
	 */
	void USheikCareersScreen::LoadAllPreviewIcons()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.LoadAllPreviewIcons");
		
		USheikCareersScreen_LoadAllPreviewIcons_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.Init
	 * 		Flags  -> ()
	 */
	void USheikCareersScreen::Init()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.Init");
		
		USheikCareersScreen_Init_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.HaveCareerScreenStatsLoaded
	 * 		Flags  -> ()
	 */
	bool USheikCareersScreen::HaveCareerScreenStatsLoaded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.HaveCareerScreenStatsLoaded");
		
		USheikCareersScreen_HaveCareerScreenStatsLoaded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.HandleProgressionDataDownloadComplete
	 * 		Flags  -> ()
	 */
	void USheikCareersScreen::HandleProgressionDataDownloadComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.HandleProgressionDataDownloadComplete");
		
		USheikCareersScreen_HandleProgressionDataDownloadComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.HandleOnPreviewIconLoadComplete
	 * 		Flags  -> ()
	 */
	void USheikCareersScreen::HandleOnPreviewIconLoadComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.HandleOnPreviewIconLoadComplete");
		
		USheikCareersScreen_HandleOnPreviewIconLoadComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.GetWalletSystemReference
	 * 		Flags  -> ()
	 */
	class USheikWalletSystem* USheikCareersScreen::GetWalletSystemReference()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.GetWalletSystemReference");
		
		USheikCareersScreen_GetWalletSystemReference_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.GetWalletSystem
	 * 		Flags  -> ()
	 */
	class USheikWalletSystem* USheikCareersScreen::GetWalletSystem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.GetWalletSystem");
		
		USheikCareersScreen_GetWalletSystem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.GetTimeLeftForTimedRewards
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTimespan                                   OutDaysAndHours                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikCareersScreen::GetTimeLeftForTimedRewards(struct FTimespan* OutDaysAndHours)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.GetTimeLeftForTimedRewards");
		
		USheikCareersScreen_GetTimeLeftForTimedRewards_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutDaysAndHours != nullptr)
			*OutDaysAndHours = params.OutDaysAndHours;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.GetStatByName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RawStatName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikPlayerDataStat                        OutStat                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikCareersScreen::GetStatByName(const class FName& RawStatName, struct FSheikPlayerDataStat* OutStat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.GetStatByName");
		
		USheikCareersScreen_GetStatByName_Params params {};
		params.RawStatName = RawStatName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutStat != nullptr)
			*OutStat = params.OutStat;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.GetSingleGameRecordStats
	 * 		Flags  -> ()
	 */
	TArray<struct FSheikPlayerDataStat> USheikCareersScreen::GetSingleGameRecordStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.GetSingleGameRecordStats");
		
		USheikCareersScreen_GetSingleGameRecordStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.GetPlayerStats
	 * 		Flags  -> ()
	 */
	TArray<struct FSheikPlayerDataStat> USheikCareersScreen::GetPlayerStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.GetPlayerStats");
		
		USheikCareersScreen_GetPlayerStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.GetAllPreviewIconSoftObjectPaths
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSoftObjectPath>                     OutIconPaths                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool USheikCareersScreen::GetAllPreviewIconSoftObjectPaths(TArray<struct FSoftObjectPath>* OutIconPaths)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.GetAllPreviewIconSoftObjectPaths");
		
		USheikCareersScreen_GetAllPreviewIconSoftObjectPaths_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutIconPaths != nullptr)
			*OutIconPaths = params.OutIconPaths;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.FilterTitleCardData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikCareerScreenFilterOption                     FilterOption                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FIGTitleCardBase                            NextReward                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikCareersScreen::FilterTitleCardData(ESheikCareerScreenFilterOption FilterOption, const struct FIGTitleCardBase& NextReward)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.FilterTitleCardData");
		
		USheikCareersScreen_FilterTitleCardData_Params params {};
		params.FilterOption = FilterOption;
		params.NextReward = NextReward;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.DebugOnlySetCurrentlyHoveredReward
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RewardId                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikCareersScreen::DebugOnlySetCurrentlyHoveredReward(const class FName& RewardId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.DebugOnlySetCurrentlyHoveredReward");
		
		USheikCareersScreen_DebugOnlySetCurrentlyHoveredReward_Params params {};
		params.RewardId = RewardId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.CompareTitleCardData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikCareerScreenSortCriteria                     SortCriteria                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               LHSIsDefault                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FIGTitleCardBase                            LHS                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FIGTitleCardBase                            RHS                                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikCareersScreen::CompareTitleCardData(ESheikCareerScreenSortCriteria SortCriteria, bool LHSIsDefault, const struct FIGTitleCardBase& LHS, const struct FIGTitleCardBase& RHS)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.CompareTitleCardData");
		
		USheikCareersScreen_CompareTitleCardData_Params params {};
		params.SortCriteria = SortCriteria;
		params.LHSIsDefault = LHSIsDefault;
		params.LHS = LHS;
		params.RHS = RHS;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.ApplyFilterAndSortStats
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikCareerScreenFilterOption                     FilterOption                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikCareerScreenSortCriteria                     SortCriteria                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FIGTitleCardStat>                    OutStats                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikCareersScreen::ApplyFilterAndSortStats(ESheikCareerScreenFilterOption FilterOption, ESheikCareerScreenSortCriteria SortCriteria, TArray<struct FIGTitleCardStat>* OutStats)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.ApplyFilterAndSortStats");
		
		USheikCareersScreen_ApplyFilterAndSortStats_Params params {};
		params.FilterOption = FilterOption;
		params.SortCriteria = SortCriteria;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutStats != nullptr)
			*OutStats = params.OutStats;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.ApplyFilterAndSortPlayerTitles
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikCareerScreenFilterOption                     FilterOption                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikCareerScreenSortCriteria                     SortCriteria                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FIGTitleCardPlayerTitle>             OutTitles                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikCareersScreen::ApplyFilterAndSortPlayerTitles(ESheikCareerScreenFilterOption FilterOption, ESheikCareerScreenSortCriteria SortCriteria, TArray<struct FIGTitleCardPlayerTitle>* OutTitles)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.ApplyFilterAndSortPlayerTitles");
		
		USheikCareersScreen_ApplyFilterAndSortPlayerTitles_Params params {};
		params.FilterOption = FilterOption;
		params.SortCriteria = SortCriteria;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutTitles != nullptr)
			*OutTitles = params.OutTitles;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.ApplyFilterAndSortPlayerPoses
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikCareerScreenFilterOption                     FilterOption                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikCareerScreenSortCriteria                     SortCriteria                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FIGTitleCardPlayerPose>              OutPoses                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikCareersScreen::ApplyFilterAndSortPlayerPoses(ESheikCareerScreenFilterOption FilterOption, ESheikCareerScreenSortCriteria SortCriteria, TArray<struct FIGTitleCardPlayerPose>* OutPoses)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.ApplyFilterAndSortPlayerPoses");
		
		USheikCareersScreen_ApplyFilterAndSortPlayerPoses_Params params {};
		params.FilterOption = FilterOption;
		params.SortCriteria = SortCriteria;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPoses != nullptr)
			*OutPoses = params.OutPoses;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.ApplyFilterAndSortMedals
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikCareerScreenFilterOption                     FilterOption                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikCareerScreenSortCriteria                     SortCriteria                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FIGTitleCardMedal>                   OutMedals                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikCareersScreen::ApplyFilterAndSortMedals(ESheikCareerScreenFilterOption FilterOption, ESheikCareerScreenSortCriteria SortCriteria, TArray<struct FIGTitleCardMedal>* OutMedals)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.ApplyFilterAndSortMedals");
		
		USheikCareersScreen_ApplyFilterAndSortMedals_Params params {};
		params.FilterOption = FilterOption;
		params.SortCriteria = SortCriteria;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutMedals != nullptr)
			*OutMedals = params.OutMedals;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.ApplyFilterAndSortItemTypeBase
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikTitleCardDataType                            ItemType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikCareerScreenFilterOption                     FilterOption                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikCareerScreenSortCriteria                     SortCriteria                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FIGTitleCardBase>                    OutBaseItems                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikCareersScreen::ApplyFilterAndSortItemTypeBase(ESheikTitleCardDataType ItemType, ESheikCareerScreenFilterOption FilterOption, ESheikCareerScreenSortCriteria SortCriteria, TArray<struct FIGTitleCardBase>* OutBaseItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.ApplyFilterAndSortItemTypeBase");
		
		USheikCareersScreen_ApplyFilterAndSortItemTypeBase_Params params {};
		params.ItemType = ItemType;
		params.FilterOption = FilterOption;
		params.SortCriteria = SortCriteria;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBaseItems != nullptr)
			*OutBaseItems = params.OutBaseItems;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.ApplyFilterAndSortBorders
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikCareerScreenFilterOption                     FilterOption                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikCareerScreenSortCriteria                     SortCriteria                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FIGTitleCardBorder>                  OutBorders                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikCareersScreen::ApplyFilterAndSortBorders(ESheikCareerScreenFilterOption FilterOption, ESheikCareerScreenSortCriteria SortCriteria, TArray<struct FIGTitleCardBorder>* OutBorders)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.ApplyFilterAndSortBorders");
		
		USheikCareersScreen_ApplyFilterAndSortBorders_Params params {};
		params.FilterOption = FilterOption;
		params.SortCriteria = SortCriteria;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBorders != nullptr)
			*OutBorders = params.OutBorders;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCareersScreen.ApplyFilterAndSortBackgrounds
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikCareerScreenFilterOption                     FilterOption                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikCareerScreenSortCriteria                     SortCriteria                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FIGTitleCardBackground>              OutBackgrounds                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikCareersScreen::ApplyFilterAndSortBackgrounds(ESheikCareerScreenFilterOption FilterOption, ESheikCareerScreenSortCriteria SortCriteria, TArray<struct FIGTitleCardBackground>* OutBackgrounds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCareersScreen.ApplyFilterAndSortBackgrounds");
		
		USheikCareersScreen_ApplyFilterAndSortBackgrounds_Params params {};
		params.FilterOption = FilterOption;
		params.SortCriteria = SortCriteria;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBackgrounds != nullptr)
			*OutBackgrounds = params.OutBackgrounds;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikCareersScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikCareersScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikCareersScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.SetSpectatorInfoVisibility
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsVisible                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::SetSpectatorInfoVisibility(bool bIsVisible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.SetSpectatorInfoVisibility");
		
		ASheikCharacter_SetSpectatorInfoVisibility_Params params {};
		params.bIsVisible = bIsVisible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.SetSpectatorInfoHealthbarVisibility
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsVisible                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::SetSpectatorInfoHealthbarVisibility(bool bIsVisible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.SetSpectatorInfoHealthbarVisibility");
		
		ASheikCharacter_SetSpectatorInfoHealthbarVisibility_Params params {};
		params.bIsVisible = bIsVisible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.SetKOInsuranceAllowed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsAllowed                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::SetKOInsuranceAllowed(bool bIsAllowed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.SetKOInsuranceAllowed");
		
		ASheikCharacter_SetKOInsuranceAllowed_Params params {};
		params.bIsAllowed = bIsAllowed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.ServerSetAutoClimb
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bShouldAutoClimb                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::ServerSetAutoClimb(bool bShouldAutoClimb)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.ServerSetAutoClimb");
		
		ASheikCharacter_ServerSetAutoClimb_Params params {};
		params.bShouldAutoClimb = bShouldAutoClimb;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.ServerRequestFireCannon
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FRotator                                    LaunchRotation                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::ServerRequestFireCannon(const struct FRotator& LaunchRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.ServerRequestFireCannon");
		
		ASheikCharacter_ServerRequestFireCannon_Params params {};
		params.LaunchRotation = LaunchRotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.ServerProcessLaunchAction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikLaunchActionType                             LaunchAction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::ServerProcessLaunchAction(ESheikLaunchActionType LaunchAction)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.ServerProcessLaunchAction");
		
		ASheikCharacter_ServerProcessLaunchAction_Params params {};
		params.LaunchAction = LaunchAction;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.ServerDebugClearStatsAllPlayers
	 * 		Flags  -> ()
	 */
	void ASheikCharacter::ServerDebugClearStatsAllPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.ServerDebugClearStatsAllPlayers");
		
		ASheikCharacter_ServerDebugClearStatsAllPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.ReloadCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikSpawnParams                           NewSpawnParams                                             (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::ReloadCharacter(const struct FSheikSpawnParams& NewSpawnParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.ReloadCharacter");
		
		ASheikCharacter_ReloadCharacter_Params params {};
		params.NewSpawnParams = NewSpawnParams;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.OnTheFlyMeshSwap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               SwappingBaseSkeletalMesh                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::OnTheFlyMeshSwap(bool SwappingBaseSkeletalMesh)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.OnTheFlyMeshSwap");
		
		ASheikCharacter_OnTheFlyMeshSwap_Params params {};
		params.SwappingBaseSkeletalMesh = SwappingBaseSkeletalMesh;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.OnStopAiming
	 * 		Flags  -> ()
	 */
	void ASheikCharacter::OnStopAiming()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.OnStopAiming");
		
		ASheikCharacter_OnStopAiming_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.OnStartAiming
	 * 		Flags  -> ()
	 */
	void ASheikCharacter::OnStartAiming()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.OnStartAiming");
		
		ASheikCharacter_OnStartAiming_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.OnRep_ParticipatingEventBeacon
	 * 		Flags  -> ()
	 */
	void ASheikCharacter::OnRep_ParticipatingEventBeacon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.OnRep_ParticipatingEventBeacon");
		
		ASheikCharacter_OnRep_ParticipatingEventBeacon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.OnRep_LastRingExitTimeStamp
	 * 		Flags  -> ()
	 */
	void ASheikCharacter::OnRep_LastRingExitTimeStamp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.OnRep_LastRingExitTimeStamp");
		
		ASheikCharacter_OnRep_LastRingExitTimeStamp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.OnRep_IsWaitingToFireCannon
	 * 		Flags  -> ()
	 */
	void ASheikCharacter::OnRep_IsWaitingToFireCannon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.OnRep_IsWaitingToFireCannon");
		
		ASheikCharacter_OnRep_IsWaitingToFireCannon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.OnRep_IsNonParticipant
	 * 		Flags  -> ()
	 */
	void ASheikCharacter::OnRep_IsNonParticipant()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.OnRep_IsNonParticipant");
		
		ASheikCharacter_OnRep_IsNonParticipant_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.OnRep_IsKOInsuranceAllowed
	 * 		Flags  -> ()
	 */
	void ASheikCharacter::OnRep_IsKOInsuranceAllowed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.OnRep_IsKOInsuranceAllowed");
		
		ASheikCharacter_OnRep_IsKOInsuranceAllowed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.OnRep_IsAimingCannon
	 * 		Flags  -> ()
	 */
	void ASheikCharacter::OnRep_IsAimingCannon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.OnRep_IsAimingCannon");
		
		ASheikCharacter_OnRep_IsAimingCannon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.OnRep_EventScore
	 * 		Flags  -> ()
	 */
	void ASheikCharacter::OnRep_EventScore()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.OnRep_EventScore");
		
		ASheikCharacter_OnRep_EventScore_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.OnLaunchedPlayerLanded
	 * 		Flags  -> ()
	 */
	void ASheikCharacter::OnLaunchedPlayerLanded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.OnLaunchedPlayerLanded");
		
		ASheikCharacter_OnLaunchedPlayerLanded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.OnKOInsuranceMontageEnded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInterrupted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::OnKOInsuranceMontageEnded(class UAnimMontage* Montage, bool bInterrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.OnKOInsuranceMontageEnded");
		
		ASheikCharacter_OnKOInsuranceMontageEnded_Params params {};
		params.Montage = Montage;
		params.bInterrupted = bInterrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.OnAudioHandlerReady
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikAudioHandlerActor*                     AudioHandler                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::OnAudioHandlerReady(class ASheikAudioHandlerActor* AudioHandler)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.OnAudioHandlerReady");
		
		ASheikCharacter_OnAudioHandlerReady_Params params {};
		params.AudioHandler = AudioHandler;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.IsShowingDebugPlayerMeshes
	 * 		Flags  -> ()
	 */
	bool ASheikCharacter::IsShowingDebugPlayerMeshes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.IsShowingDebugPlayerMeshes");
		
		ASheikCharacter_IsShowingDebugPlayerMeshes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.IsResurrectionAllowed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikCharacter*                             ResurrectionTarget                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikCharacter::IsResurrectionAllowed(class ASheikCharacter* ResurrectionTarget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.IsResurrectionAllowed");
		
		ASheikCharacter_IsResurrectionAllowed_Params params {};
		params.ResurrectionTarget = ResurrectionTarget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.IsKOInsuranceAvailable
	 * 		Flags  -> ()
	 */
	bool ASheikCharacter::IsKOInsuranceAvailable()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.IsKOInsuranceAvailable");
		
		ASheikCharacter_IsKOInsuranceAvailable_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.IsCharacterOutsideOfRing
	 * 		Flags  -> ()
	 */
	bool ASheikCharacter::IsCharacterOutsideOfRing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.IsCharacterOutsideOfRing");
		
		ASheikCharacter_IsCharacterOutsideOfRing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.HasLaunchControl
	 * 		Flags  -> ()
	 */
	bool ASheikCharacter::HasLaunchControl()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.HasLaunchControl");
		
		ASheikCharacter_HasLaunchControl_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.GetSpecialMoveDisplayTier
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGMoveMontage*                              Move                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EMoveTier                                          OverridableTier                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	EMoveTier ASheikCharacter::GetSpecialMoveDisplayTier(class UIGMoveMontage* Move, EMoveTier OverridableTier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.GetSpecialMoveDisplayTier");
		
		ASheikCharacter_GetSpecialMoveDisplayTier_Params params {};
		params.Move = Move;
		params.OverridableTier = OverridableTier;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.GetSheikStatBaseValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikModValueType                                 Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float ASheikCharacter::GetSheikStatBaseValue(ESheikModValueType Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.GetSheikStatBaseValue");
		
		ASheikCharacter_GetSheikStatBaseValue_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.GetPinComponent
	 * 		Flags  -> ()
	 */
	class USheikPinComponent* ASheikCharacter::GetPinComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.GetPinComponent");
		
		ASheikCharacter_GetPinComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.ExecAddSheikStackFloat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikModValueType                                 TargetStat                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EIGModType                                         ModType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ModValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::ExecAddSheikStackFloat(ESheikModValueType TargetStat, EIGModType ModType, float ModValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.ExecAddSheikStackFloat");
		
		ASheikCharacter_ExecAddSheikStackFloat_Params params {};
		params.TargetStat = TargetStat;
		params.ModType = ModType;
		params.ModValue = ModValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.DebugSetShouldAutoClimb
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::DebugSetShouldAutoClimb(bool InValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.DebugSetShouldAutoClimb");
		
		ASheikCharacter_DebugSetShouldAutoClimb_Params params {};
		params.InValue = InValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.DebugSetMouseCameraSensitivity
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::DebugSetMouseCameraSensitivity(float InValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.DebugSetMouseCameraSensitivity");
		
		ASheikCharacter_DebugSetMouseCameraSensitivity_Params params {};
		params.InValue = InValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.DebugSetMouseAimingSensitivity
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::DebugSetMouseAimingSensitivity(float InValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.DebugSetMouseAimingSensitivity");
		
		ASheikCharacter_DebugSetMouseAimingSensitivity_Params params {};
		params.InValue = InValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.DebugSetInvertMouseCannonCameraY
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               InInvert                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::DebugSetInvertMouseCannonCameraY(bool InInvert)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.DebugSetInvertMouseCannonCameraY");
		
		ASheikCharacter_DebugSetInvertMouseCannonCameraY_Params params {};
		params.InInvert = InInvert;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.DebugSetInvertMouseCameraY
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               InInvert                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::DebugSetInvertMouseCameraY(bool InInvert)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.DebugSetInvertMouseCameraY");
		
		ASheikCharacter_DebugSetInvertMouseCameraY_Params params {};
		params.InInvert = InInvert;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.DebugSetInvertMouseAimingCameraY
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               InInvert                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::DebugSetInvertMouseAimingCameraY(bool InInvert)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.DebugSetInvertMouseAimingCameraY");
		
		ASheikCharacter_DebugSetInvertMouseAimingCameraY_Params params {};
		params.InInvert = InInvert;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.DebugSetInvertGamepadCannonCameraY
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               InInvert                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::DebugSetInvertGamepadCannonCameraY(bool InInvert)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.DebugSetInvertGamepadCannonCameraY");
		
		ASheikCharacter_DebugSetInvertGamepadCannonCameraY_Params params {};
		params.InInvert = InInvert;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.DebugSetInvertGamepadCannonCameraX
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               InInvert                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::DebugSetInvertGamepadCannonCameraX(bool InInvert)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.DebugSetInvertGamepadCannonCameraX");
		
		ASheikCharacter_DebugSetInvertGamepadCannonCameraX_Params params {};
		params.InInvert = InInvert;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.DebugSetInvertGamepadCameraY
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               InInvert                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::DebugSetInvertGamepadCameraY(bool InInvert)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.DebugSetInvertGamepadCameraY");
		
		ASheikCharacter_DebugSetInvertGamepadCameraY_Params params {};
		params.InInvert = InInvert;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.DebugSetInvertGamepadCameraX
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               InInvert                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::DebugSetInvertGamepadCameraX(bool InInvert)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.DebugSetInvertGamepadCameraX");
		
		ASheikCharacter_DebugSetInvertGamepadCameraX_Params params {};
		params.InInvert = InInvert;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.DebugSetInvertGamepadAimingCameraY
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               InInvert                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::DebugSetInvertGamepadAimingCameraY(bool InInvert)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.DebugSetInvertGamepadAimingCameraY");
		
		ASheikCharacter_DebugSetInvertGamepadAimingCameraY_Params params {};
		params.InInvert = InInvert;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.DebugSetInvertGamepadAimingCameraX
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               InInvert                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::DebugSetInvertGamepadAimingCameraX(bool InInvert)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.DebugSetInvertGamepadAimingCameraX");
		
		ASheikCharacter_DebugSetInvertGamepadAimingCameraX_Params params {};
		params.InInvert = InInvert;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.DebugSetGamepadCameraSensitivity
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::DebugSetGamepadCameraSensitivity(float InValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.DebugSetGamepadCameraSensitivity");
		
		ASheikCharacter_DebugSetGamepadCameraSensitivity_Params params {};
		params.InValue = InValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.DebugSetGamepadAimingSensitivity
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              InValue                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::DebugSetGamepadAimingSensitivity(float InValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.DebugSetGamepadAimingSensitivity");
		
		ASheikCharacter_DebugSetGamepadAimingSensitivity_Params params {};
		params.InValue = InValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.ClientLaunchMasterFiredCannon
	 * 		Flags  -> ()
	 */
	void ASheikCharacter::ClientLaunchMasterFiredCannon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.ClientLaunchMasterFiredCannon");
		
		ASheikCharacter_ClientLaunchMasterFiredCannon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.CanResurrectTeammate
	 * 		Flags  -> ()
	 */
	bool ASheikCharacter::CanResurrectTeammate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.CanResurrectTeammate");
		
		ASheikCharacter_CanResurrectTeammate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.CannonLaunchMe
	 * 		Flags  -> ()
	 */
	void ASheikCharacter::CannonLaunchMe()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.CannonLaunchMe");
		
		ASheikCharacter_CannonLaunchMe_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.AddSheikMovementInputLocal
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              RightVal                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ForwardVal                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::AddSheikMovementInputLocal(float RightVal, float ForwardVal)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.AddSheikMovementInputLocal");
		
		ASheikCharacter_AddSheikMovementInputLocal_Params params {};
		params.RightVal = RightVal;
		params.ForwardVal = ForwardVal;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacter.AddSheikMovementDirection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EMoveInputDirection                                LocalDirection                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCharacter::AddSheikMovementDirection(EMoveInputDirection LocalDirection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacter.AddSheikMovementDirection");
		
		ASheikCharacter_AddSheikMovementDirection_Params params {};
		params.LocalDirection = LocalDirection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikCharacter.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikCharacter::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikCharacter");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacterInfoWidget.UpdateRenderScale
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   NewScale                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikCharacterInfoWidget::UpdateRenderScale(const struct FVector2D& NewScale)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacterInfoWidget.UpdateRenderScale");
		
		USheikCharacterInfoWidget_UpdateRenderScale_Params params {};
		params.NewScale = NewScale;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacterInfoWidget.SetHealthbarVisiblity
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               IsVisible                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikCharacterInfoWidget::SetHealthbarVisiblity(bool IsVisible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacterInfoWidget.SetHealthbarVisiblity");
		
		USheikCharacterInfoWidget_SetHealthbarVisiblity_Params params {};
		params.IsVisible = IsVisible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacterInfoWidget.SetDebugHide
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bHide                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikCharacterInfoWidget::SetDebugHide(bool bHide)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacterInfoWidget.SetDebugHide");
		
		USheikCharacterInfoWidget_SetDebugHide_Params params {};
		params.bHide = bHide;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikCharacterInfoWidget.OnRequestPlayerState__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikCharacterInfoWidget::OnRequestPlayerState__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikCharacterInfoWidget.OnRequestPlayerState__DelegateSignature");
		
		USheikCharacterInfoWidget_OnRequestPlayerState__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacterInfoWidget.IsSpectatorPlayerStatePopulated
	 * 		Flags  -> ()
	 */
	bool USheikCharacterInfoWidget::IsSpectatorPlayerStatePopulated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacterInfoWidget.IsSpectatorPlayerStatePopulated");
		
		USheikCharacterInfoWidget_IsSpectatorPlayerStatePopulated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCharacterInfoWidget.IsDebugHidden
	 * 		Flags  -> ()
	 */
	bool USheikCharacterInfoWidget::IsDebugHidden()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCharacterInfoWidget.IsDebugHidden");
		
		USheikCharacterInfoWidget_IsDebugHidden_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikCharacterInfoWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikCharacterInfoWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikCharacterInfoWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikCharacterStatTierData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikCharacterStatTierData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikCharacterStatTierData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikClientOnlyActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikClientOnlyActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikClientOnlyActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikConsolePresenceManager.OnMapStarted
	 * 		Flags  -> ()
	 */
	void USheikConsolePresenceManager::OnMapStarted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikConsolePresenceManager.OnMapStarted");
		
		USheikConsolePresenceManager_OnMapStarted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikConsolePresenceManager.OnMapEnded
	 * 		Flags  -> ()
	 */
	void USheikConsolePresenceManager::OnMapEnded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikConsolePresenceManager.OnMapEnded");
		
		USheikConsolePresenceManager_OnMapEnded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikConsolePresenceManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikConsolePresenceManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikConsolePresenceManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikCoreStatsConsumable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikCoreStatsConsumable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikCoreStatsConsumable");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCrystal.SwapMaterials
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               IsTangible                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCrystal::SwapMaterials(bool IsTangible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCrystal.SwapMaterials");
		
		ASheikCrystal_SwapMaterials_Params params {};
		params.IsTangible = IsTangible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCrystal.OnRep_ParentBeacon
	 * 		Flags  -> ()
	 */
	void ASheikCrystal::OnRep_ParentBeacon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCrystal.OnRep_ParentBeacon");
		
		ASheikCrystal_OnRep_ParentBeacon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCrystal.OnGameFlowStateChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EGameFlowState                                     NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCrystal::OnGameFlowStateChanged(EGameFlowState NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCrystal.OnGameFlowStateChanged");
		
		ASheikCrystal_OnGameFlowStateChanged_Params params {};
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikCrystal.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikCrystal::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikCrystal");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEventBeaconInterface.StartEvent
	 * 		Flags  -> ()
	 */
	void ASheikEventBeaconInterface::StartEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEventBeaconInterface.StartEvent");
		
		ASheikEventBeaconInterface_StartEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEventBeaconInterface.StartCountdown
	 * 		Flags  -> ()
	 */
	void ASheikEventBeaconInterface::StartCountdown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEventBeaconInterface.StartCountdown");
		
		ASheikEventBeaconInterface_StartCountdown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEventBeaconInterface.ResizeRingMesh
	 * 		Flags  -> ()
	 */
	void ASheikEventBeaconInterface::ResizeRingMesh()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEventBeaconInterface.ResizeRingMesh");
		
		ASheikEventBeaconInterface_ResizeRingMesh_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEventBeaconInterface.OnRep_ShouldDisplayEventRing
	 * 		Flags  -> ()
	 */
	void ASheikEventBeaconInterface::OnRep_ShouldDisplayEventRing()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEventBeaconInterface.OnRep_ShouldDisplayEventRing");
		
		ASheikEventBeaconInterface_OnRep_ShouldDisplayEventRing_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEventBeaconInterface.OnRep_IsEventActive
	 * 		Flags  -> ()
	 */
	void ASheikEventBeaconInterface::OnRep_IsEventActive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEventBeaconInterface.OnRep_IsEventActive");
		
		ASheikEventBeaconInterface_OnRep_IsEventActive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEventBeaconInterface.MulticastEventRewardNotify
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class APlayerState*>                        WinnerState                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ASheikEventBeaconInterface::MulticastEventRewardNotify(TArray<class APlayerState*> WinnerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEventBeaconInterface.MulticastEventRewardNotify");
		
		ASheikEventBeaconInterface_MulticastEventRewardNotify_Params params {};
		params.WinnerState = WinnerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEventBeaconInterface.IsPlayerParticipating
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      Player                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikEventBeaconInterface::IsPlayerParticipating(class AActor* Player)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEventBeaconInterface.IsPlayerParticipating");
		
		ASheikEventBeaconInterface_IsPlayerParticipating_Params params {};
		params.Player = Player;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEventBeaconInterface.EndEvent
	 * 		Flags  -> ()
	 */
	void ASheikEventBeaconInterface::EndEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEventBeaconInterface.EndEvent");
		
		ASheikEventBeaconInterface_EndEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikEventBeaconInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikEventBeaconInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikEventBeaconInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCrystalRunEventBeacon.RegisterPlayerScore
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGCharacter*                                Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ASheikCrystal*                               Collectible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikCrystalRunEventBeacon::RegisterPlayerScore(class AIGCharacter* Character, class ASheikCrystal* Collectible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCrystalRunEventBeacon.RegisterPlayerScore");
		
		ASheikCrystalRunEventBeacon_RegisterPlayerScore_Params params {};
		params.Character = Character;
		params.Collectible = Collectible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikCrystalRunEventBeacon.IsOwnedCollectible
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikCrystal*                               Collectible                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikCrystalRunEventBeacon::IsOwnedCollectible(class ASheikCrystal* Collectible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikCrystalRunEventBeacon.IsOwnedCollectible");
		
		ASheikCrystalRunEventBeacon_IsOwnedCollectible_Params params {};
		params.Collectible = Collectible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikCrystalRunEventBeacon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikCrystalRunEventBeacon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikCrystalRunEventBeacon");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikDailyRepStrategy.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikDailyRepStrategy::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikDailyRepStrategy");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikDurableStaticInteractable.OnRep_DurabilityChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            OldDurability                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikDurableStaticInteractable::OnRep_DurabilityChanged(int32_t OldDurability)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikDurableStaticInteractable.OnRep_DurabilityChanged");
		
		ASheikDurableStaticInteractable_OnRep_DurabilityChanged_Params params {};
		params.OldDurability = OldDurability;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikDurableStaticInteractable.NeedsKeyToReact
	 * 		Flags  -> ()
	 */
	bool ASheikDurableStaticInteractable::NeedsKeyToReact()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikDurableStaticInteractable.NeedsKeyToReact");
		
		ASheikDurableStaticInteractable_NeedsKeyToReact_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikDurableStaticInteractable.InteractableHasBeenHit_BP
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bWasSuccessfulHit                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikDurableStaticInteractable::InteractableHasBeenHit_BP(bool bWasSuccessfulHit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikDurableStaticInteractable.InteractableHasBeenHit_BP");
		
		ASheikDurableStaticInteractable_InteractableHasBeenHit_BP_Params params {};
		params.bWasSuccessfulHit = bWasSuccessfulHit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikDurableStaticInteractable.GetSkeletalMeshForDurability
	 * 		Flags  -> ()
	 */
	class USkeletalMesh* ASheikDurableStaticInteractable::GetSkeletalMeshForDurability()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikDurableStaticInteractable.GetSkeletalMeshForDurability");
		
		ASheikDurableStaticInteractable_GetSkeletalMeshForDurability_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikDurableStaticInteractable.DuarabilityMaxReached_BP
	 * 		Flags  -> ()
	 */
	void ASheikDurableStaticInteractable::DuarabilityMaxReached_BP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikDurableStaticInteractable.DuarabilityMaxReached_BP");
		
		ASheikDurableStaticInteractable_DuarabilityMaxReached_BP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikDurableStaticInteractable.BP_OnDurabilityChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewDurability                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikDurableStaticInteractable::BP_OnDurabilityChanged(int32_t NewDurability)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikDurableStaticInteractable.BP_OnDurabilityChanged");
		
		ASheikDurableStaticInteractable_BP_OnDurabilityChanged_Params params {};
		params.NewDurability = NewDurability;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikDurableStaticInteractable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikDurableStaticInteractable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikDurableStaticInteractable");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UEasyAntiCheatClientComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEasyAntiCheatClientComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.EasyAntiCheatClientComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UEasyAntiCheatServerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UEasyAntiCheatServerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.EasyAntiCheatServerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEdgeNavLinks.GenerateLinks
	 * 		Flags  -> ()
	 */
	void ASheikEdgeNavLinks::GenerateLinks()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEdgeNavLinks.GenerateLinks");
		
		ASheikEdgeNavLinks_GenerateLinks_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikEdgeNavLinks.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikEdgeNavLinks::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikEdgeNavLinks");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikEdgeNavLinksRenderingComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikEdgeNavLinksRenderingComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikEdgeNavLinksRenderingComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikEditorOnlyActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikEditorOnlyActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikEditorOnlyActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikWidgetBase.UpdateInputGroup
	 * 		Flags  -> ()
	 */
	void USheikWidgetBase::UpdateInputGroup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikWidgetBase.UpdateInputGroup");
		
		USheikWidgetBase_UpdateInputGroup_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikWidgetBase.SetActivated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bActivated                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikWidgetBase::SetActivated(bool bActivated)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikWidgetBase.SetActivated");
		
		USheikWidgetBase_SetActivated_Params params {};
		params.bActivated = bActivated;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikWidgetBase.OnDeactivated
	 * 		Flags  -> ()
	 */
	void USheikWidgetBase::OnDeactivated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikWidgetBase.OnDeactivated");
		
		USheikWidgetBase_OnDeactivated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikWidgetBase.OnActivated
	 * 		Flags  -> ()
	 */
	void USheikWidgetBase::OnActivated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikWidgetBase.OnActivated");
		
		USheikWidgetBase_OnActivated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikWidgetBase.GetNavigableWidgets
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class UIGUI_WidgetBase*>                    NavigableWidgets                                           (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USheikWidgetBase::GetNavigableWidgets(TArray<class UIGUI_WidgetBase*>* NavigableWidgets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikWidgetBase.GetNavigableWidgets");
		
		USheikWidgetBase_GetNavigableWidgets_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (NavigableWidgets != nullptr)
			*NavigableWidgets = params.NavigableWidgets;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikWidgetBase.FocusWidgetForInputGroup
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGUI_WidgetBase*                            Widget                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UserIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikWidgetBase::FocusWidgetForInputGroup(class UIGUI_WidgetBase* Widget, int32_t UserIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikWidgetBase.FocusWidgetForInputGroup");
		
		USheikWidgetBase_FocusWidgetForInputGroup_Params params {};
		params.Widget = Widget;
		params.UserIndex = UserIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikWidgetBase.Deactivate
	 * 		Flags  -> ()
	 */
	void USheikWidgetBase::Deactivate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikWidgetBase.Deactivate");
		
		USheikWidgetBase_Deactivate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikWidgetBase.Activate
	 * 		Flags  -> ()
	 */
	void USheikWidgetBase::Activate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikWidgetBase.Activate");
		
		USheikWidgetBase_Activate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikWidgetBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikWidgetBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikWidgetBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEmotePage.ReleaseLoadedEmotes
	 * 		Flags  -> ()
	 */
	void USheikEmotePage::ReleaseLoadedEmotes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEmotePage.ReleaseLoadedEmotes");
		
		USheikEmotePage_ReleaseLoadedEmotes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEmotePage.OnEmoteMontageLoadFailed
	 * 		Flags  -> ()
	 */
	void USheikEmotePage::OnEmoteMontageLoadFailed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEmotePage.OnEmoteMontageLoadFailed");
		
		USheikEmotePage_OnEmoteMontageLoadFailed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEmotePage.OnEmoteMontageLoadComplete
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGMoveMontage*                              LoadedMontage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikEmotePage::OnEmoteMontageLoadComplete(class UIGMoveMontage* LoadedMontage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEmotePage.OnEmoteMontageLoadComplete");
		
		USheikEmotePage_OnEmoteMontageLoadComplete_Params params {};
		params.LoadedMontage = LoadedMontage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEmotePage.LoadEmoteMontage
	 * 		Flags  -> ()
	 */
	void USheikEmotePage::LoadEmoteMontage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEmotePage.LoadEmoteMontage");
		
		USheikEmotePage_LoadEmoteMontage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEmotePage.HandleOnEmoteMontageLoadComplete
	 * 		Flags  -> ()
	 */
	void USheikEmotePage::HandleOnEmoteMontageLoadComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEmotePage.HandleOnEmoteMontageLoadComplete");
		
		USheikEmotePage_HandleOnEmoteMontageLoadComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikEmotePage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikEmotePage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikEmotePage");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.StartSpectating
	 * 		Flags  -> ()
	 */
	void USheikEndOfMatchCallbacks::StartSpectating()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.StartSpectating");
		
		USheikEndOfMatchCallbacks_StartSpectating_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.SetUsingFollowPlayerView
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               UseFollowPlayerView                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikEndOfMatchCallbacks::SetUsingFollowPlayerView(bool UseFollowPlayerView)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.SetUsingFollowPlayerView");
		
		USheikEndOfMatchCallbacks_SetUsingFollowPlayerView_Params params {};
		params.UseFollowPlayerView = UseFollowPlayerView;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.SetPlayerControllerToSpectatorMode
	 * 		Flags  -> ()
	 */
	void USheikEndOfMatchCallbacks::SetPlayerControllerToSpectatorMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.SetPlayerControllerToSpectatorMode");
		
		USheikEndOfMatchCallbacks_SetPlayerControllerToSpectatorMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.SetAllowSpectatorMovement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               AllowMovement                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikEndOfMatchCallbacks::SetAllowSpectatorMovement(bool AllowMovement)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.SetAllowSpectatorMovement");
		
		USheikEndOfMatchCallbacks_SetAllowSpectatorMovement_Params params {};
		params.AllowMovement = AllowMovement;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.RespawnCharacter
	 * 		Flags  -> ()
	 */
	void USheikEndOfMatchCallbacks::RespawnCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.RespawnCharacter");
		
		USheikEndOfMatchCallbacks_RespawnCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikEndOfMatchCallbacks.OnTeamDied__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikEndOfMatchCallbacks::OnTeamDied__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikEndOfMatchCallbacks.OnTeamDied__DelegateSignature");
		
		USheikEndOfMatchCallbacks_OnTeamDied__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikEndOfMatchCallbacks.OnFollowingPlayerDied__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikEndOfMatchCallbacks::OnFollowingPlayerDied__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikEndOfMatchCallbacks.OnFollowingPlayerDied__DelegateSignature");
		
		USheikEndOfMatchCallbacks_OnFollowingPlayerDied__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.NumOfTeammatesStillAlive
	 * 		Flags  -> ()
	 */
	int32_t USheikEndOfMatchCallbacks::NumOfTeammatesStillAlive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.NumOfTeammatesStillAlive");
		
		USheikEndOfMatchCallbacks_NumOfTeammatesStillAlive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.IsUsingFollowPlayerView
	 * 		Flags  -> ()
	 */
	bool USheikEndOfMatchCallbacks::IsUsingFollowPlayerView()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.IsUsingFollowPlayerView");
		
		USheikEndOfMatchCallbacks_IsUsingFollowPlayerView_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.IsSpectatorMovementAllowed
	 * 		Flags  -> ()
	 */
	bool USheikEndOfMatchCallbacks::IsSpectatorMovementAllowed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.IsSpectatorMovementAllowed");
		
		USheikEndOfMatchCallbacks_IsSpectatorMovementAllowed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.IsSpectatingSelf
	 * 		Flags  -> ()
	 */
	bool USheikEndOfMatchCallbacks::IsSpectatingSelf()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.IsSpectatingSelf");
		
		USheikEndOfMatchCallbacks_IsSpectatingSelf_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.IsLocalPlayerWinner
	 * 		Flags  -> ()
	 */
	bool USheikEndOfMatchCallbacks::IsLocalPlayerWinner()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.IsLocalPlayerWinner");
		
		USheikEndOfMatchCallbacks_IsLocalPlayerWinner_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.IsInFreeCam
	 * 		Flags  -> ()
	 */
	bool USheikEndOfMatchCallbacks::IsInFreeCam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.IsInFreeCam");
		
		USheikEndOfMatchCallbacks_IsInFreeCam_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.IsInATeam
	 * 		Flags  -> ()
	 */
	bool USheikEndOfMatchCallbacks::IsInATeam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.IsInATeam");
		
		USheikEndOfMatchCallbacks_IsInATeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.InitializeLocalPlayerControllerDelegates
	 * 		Flags  -> ()
	 */
	void USheikEndOfMatchCallbacks::InitializeLocalPlayerControllerDelegates()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.InitializeLocalPlayerControllerDelegates");
		
		USheikEndOfMatchCallbacks_InitializeLocalPlayerControllerDelegates_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.HasTeammatesWhoAreStillAlive
	 * 		Flags  -> ()
	 */
	bool USheikEndOfMatchCallbacks::HasTeammatesWhoAreStillAlive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.HasTeammatesWhoAreStillAlive");
		
		USheikEndOfMatchCallbacks_HasTeammatesWhoAreStillAlive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.HandleOnSpectatorInfoUpdateTimeout
	 * 		Flags  -> ()
	 */
	void USheikEndOfMatchCallbacks::HandleOnSpectatorInfoUpdateTimeout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.HandleOnSpectatorInfoUpdateTimeout");
		
		USheikEndOfMatchCallbacks_HandleOnSpectatorInfoUpdateTimeout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.HandleOnPlayerFollowingChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               IsFollowingPlayer                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikEndOfMatchCallbacks::HandleOnPlayerFollowingChanged(bool IsFollowingPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.HandleOnPlayerFollowingChanged");
		
		USheikEndOfMatchCallbacks_HandleOnPlayerFollowingChanged_Params params {};
		params.IsFollowingPlayer = IsFollowingPlayer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.HandleOnKnockoutOccurred
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGKnockOutData                             KnockOutData                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikEndOfMatchCallbacks::HandleOnKnockoutOccurred(const struct FIGKnockOutData& KnockOutData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.HandleOnKnockoutOccurred");
		
		USheikEndOfMatchCallbacks_HandleOnKnockoutOccurred_Params params {};
		params.KnockOutData = KnockOutData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.HandleOnFollowingPlayerStateDied
	 * 		Flags  -> ()
	 */
	void USheikEndOfMatchCallbacks::HandleOnFollowingPlayerStateDied()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.HandleOnFollowingPlayerStateDied");
		
		USheikEndOfMatchCallbacks_HandleOnFollowingPlayerStateDied_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.HandleOnEnteredSpectatorMode
	 * 		Flags  -> ()
	 */
	void USheikEndOfMatchCallbacks::HandleOnEnteredSpectatorMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.HandleOnEnteredSpectatorMode");
		
		USheikEndOfMatchCallbacks_HandleOnEnteredSpectatorMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.HandleOldSpectatorInfoUpdated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikSpectatorInfo                         NewSpectatorInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikEndOfMatchCallbacks::HandleOldSpectatorInfoUpdated(const struct FSheikSpectatorInfo& NewSpectatorInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.HandleOldSpectatorInfoUpdated");
		
		USheikEndOfMatchCallbacks_HandleOldSpectatorInfoUpdated_Params params {};
		params.NewSpectatorInfo = NewSpectatorInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.GetWinners
	 * 		Flags  -> ()
	 */
	TArray<class AIGPlayerState*> USheikEndOfMatchCallbacks::GetWinners()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.GetWinners");
		
		USheikEndOfMatchCallbacks_GetWinners_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.GetTeammatesStats
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikPlayerStateStatInfo>           OutTeammateStats                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikEndOfMatchCallbacks::GetTeammatesStats(TArray<struct FSheikPlayerStateStatInfo>* OutTeammateStats)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.GetTeammatesStats");
		
		USheikEndOfMatchCallbacks_GetTeammatesStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutTeammateStats != nullptr)
			*OutTeammateStats = params.OutTeammateStats;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.GetTeammates
	 * 		Flags  -> ()
	 */
	TArray<class AIGPlayerState*> USheikEndOfMatchCallbacks::GetTeammates()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.GetTeammates");
		
		USheikEndOfMatchCallbacks_GetTeammates_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.GetLocalPlayerStats
	 * 		Flags  -> ()
	 */
	TArray<struct FSheikPlayerStat> USheikEndOfMatchCallbacks::GetLocalPlayerStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.GetLocalPlayerStats");
		
		USheikEndOfMatchCallbacks_GetLocalPlayerStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.FollowNextPlayerFromPlayerState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikPlayerStateCommon*                     CurrentPlayerState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikEndOfMatchCallbacks::FollowNextPlayerFromPlayerState(class ASheikPlayerStateCommon* CurrentPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.FollowNextPlayerFromPlayerState");
		
		USheikEndOfMatchCallbacks_FollowNextPlayerFromPlayerState_Params params {};
		params.CurrentPlayerState = CurrentPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.FollowNextPlayer
	 * 		Flags  -> ()
	 */
	void USheikEndOfMatchCallbacks::FollowNextPlayer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.FollowNextPlayer");
		
		USheikEndOfMatchCallbacks_FollowNextPlayer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.EnterFreeCam
	 * 		Flags  -> ()
	 */
	void USheikEndOfMatchCallbacks::EnterFreeCam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.EnterFreeCam");
		
		USheikEndOfMatchCallbacks_EnterFreeCam_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEndOfMatchCallbacks.ConvertPlayerStatsToUIStats
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikPlayerDataStat>                InPlayerStats                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<struct FSheikPlayerStat>                    OutPlayerStats                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikEndOfMatchCallbacks::ConvertPlayerStatsToUIStats(TArray<struct FSheikPlayerDataStat>* InPlayerStats, TArray<struct FSheikPlayerStat>* OutPlayerStats)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEndOfMatchCallbacks.ConvertPlayerStatsToUIStats");
		
		USheikEndOfMatchCallbacks_ConvertPlayerStatsToUIStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InPlayerStats != nullptr)
			*InPlayerStats = params.InPlayerStats;
		if (OutPlayerStats != nullptr)
			*OutPlayerStats = params.OutPlayerStats;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikEndOfMatchCallbacks.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikEndOfMatchCallbacks::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikEndOfMatchCallbacks");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikEOMAnnouncementProcessor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikEOMAnnouncementProcessor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikEOMAnnouncementProcessor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikErrorManager.GetLogoutError
	 * 		Flags  -> ()
	 */
	struct FSheikError USheikErrorManager::GetLogoutError()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikErrorManager.GetLogoutError");
		
		USheikErrorManager_GetLogoutError_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikErrorManager.DoLogoutError
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikError                                 Error                                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikErrorManager::DoLogoutError(const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikErrorManager.DoLogoutError");
		
		USheikErrorManager_DoLogoutError_Params params {};
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikErrorManager.ConsumeNetworkLogout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               LogoutOccurred                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        HeaderText                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        BodyText                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	void USheikErrorManager::ConsumeNetworkLogout(bool* LogoutOccurred, class FText* HeaderText, class FText* BodyText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikErrorManager.ConsumeNetworkLogout");
		
		USheikErrorManager_ConsumeNetworkLogout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (LogoutOccurred != nullptr)
			*LogoutOccurred = params.LogoutOccurred;
		if (HeaderText != nullptr)
			*HeaderText = params.HeaderText;
		if (BodyText != nullptr)
			*BodyText = params.BodyText;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikErrorManager.ClearLogoutError
	 * 		Flags  -> ()
	 */
	void USheikErrorManager::ClearLogoutError()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikErrorManager.ClearLogoutError");
		
		USheikErrorManager_ClearLogoutError_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikErrorManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikErrorManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikErrorManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikEventRewardSetData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikEventRewardSetData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikEventRewardSetData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEventHistoryWidget.AddTextToEventLine
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        EventText                                                  (Parm, NativeAccessSpecifierPublic)
	 */
	void USheikEventHistoryWidget::AddTextToEventLine(const class FText& EventText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEventHistoryWidget.AddTextToEventLine");
		
		USheikEventHistoryWidget_AddTextToEventLine_Params params {};
		params.EventText = EventText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikEventHistoryWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikEventHistoryWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikEventHistoryWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEventLineWidget.ShowEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        EventText                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikEventLineWidget::ShowEvent(const class FText& EventText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEventLineWidget.ShowEvent");
		
		USheikEventLineWidget_ShowEvent_Params params {};
		params.EventText = EventText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEventLineWidget.ShiftDown
	 * 		Flags  -> ()
	 */
	void USheikEventLineWidget::ShiftDown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEventLineWidget.ShiftDown");
		
		USheikEventLineWidget_ShiftDown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikEventLineWidget.GetEventText
	 * 		Flags  -> ()
	 */
	class FText USheikEventLineWidget::GetEventText()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikEventLineWidget.GetEventText");
		
		USheikEventLineWidget_GetEventText_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikEventLineWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikEventLineWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikEventLineWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikEventSplineActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikEventSplineActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikEventSplineActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecTriggerErrorTelemetry
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            SystemInt                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            SourceInt                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CallCode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ErrorCode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecTriggerErrorTelemetry(int32_t SystemInt, int32_t SourceInt, int32_t CallCode, int32_t ErrorCode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecTriggerErrorTelemetry");
		
		USheikExecManager_ExecTriggerErrorTelemetry_Params params {};
		params.SystemInt = SystemInt;
		params.SourceInt = SourceInt;
		params.CallCode = CallCode;
		params.ErrorCode = ErrorCode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecTestErrorPopup
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            SystemInt                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            SourceInt                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CallCode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ErrorCode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecTestErrorPopup(int32_t SystemInt, int32_t SourceInt, int32_t CallCode, int32_t ErrorCode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecTestErrorPopup");
		
		USheikExecManager_ExecTestErrorPopup_Params params {};
		params.SystemInt = SystemInt;
		params.SourceInt = SourceInt;
		params.CallCode = CallCode;
		params.ErrorCode = ErrorCode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecTestCozmoBanFlow
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Reason                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Expiration                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecTestCozmoBanFlow(const class FString& Reason, const class FString& Expiration, int32_t Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecTestCozmoBanFlow");
		
		USheikExecManager_ExecTestCozmoBanFlow_Params params {};
		params.Reason = Reason;
		params.Expiration = Expiration;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecStats_UploadSingle_Client
	 * 		Flags  -> ()
	 */
	void USheikExecManager::ExecStats_UploadSingle_Client()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecStats_UploadSingle_Client");
		
		USheikExecManager_ExecStats_UploadSingle_Client_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecStats_UploadSeasonalStats
	 * 		Flags  -> ()
	 */
	void USheikExecManager::ExecStats_UploadSeasonalStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecStats_UploadSeasonalStats");
		
		USheikExecManager_ExecStats_UploadSeasonalStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecStats_UploadCurrentStatsAsSeason
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EIGSeasonIdentifier                                Season                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecStats_UploadCurrentStatsAsSeason(EIGSeasonIdentifier Season)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecStats_UploadCurrentStatsAsSeason");
		
		USheikExecManager_ExecStats_UploadCurrentStatsAsSeason_Params params {};
		params.Season = Season;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecStats_SetAndUploadStatValue_Client
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      StatBaseName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              LifetimeValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              WatermarkValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              LiveSeasonLifetimeValue                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              LiveSeasonWatermarkValue                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecStats_SetAndUploadStatValue_Client(const class FString& StatBaseName, float LifetimeValue, float WatermarkValue, float LiveSeasonLifetimeValue, float LiveSeasonWatermarkValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecStats_SetAndUploadStatValue_Client");
		
		USheikExecManager_ExecStats_SetAndUploadStatValue_Client_Params params {};
		params.StatBaseName = StatBaseName;
		params.LifetimeValue = LifetimeValue;
		params.WatermarkValue = WatermarkValue;
		params.LiveSeasonLifetimeValue = LiveSeasonLifetimeValue;
		params.LiveSeasonWatermarkValue = LiveSeasonWatermarkValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecStats_ResetSeasonalStatsOnCozmo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EIGSeasonIdentifier                                Season                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecStats_ResetSeasonalStatsOnCozmo(EIGSeasonIdentifier Season)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecStats_ResetSeasonalStatsOnCozmo");
		
		USheikExecManager_ExecStats_ResetSeasonalStatsOnCozmo_Params params {};
		params.Season = Season;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecStats_ResetAllStatsForLocalPlayer_Client
	 * 		Flags  -> ()
	 */
	void USheikExecManager::ExecStats_ResetAllStatsForLocalPlayer_Client()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecStats_ResetAllStatsForLocalPlayer_Client");
		
		USheikExecManager_ExecStats_ResetAllStatsForLocalPlayer_Client_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecStats_PrintStatsGameInstance_Client
	 * 		Flags  -> ()
	 */
	void USheikExecManager::ExecStats_PrintStatsGameInstance_Client()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecStats_PrintStatsGameInstance_Client");
		
		USheikExecManager_ExecStats_PrintStatsGameInstance_Client_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecStats_PrintSingleStat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      StatBaseName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecStats_PrintSingleStat(const class FString& StatBaseName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecStats_PrintSingleStat");
		
		USheikExecManager_ExecStats_PrintSingleStat_Params params {};
		params.StatBaseName = StatBaseName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecStats_PrintAllStatBaseNames
	 * 		Flags  -> ()
	 */
	void USheikExecManager::ExecStats_PrintAllStatBaseNames()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecStats_PrintAllStatBaseNames");
		
		USheikExecManager_ExecStats_PrintAllStatBaseNames_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecStats_DownloadSpecificStatField_Client
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      StatBaseName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      StatField                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecStats_DownloadSpecificStatField_Client(const class FString& StatBaseName, const class FString& StatField)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecStats_DownloadSpecificStatField_Client");
		
		USheikExecManager_ExecStats_DownloadSpecificStatField_Client_Params params {};
		params.StatBaseName = StatBaseName;
		params.StatField = StatField;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecStats_DownloadSingle_Client
	 * 		Flags  -> ()
	 */
	void USheikExecManager::ExecStats_DownloadSingle_Client()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecStats_DownloadSingle_Client");
		
		USheikExecManager_ExecStats_DownloadSingle_Client_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecStats_DownloadSeasonalStats
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EIGSeasonIdentifier                                Season                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecStats_DownloadSeasonalStats(EIGSeasonIdentifier Season)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecStats_DownloadSeasonalStats");
		
		USheikExecManager_ExecStats_DownloadSeasonalStats_Params params {};
		params.Season = Season;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecStats_ClearSeasonalStatsCache
	 * 		Flags  -> ()
	 */
	void USheikExecManager::ExecStats_ClearSeasonalStatsCache()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecStats_ClearSeasonalStatsCache");
		
		USheikExecManager_ExecStats_ClearSeasonalStatsCache_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecShowNoticesPopup
	 * 		Flags  -> ()
	 */
	void USheikExecManager::ExecShowNoticesPopup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecShowNoticesPopup");
		
		USheikExecManager_ExecShowNoticesPopup_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecSheikToggleOverlay
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      OverlayName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bOn                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecSheikToggleOverlay(const class FString& OverlayName, bool bOn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecSheikToggleOverlay");
		
		USheikExecManager_ExecSheikToggleOverlay_Params params {};
		params.OverlayName = OverlayName;
		params.bOn = bOn;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecSheikSetPresence
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PresenceInt                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecSheikSetPresence(int32_t PresenceInt)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecSheikSetPresence");
		
		USheikExecManager_ExecSheikSetPresence_Params params {};
		params.PresenceInt = PresenceInt;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecSheikSetEOSConnectionStatus
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Status                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecSheikSetEOSConnectionStatus(int32_t Status)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecSheikSetEOSConnectionStatus");
		
		USheikExecManager_ExecSheikSetEOSConnectionStatus_Params params {};
		params.Status = Status;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecSheikRefreshPresence
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ID                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecSheikRefreshPresence(const class FString& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecSheikRefreshPresence");
		
		USheikExecManager_ExecSheikRefreshPresence_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecSheikGetPresence
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ID                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecSheikGetPresence(const class FString& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecSheikGetPresence");
		
		USheikExecManager_ExecSheikGetPresence_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecSheikAccountsEOSShowBlockUI
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      EOSId                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecSheikAccountsEOSShowBlockUI(const class FString& EOSId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecSheikAccountsEOSShowBlockUI");
		
		USheikExecManager_ExecSheikAccountsEOSShowBlockUI_Params params {};
		params.EOSId = EOSId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecSetLoginQueueOverride
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            TicketId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ServingNumber                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PollingIntervalSeconds                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecSetLoginQueueOverride(int32_t TicketId, int32_t ServingNumber, int32_t PollingIntervalSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecSetLoginQueueOverride");
		
		USheikExecManager_ExecSetLoginQueueOverride_Params params {};
		params.TicketId = TicketId;
		params.ServingNumber = ServingNumber;
		params.PollingIntervalSeconds = PollingIntervalSeconds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecRep_SetWeeklyChallengeState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      WeekNumberOrLabel                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecRep_SetWeeklyChallengeState(const class FString& WeekNumberOrLabel, bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecRep_SetWeeklyChallengeState");
		
		USheikExecManager_ExecRep_SetWeeklyChallengeState_Params params {};
		params.WeekNumberOrLabel = WeekNumberOrLabel;
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecRep_SetAndUploadRepProgress_Client
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      RepName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              ProgressValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Completed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecRep_SetAndUploadRepProgress_Client(const class FString& RepName, float ProgressValue, float Completed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecRep_SetAndUploadRepProgress_Client");
		
		USheikExecManager_ExecRep_SetAndUploadRepProgress_Client_Params params {};
		params.RepName = RepName;
		params.ProgressValue = ProgressValue;
		params.Completed = Completed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecRedeemCodes
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      CommaSeparatedCodes                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecRedeemCodes(const class FString& CommaSeparatedCodes)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecRedeemCodes");
		
		USheikExecManager_ExecRedeemCodes_Params params {};
		params.CommaSeparatedCodes = CommaSeparatedCodes;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecQuerySingleUserInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      EOSId                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecQuerySingleUserInfo(const class FString& EOSId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecQuerySingleUserInfo");
		
		USheikExecManager_ExecQuerySingleUserInfo_Params params {};
		params.EOSId = EOSId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecQueryExternalUserId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ExternalId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecQueryExternalUserId(const class FString& ExternalId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecQueryExternalUserId");
		
		USheikExecManager_ExecQueryExternalUserId_Params params {};
		params.ExternalId = ExternalId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecKWSResetAdultSave
	 * 		Flags  -> ()
	 */
	void USheikExecManager::ExecKWSResetAdultSave()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecKWSResetAdultSave");
		
		USheikExecManager_ExecKWSResetAdultSave_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecKWSQueryKidRequirements
	 * 		Flags  -> ()
	 */
	void USheikExecManager::ExecKWSQueryKidRequirements()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecKWSQueryKidRequirements");
		
		USheikExecManager_ExecKWSQueryKidRequirements_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecKWSCommitParentEmail
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ParentEmail                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecKWSCommitParentEmail(const class FString& ParentEmail)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecKWSCommitParentEmail");
		
		USheikExecManager_ExecKWSCommitParentEmail_Params params {};
		params.ParentEmail = ParentEmail;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecKWSCommitDOB
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Month                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Day                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Year                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecKWSCommitDOB(int32_t Month, int32_t Day, int32_t Year)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecKWSCommitDOB");
		
		USheikExecManager_ExecKWSCommitDOB_Params params {};
		params.Month = Month;
		params.Day = Day;
		params.Year = Year;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecClearRecentPlayers
	 * 		Flags  -> ()
	 */
	void USheikExecManager::ExecClearRecentPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecClearRecentPlayers");
		
		USheikExecManager_ExecClearRecentPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecAttemptLogout
	 * 		Flags  -> ()
	 */
	void USheikExecManager::ExecAttemptLogout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecAttemptLogout");
		
		USheikExecManager_ExecAttemptLogout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecAttemptEOSLogin
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ID                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Token                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecAttemptEOSLogin(const class FString& ID, const class FString& Token)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecAttemptEOSLogin");
		
		USheikExecManager_ExecAttemptEOSLogin_Params params {};
		params.ID = ID;
		params.Token = Token;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecAttemptCozmoLogin
	 * 		Flags  -> ()
	 */
	void USheikExecManager::ExecAttemptCozmoLogin()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecAttemptCozmoLogin");
		
		USheikExecManager_ExecAttemptCozmoLogin_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.ExecAddRecentPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      EasId                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikPlatformService                              PlatformService                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::ExecAddRecentPlayer(const class FString& EasId, ESheikPlatformService PlatformService)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.ExecAddRecentPlayer");
		
		USheikExecManager_ExecAddRecentPlayer_Params params {};
		params.EasId = EasId;
		params.PlatformService = PlatformService;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikExecManager.DebugInputSubscriberDataMap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikExecManager::DebugInputSubscriberDataMap(bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikExecManager.DebugInputSubscriberDataMap");
		
		USheikExecManager_DebugInputSubscriberDataMap_Params params {};
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikExecManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikExecManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikExecManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikFallDistItemDispenserActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikFallDistItemDispenserActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikFallDistItemDispenserActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFanCloutAnnouncementWidget.ShowPlayerLeveling
	 * 		Flags  -> ()
	 */
	void USheikFanCloutAnnouncementWidget::ShowPlayerLeveling()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFanCloutAnnouncementWidget.ShowPlayerLeveling");
		
		USheikFanCloutAnnouncementWidget_ShowPlayerLeveling_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFanCloutAnnouncementWidget.SetLevelUpTiming
	 * 		Flags  -> ()
	 */
	void USheikFanCloutAnnouncementWidget::SetLevelUpTiming()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFanCloutAnnouncementWidget.SetLevelUpTiming");
		
		USheikFanCloutAnnouncementWidget_SetLevelUpTiming_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFanCloutAnnouncementWidget.SetInitialCloutBarData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               ShowIcons                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFanCloutAnnouncementWidget::SetInitialCloutBarData(bool ShowIcons)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFanCloutAnnouncementWidget.SetInitialCloutBarData");
		
		USheikFanCloutAnnouncementWidget_SetInitialCloutBarData_Params params {};
		params.ShowIcons = ShowIcons;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFanCloutAnnouncementWidget.SetFinalCloutBarData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               ShowIcons                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFanCloutAnnouncementWidget::SetFinalCloutBarData(bool ShowIcons)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFanCloutAnnouncementWidget.SetFinalCloutBarData");
		
		USheikFanCloutAnnouncementWidget_SetFinalCloutBarData_Params params {};
		params.ShowIcons = ShowIcons;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFanCloutAnnouncementWidget.SetFanMailText
	 * 		Flags  -> ()
	 */
	void USheikFanCloutAnnouncementWidget::SetFanMailText()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFanCloutAnnouncementWidget.SetFanMailText");
		
		USheikFanCloutAnnouncementWidget_SetFanMailText_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFanCloutAnnouncementWidget.SetCloutBarData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            CurrentLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NextLevel                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               ShowIcons                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFanCloutAnnouncementWidget::SetCloutBarData(int32_t CurrentLevel, int32_t NextLevel, bool ShowIcons)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFanCloutAnnouncementWidget.SetCloutBarData");
		
		USheikFanCloutAnnouncementWidget_SetCloutBarData_Params params {};
		params.CurrentLevel = CurrentLevel;
		params.NextLevel = NextLevel;
		params.ShowIcons = ShowIcons;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFanCloutAnnouncementWidget.GetProgressBarUpdateTime
	 * 		Flags  -> ()
	 */
	float USheikFanCloutAnnouncementWidget::GetProgressBarUpdateTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFanCloutAnnouncementWidget.GetProgressBarUpdateTime");
		
		USheikFanCloutAnnouncementWidget_GetProgressBarUpdateTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikFanCloutAnnouncementWidget.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikFanCloutAnnouncementWidget::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikFanCloutAnnouncementWidget");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFansService.HandleOnRingFinishedClosingSumFansAndNotify
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFansService::HandleOnRingFinishedClosingSumFansAndNotify(int32_t Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFansService.HandleOnRingFinishedClosingSumFansAndNotify");
		
		USheikFansService_HandleOnRingFinishedClosingSumFansAndNotify_Params params {};
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFansService.HandleOnKnockoutOccurredPotentiallyAwardFans
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGKnockOutData                             KnockOutData                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikFansService::HandleOnKnockoutOccurredPotentiallyAwardFans(const struct FIGKnockOutData& KnockOutData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFansService.HandleOnKnockoutOccurredPotentiallyAwardFans");
		
		USheikFansService_HandleOnKnockoutOccurredPotentiallyAwardFans_Params params {};
		params.KnockOutData = KnockOutData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFansService.CalculateFansAccrued
	 * 		Flags  -> ()
	 */
	void USheikFansService::CalculateFansAccrued()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFansService.CalculateFansAccrued");
		
		USheikFansService_CalculateFansAccrued_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikFansService.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikFansService::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikFansService");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikFinalRoundBeacon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikFinalRoundBeacon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikFinalRoundBeacon");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikCTFBeacon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikCTFBeacon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikCTFBeacon");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFriendsManager.UnblockPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPlayerAccount                         Account                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Callback                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikFriendsManager::UnblockPlayer(const struct FSheikPlayerAccount& Account, const class FScriptDelegate& Callback)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFriendsManager.UnblockPlayer");
		
		USheikFriendsManager_UnblockPlayer_Params params {};
		params.Account = Account;
		params.Callback = Callback;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikFriendsManager.OnUnblockPlayerDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bWasSuccessful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      CozmoId                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFriendsManager::OnUnblockPlayerDelegate__DelegateSignature(bool bWasSuccessful, const struct FSheikError& Error, const class FString& CozmoId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikFriendsManager.OnUnblockPlayerDelegate__DelegateSignature");
		
		USheikFriendsManager_OnUnblockPlayerDelegate__DelegateSignature_Params params {};
		params.bWasSuccessful = bWasSuccessful;
		params.Error = Error;
		params.CozmoId = CozmoId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikFriendsManager.OnFriendsListUpdated__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFriendsManager::OnFriendsListUpdated__DelegateSignature(bool bSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikFriendsManager.OnFriendsListUpdated__DelegateSignature");
		
		USheikFriendsManager_OnFriendsListUpdated__DelegateSignature_Params params {};
		params.bSuccessful = bSuccessful;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikFriendsManager.OnFriendPresenceUpdated__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPlayerAccount                         Account                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikFriendsManager::OnFriendPresenceUpdated__DelegateSignature(const struct FSheikPlayerAccount& Account)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikFriendsManager.OnFriendPresenceUpdated__DelegateSignature");
		
		USheikFriendsManager_OnFriendPresenceUpdated__DelegateSignature_Params params {};
		params.Account = Account;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikFriendsManager.OnBlockPlayerDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bWasSuccessful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FString                                      CozmoId                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFriendsManager::OnBlockPlayerDelegate__DelegateSignature(bool bWasSuccessful, const struct FSheikError& Error, const class FString& CozmoId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikFriendsManager.OnBlockPlayerDelegate__DelegateSignature");
		
		USheikFriendsManager_OnBlockPlayerDelegate__DelegateSignature_Params params {};
		params.bWasSuccessful = bWasSuccessful;
		params.Error = Error;
		params.CozmoId = CozmoId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikFriendsManager.OnBlockedPlayersUpdated__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikFriendsManager::OnBlockedPlayersUpdated__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikFriendsManager.OnBlockedPlayersUpdated__DelegateSignature");
		
		USheikFriendsManager_OnBlockedPlayersUpdated__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFriendsManager.GetFriendsList
	 * 		Flags  -> ()
	 */
	TArray<struct FSheikPlayerAccount> USheikFriendsManager::GetFriendsList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFriendsManager.GetFriendsList");
		
		USheikFriendsManager_GetFriendsList_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFriendsManager.GetBlockedPlayers
	 * 		Flags  -> ()
	 */
	TArray<struct FSheikPlayerAccount> USheikFriendsManager::GetBlockedPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFriendsManager.GetBlockedPlayers");
		
		USheikFriendsManager_GetBlockedPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFriendsManager.GetBlockedCozmoPlayers
	 * 		Flags  -> ()
	 */
	TArray<struct FSheikCozmoAccount> USheikFriendsManager::GetBlockedCozmoPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFriendsManager.GetBlockedCozmoPlayers");
		
		USheikFriendsManager_GetBlockedCozmoPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFriendsManager.GetBlockedByCozmoPlayers
	 * 		Flags  -> ()
	 */
	TArray<struct FSheikCozmoAccount> USheikFriendsManager::GetBlockedByCozmoPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFriendsManager.GetBlockedByCozmoPlayers");
		
		USheikFriendsManager_GetBlockedByCozmoPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFriendsManager.DisplayPlatformPlayerProfileUI
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPlayerAccount                         Account                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikFriendsManager::DisplayPlatformPlayerProfileUI(const struct FSheikPlayerAccount& Account)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFriendsManager.DisplayPlatformPlayerProfileUI");
		
		USheikFriendsManager_DisplayPlatformPlayerProfileUI_Params params {};
		params.Account = Account;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFriendsManager.BlockPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPlayerAccount                         Account                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Callback                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikFriendsManager::BlockPlayer(const struct FSheikPlayerAccount& Account, const class FScriptDelegate& Callback)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFriendsManager.BlockPlayer");
		
		USheikFriendsManager_BlockPlayer_Params params {};
		params.Account = Account;
		params.Callback = Callback;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikFriendsManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikFriendsManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikFriendsManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.RedirectFromBattlePassToVirtualCurrency
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PriceToReach                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFrontendPersistentScreen::RedirectFromBattlePassToVirtualCurrency(int32_t PriceToReach)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.RedirectFromBattlePassToVirtualCurrency");
		
		USheikFrontendPersistentScreen_RedirectFromBattlePassToVirtualCurrency_Params params {};
		params.PriceToReach = PriceToReach;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.OpenSocialMenu
	 * 		Flags  -> ()
	 */
	void USheikFrontendPersistentScreen::OpenSocialMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.OpenSocialMenu");
		
		USheikFrontendPersistentScreen_OpenSocialMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.OpenSettingsMenu
	 * 		Flags  -> ()
	 */
	void USheikFrontendPersistentScreen::OpenSettingsMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.OpenSettingsMenu");
		
		USheikFrontendPersistentScreen_OpenSettingsMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.NavigateToTabIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            TabIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFrontendPersistentScreen::NavigateToTabIndex(int32_t TabIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.NavigateToTabIndex");
		
		USheikFrontendPersistentScreen_NavigateToTabIndex_Params params {};
		params.TabIndex = TabIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.NavigateToTabClass
	 * 		Flags  -> ()
	 */
	void USheikFrontendPersistentScreen::NavigateToTabClass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.NavigateToTabClass");
		
		USheikFrontendPersistentScreen_NavigateToTabClass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.IsTabInputEnabled
	 * 		Flags  -> ()
	 */
	bool USheikFrontendPersistentScreen::IsTabInputEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.IsTabInputEnabled");
		
		USheikFrontendPersistentScreen_IsTabInputEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.HandleOnPartyMatchmakingStopped
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsLeader                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFrontendPersistentScreen::HandleOnPartyMatchmakingStopped(bool bIsLeader)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.HandleOnPartyMatchmakingStopped");
		
		USheikFrontendPersistentScreen_HandleOnPartyMatchmakingStopped_Params params {};
		params.bIsLeader = bIsLeader;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.HandleOnPartyMatchmakingStarted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ConfigurationName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsLeader                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFrontendPersistentScreen::HandleOnPartyMatchmakingStarted(const class FString& ConfigurationName, bool bIsLeader)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.HandleOnPartyMatchmakingStarted");
		
		USheikFrontendPersistentScreen_HandleOnPartyMatchmakingStarted_Params params {};
		params.ConfigurationName = ConfigurationName;
		params.bIsLeader = bIsLeader;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.HandleOnPartyMatchmakingFound
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsLeader                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFrontendPersistentScreen::HandleOnPartyMatchmakingFound(bool bIsLeader)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.HandleOnPartyMatchmakingFound");
		
		USheikFrontendPersistentScreen_HandleOnPartyMatchmakingFound_Params params {};
		params.bIsLeader = bIsLeader;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.HandleOnPartyMatchmakingError
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        ErrorText                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsPartyLeader                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFrontendPersistentScreen::HandleOnPartyMatchmakingError(const class FText& ErrorText, bool bIsPartyLeader)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.HandleOnPartyMatchmakingError");
		
		USheikFrontendPersistentScreen_HandleOnPartyMatchmakingError_Params params {};
		params.ErrorText = ErrorText;
		params.bIsPartyLeader = bIsPartyLeader;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.HandleFocusChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsContextMenuFocused                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFrontendPersistentScreen::HandleFocusChanged(bool bIsContextMenuFocused)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.HandleFocusChanged");
		
		USheikFrontendPersistentScreen_HandleFocusChanged_Params params {};
		params.bIsContextMenuFocused = bIsContextMenuFocused;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.GetTabIndexFromScreen
	 * 		Flags  -> ()
	 */
	int32_t USheikFrontendPersistentScreen::GetTabIndexFromScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.GetTabIndexFromScreen");
		
		USheikFrontendPersistentScreen_GetTabIndexFromScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.ExitSocialMenu
	 * 		Flags  -> ()
	 */
	void USheikFrontendPersistentScreen::ExitSocialMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.ExitSocialMenu");
		
		USheikFrontendPersistentScreen_ExitSocialMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.ExitSettingsMenu
	 * 		Flags  -> ()
	 */
	void USheikFrontendPersistentScreen::ExitSettingsMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.ExitSettingsMenu");
		
		USheikFrontendPersistentScreen_ExitSettingsMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.ExitGameModesMenu
	 * 		Flags  -> ()
	 */
	void USheikFrontendPersistentScreen::ExitGameModesMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.ExitGameModesMenu");
		
		USheikFrontendPersistentScreen_ExitGameModesMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.EnableTabInput
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnableInput                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bAllowChangeWhileLoading                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFrontendPersistentScreen::EnableTabInput(bool bEnableInput, bool bAllowChangeWhileLoading)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.EnableTabInput");
		
		USheikFrontendPersistentScreen_EnableTabInput_Params params {};
		params.bEnableInput = bEnableInput;
		params.bAllowChangeWhileLoading = bAllowChangeWhileLoading;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.EnableSocialMenuInput
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnableInput                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFrontendPersistentScreen::EnableSocialMenuInput(bool bEnableInput)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.EnableSocialMenuInput");
		
		USheikFrontendPersistentScreen_EnableSocialMenuInput_Params params {};
		params.bEnableInput = bEnableInput;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.EnableSettingsMenuInput
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnableInput                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFrontendPersistentScreen::EnableSettingsMenuInput(bool bEnableInput)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.EnableSettingsMenuInput");
		
		USheikFrontendPersistentScreen_EnableSettingsMenuInput_Params params {};
		params.bEnableInput = bEnableInput;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikFrontendPersistentScreen.DisablePersistentWidgets
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bHideBattlePass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHideTabs                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHideAccountInfo                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikFrontendPersistentScreen::DisablePersistentWidgets(bool bHideBattlePass, bool bHideTabs, bool bHideAccountInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikFrontendPersistentScreen.DisablePersistentWidgets");
		
		USheikFrontendPersistentScreen_DisablePersistentWidgets_Params params {};
		params.bHideBattlePass = bHideBattlePass;
		params.bHideTabs = bHideTabs;
		params.bHideAccountInfo = bHideAccountInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikFrontendPersistentScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikFrontendPersistentScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikFrontendPersistentScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInfo.ShouldShowPerkXPMeter
	 * 		Flags  -> ()
	 */
	bool USheikGameInfo::ShouldShowPerkXPMeter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInfo.ShouldShowPerkXPMeter");
		
		USheikGameInfo_ShouldShowPerkXPMeter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInfo.GetSheikModValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikModValueType                                 Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float USheikGameInfo::GetSheikModValue(ESheikModValueType Type)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInfo.GetSheikModValue");
		
		USheikGameInfo_GetSheikModValue_Params params {};
		params.Type = Type;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikGameInfo.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikGameInfo::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikGameInfo");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikModeDescriptorsAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikModeDescriptorsAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikModeDescriptorsAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.UpdateTeamFillSettings
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bTeamFillToggle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::UpdateTeamFillSettings(bool bTeamFillToggle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.UpdateTeamFillSettings");
		
		USheikGameInstance_UpdateTeamFillSettings_Params params {};
		params.bTeamFillToggle = bTeamFillToggle;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.UpdateRerollAllowanceForUI
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::UpdateRerollAllowanceForUI()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.UpdateRerollAllowanceForUI");
		
		USheikGameInstance_UpdateRerollAllowanceForUI_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.UpdateRepAllowanceForUI
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::UpdateRepAllowanceForUI()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.UpdateRepAllowanceForUI");
		
		USheikGameInstance_UpdateRepAllowanceForUI_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.UnregisterExecBPCall
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      CallName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::UnregisterExecBPCall(const class FString& CallName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.UnregisterExecBPCall");
		
		USheikGameInstance_UnregisterExecBPCall_Params params {};
		params.CallName = CallName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestUpdatePlayerAttributeData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PlatformService                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CloutLevel                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PlayerSkill                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CrossPlaySettingEnabled                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::TestUpdatePlayerAttributeData(const class FString& PlayerName, int32_t PlatformService, int32_t CloutLevel, int32_t PlayerSkill, int32_t CrossPlaySettingEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestUpdatePlayerAttributeData");
		
		USheikGameInstance_TestUpdatePlayerAttributeData_Params params {};
		params.PlayerName = PlayerName;
		params.PlatformService = PlatformService;
		params.CloutLevel = CloutLevel;
		params.PlayerSkill = PlayerSkill;
		params.CrossPlaySettingEnabled = CrossPlaySettingEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestUpdateFriends
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::TestUpdateFriends()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestUpdateFriends");
		
		USheikGameInstance_TestUpdateFriends_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestUnlockRestrictedMatchCreationEntitlement
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::TestUnlockRestrictedMatchCreationEntitlement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestUnlockRestrictedMatchCreationEntitlement");
		
		USheikGameInstance_TestUnlockRestrictedMatchCreationEntitlement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestSpectatorMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::TestSpectatorMode(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestSpectatorMode");
		
		USheikGameInstance_TestSpectatorMode_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestShowPlayerProfileUI
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::TestShowPlayerProfileUI(const class FString& PlayerId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestShowPlayerProfileUI");
		
		USheikGameInstance_TestShowPlayerProfileUI_Params params {};
		params.PlayerId = PlayerId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestShowPartyInviteUI
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::TestShowPartyInviteUI()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestShowPartyInviteUI");
		
		USheikGameInstance_TestShowPartyInviteUI_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestSendMessageToParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::TestSendMessageToParty(const class FString& Message)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestSendMessageToParty");
		
		USheikGameInstance_TestSendMessageToParty_Params params {};
		params.Message = Message;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestSaveRecentPlayers
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::TestSaveRecentPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestSaveRecentPlayers");
		
		USheikGameInstance_TestSaveRecentPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestNetworkFailure
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      FailureType                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bLoadIntoFrontend                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::TestNetworkFailure(const class FString& FailureType, bool bLoadIntoFrontend)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestNetworkFailure");
		
		USheikGameInstance_TestNetworkFailure_Params params {};
		params.FailureType = FailureType;
		params.bLoadIntoFrontend = bLoadIntoFrontend;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestLogVoiceUserInfo
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::TestLogVoiceUserInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestLogVoiceUserInfo");
		
		USheikGameInstance_TestLogVoiceUserInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestLogPartyInfo
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::TestLogPartyInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestLogPartyInfo");
		
		USheikGameInstance_TestLogPartyInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestLogFriendsList
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::TestLogFriendsList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestLogFriendsList");
		
		USheikGameInstance_TestLogFriendsList_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestLeaveParty
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::TestLeaveParty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestLeaveParty");
		
		USheikGameInstance_TestLeaveParty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestKickPlayerFromParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::TestKickPlayerFromParty(const class FString& PlayerId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestKickPlayerFromParty");
		
		USheikGameInstance_TestKickPlayerFromParty_Params params {};
		params.PlayerId = PlayerId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestJoinParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PartyId                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::TestJoinParty(const class FString& PartyId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestJoinParty");
		
		USheikGameInstance_TestJoinParty_Params params {};
		params.PartyId = PartyId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestInviteToCozmoParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::TestInviteToCozmoParty(const class FString& PlayerId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestInviteToCozmoParty");
		
		USheikGameInstance_TestInviteToCozmoParty_Params params {};
		params.PlayerId = PlayerId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestEndOfMatchBonusCalculations
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::TestEndOfMatchBonusCalculations()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestEndOfMatchBonusCalculations");
		
		USheikGameInstance_TestEndOfMatchBonusCalculations_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestEndMatchmaking
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               FoundMatch                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::TestEndMatchmaking(bool FoundMatch)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestEndMatchmaking");
		
		USheikGameInstance_TestEndMatchmaking_Params params {};
		params.FoundMatch = FoundMatch;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestCreateParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bCreatePlatformParty                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::TestCreateParty(bool bCreatePlatformParty)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestCreateParty");
		
		USheikGameInstance_TestCreateParty_Params params {};
		params.bCreatePlatformParty = bCreatePlatformParty;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.TestCloutCalculation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Fans                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::TestCloutCalculation(int32_t Fans)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.TestCloutCalculation");
		
		USheikGameInstance_TestCloutCalculation_Params params {};
		params.Fans = Fans;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ShouldSkipToSpectator
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::ShouldSkipToSpectator()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ShouldSkipToSpectator");
		
		USheikGameInstance_ShouldSkipToSpectator_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ShouldSkipEOMAutomatically
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::ShouldSkipEOMAutomatically()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ShouldSkipEOMAutomatically");
		
		USheikGameInstance_ShouldSkipEOMAutomatically_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameInstance.SheikPlatformActiveUserChangedDelegate__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::SheikPlatformActiveUserChangedDelegate__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameInstance.SheikPlatformActiveUserChangedDelegate__DelegateSignature");
		
		USheikGameInstance_SheikPlatformActiveUserChangedDelegate__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameInstance.SheikOnViewportResizeDelegate__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::SheikOnViewportResizeDelegate__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameInstance.SheikOnViewportResizeDelegate__DelegateSignature");
		
		USheikGameInstance_SheikOnViewportResizeDelegate__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameInstance.SheikOnSetSubtitleTextDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        SubtitleText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::SheikOnSetSubtitleTextDelegate__DelegateSignature(const class FText& SubtitleText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameInstance.SheikOnSetSubtitleTextDelegate__DelegateSignature");
		
		USheikGameInstance_SheikOnSetSubtitleTextDelegate__DelegateSignature_Params params {};
		params.SubtitleText = SubtitleText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameInstance.SheikApplicationLifetimeDelegate__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::SheikApplicationLifetimeDelegate__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameInstance.SheikApplicationLifetimeDelegate__DelegateSignature");
		
		USheikGameInstance_SheikApplicationLifetimeDelegate__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.SetupForSmokeTest
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      TaskName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bForever                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::SetupForSmokeTest(const class FString& TaskName, bool bForever)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.SetupForSmokeTest");
		
		USheikGameInstance_SetupForSmokeTest_Params params {};
		params.TaskName = TaskName;
		params.bForever = bForever;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.SetupAutomaticMatchmaking
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            MatchmakingIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::SetupAutomaticMatchmaking(int32_t MatchmakingIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.SetupAutomaticMatchmaking");
		
		USheikGameInstance_SetupAutomaticMatchmaking_Params params {};
		params.MatchmakingIndex = MatchmakingIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.SetSpawnDefaultPlayerName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      InName                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::SetSpawnDefaultPlayerName(const class FString& InName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.SetSpawnDefaultPlayerName");
		
		USheikGameInstance_SetSpawnDefaultPlayerName_Params params {};
		params.InName = InName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.SetRestrictedMatchHideMatchCode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bHideInviteCode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::SetRestrictedMatchHideMatchCode(bool bHideInviteCode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.SetRestrictedMatchHideMatchCode");
		
		USheikGameInstance_SetRestrictedMatchHideMatchCode_Params params {};
		params.bHideInviteCode = bHideInviteCode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.SavePlayerData
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::SavePlayerData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.SavePlayerData");
		
		USheikGameInstance_SavePlayerData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ReRoll
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RepName                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRepUIData                                  OutNewRep                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikGameInstance::ReRoll(const class FName& RepName, struct FRepUIData* OutNewRep)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ReRoll");
		
		USheikGameInstance_ReRoll_Params params {};
		params.RepName = RepName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutNewRep != nullptr)
			*OutNewRep = params.OutNewRep;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ReportQueuedSettingChangeTelemetry
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ReportQueuedSettingChangeTelemetry()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ReportQueuedSettingChangeTelemetry");
		
		USheikGameInstance_ReportQueuedSettingChangeTelemetry_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ReportPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPlayerAccount                         ReportedPlayer                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		EReportReason                                      ReportReason                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              OnComplete                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ReportPlayer(const struct FSheikPlayerAccount& ReportedPlayer, EReportReason ReportReason, const class FScriptDelegate& OnComplete)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ReportPlayer");
		
		USheikGameInstance_ReportPlayer_Params params {};
		params.ReportedPlayer = ReportedPlayer;
		params.ReportReason = ReportReason;
		params.OnComplete = OnComplete;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ReportAutomaticSettingDetectionTelemetry
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ReportAutomaticSettingDetectionTelemetry()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ReportAutomaticSettingDetectionTelemetry");
		
		USheikGameInstance_ReportAutomaticSettingDetectionTelemetry_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.RegisterExecBPCall
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      CallName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::RegisterExecBPCall(const class FString& CallName, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.RegisterExecBPCall");
		
		USheikGameInstance_RegisterExecBPCall_Params params {};
		params.CallName = CallName;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.QueueSettingChangeTelemetry
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      SettingCategory                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SettingName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      OldValue                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      NewValue                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::QueueSettingChangeTelemetry(const class FString& SettingCategory, const class FString& SettingName, const class FString& OldValue, const class FString& NewValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.QueueSettingChangeTelemetry");
		
		USheikGameInstance_QueueSettingChangeTelemetry_Params params {};
		params.SettingCategory = SettingCategory;
		params.SettingName = SettingName;
		params.OldValue = OldValue;
		params.NewValue = NewValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.PostErrorTelemetryEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikErrorSource                                  ErrorSource                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikErrorSystem                                  ErrorSystem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CallCode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ErrorCode                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::PostErrorTelemetryEvent(ESheikErrorSource ErrorSource, ESheikErrorSystem ErrorSystem, int32_t CallCode, int32_t ErrorCode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.PostErrorTelemetryEvent");
		
		USheikGameInstance_PostErrorTelemetryEvent_Params params {};
		params.ErrorSource = ErrorSource;
		params.ErrorSystem = ErrorSystem;
		params.CallCode = CallCode;
		params.ErrorCode = ErrorCode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.PickRandomAccessories
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bForceAccessorySet                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::PickRandomAccessories(bool bForceAccessorySet)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.PickRandomAccessories");
		
		USheikGameInstance_PickRandomAccessories_Params params {};
		params.bForceAccessorySet = bForceAccessorySet;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.OverrideChangelist
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            OverrideCl                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::OverrideChangelist(int32_t OverrideCl)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.OverrideChangelist");
		
		USheikGameInstance_OverrideChangelist_Params params {};
		params.OverrideCl = OverrideCl;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.OnWorldCompositionWentIdleCallback
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::OnWorldCompositionWentIdleCallback()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.OnWorldCompositionWentIdleCallback");
		
		USheikGameInstance_OnWorldCompositionWentIdleCallback_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.OnWorldCompositionHighPriorityWentIdleCallback
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::OnWorldCompositionHighPriorityWentIdleCallback()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.OnWorldCompositionHighPriorityWentIdleCallback");
		
		USheikGameInstance_OnWorldCompositionHighPriorityWentIdleCallback_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameInstance.OnUpdateTeamFillSettings__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bTeamFillToggle                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::OnUpdateTeamFillSettings__DelegateSignature(bool bTeamFillToggle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameInstance.OnUpdateTeamFillSettings__DelegateSignature");
		
		USheikGameInstance_OnUpdateTeamFillSettings__DelegateSignature_Params params {};
		params.bTeamFillToggle = bTeamFillToggle;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.OnTitleScreenEnter
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::OnTitleScreenEnter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.OnTitleScreenEnter");
		
		USheikGameInstance_OnTitleScreenEnter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameInstance.OnSplashMovieFinished__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::OnSplashMovieFinished__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameInstance.OnSplashMovieFinished__DelegateSignature");
		
		USheikGameInstance_OnSplashMovieFinished__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.OnSetSubtitleText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        SubtitleText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::OnSetSubtitleText(const class FText& SubtitleText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.OnSetSubtitleText");
		
		USheikGameInstance_OnSetSubtitleText_Params params {};
		params.SubtitleText = SubtitleText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameInstance.OnSendPlayerBehaviorReportCompleteCallback__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bWasSuccessful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::OnSendPlayerBehaviorReportCompleteCallback__DelegateSignature(bool bWasSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameInstance.OnSendPlayerBehaviorReportCompleteCallback__DelegateSignature");
		
		USheikGameInstance_OnSendPlayerBehaviorReportCompleteCallback__DelegateSignature_Params params {};
		params.bWasSuccessful = bWasSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameInstance.OnRestrictedMatchHideMatchCodeChanged__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bHideInviteCode                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::OnRestrictedMatchHideMatchCodeChanged__DelegateSignature(bool bHideInviteCode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameInstance.OnRestrictedMatchHideMatchCodeChanged__DelegateSignature");
		
		USheikGameInstance_OnRestrictedMatchHideMatchCodeChanged__DelegateSignature_Params params {};
		params.bHideInviteCode = bHideInviteCode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.OnPreLoadMap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      MapName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::OnPreLoadMap(const class FString& MapName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.OnPreLoadMap");
		
		USheikGameInstance_OnPreLoadMap_Params params {};
		params.MapName = MapName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.OnPreClientTravel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PendingURL                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ETravelType                                        TravelType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsSeamlessTravel                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::OnPreClientTravel(const class FString& PendingURL, ETravelType TravelType, bool bIsSeamlessTravel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.OnPreClientTravel");
		
		USheikGameInstance_OnPreClientTravel_Params params {};
		params.PendingURL = PendingURL;
		params.TravelType = TravelType;
		params.bIsSeamlessTravel = bIsSeamlessTravel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.OnPostLoadMap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UWorld*                                      InLoadedWorld                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::OnPostLoadMap(class UWorld* InLoadedWorld)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.OnPostLoadMap");
		
		USheikGameInstance_OnPostLoadMap_Params params {};
		params.InLoadedWorld = InLoadedWorld;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameInstance.OnPendingPartyInvite__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::OnPendingPartyInvite__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameInstance.OnPendingPartyInvite__DelegateSignature");
		
		USheikGameInstance_OnPendingPartyInvite__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameInstance.OnNewRepAcquired__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FRepUIData                                  OutNewRep                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::OnNewRepAcquired__DelegateSignature(const struct FRepUIData& OutNewRep)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameInstance.OnNewRepAcquired__DelegateSignature");
		
		USheikGameInstance_OnNewRepAcquired__DelegateSignature_Params params {};
		params.OutNewRep = OutNewRep;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameInstance.OnLeaveGameMapDelegate__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::OnLeaveGameMapDelegate__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameInstance.OnLeaveGameMapDelegate__DelegateSignature");
		
		USheikGameInstance_OnLeaveGameMapDelegate__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.OnHotfixStatsUpdated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FHotfixStatistics                           InStats                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::OnHotfixStatsUpdated(const struct FHotfixStatistics& InStats)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.OnHotfixStatsUpdated");
		
		USheikGameInstance_OnHotfixStatsUpdated_Params params {};
		params.InStats = InStats;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.OnFrontendExit
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::OnFrontendExit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.OnFrontendExit");
		
		USheikGameInstance_OnFrontendExit_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.OnFrontendEnter
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::OnFrontendEnter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.OnFrontendEnter");
		
		USheikGameInstance_OnFrontendEnter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameInstance.OnExecBPCall__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Argument1                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Argument2                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Argument3                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Argument4                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::OnExecBPCall__DelegateSignature(const class FString& Argument1, const class FString& Argument2, const class FString& Argument3, const class FString& Argument4)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameInstance.OnExecBPCall__DelegateSignature");
		
		USheikGameInstance_OnExecBPCall__DelegateSignature_Params params {};
		params.Argument1 = Argument1;
		params.Argument2 = Argument2;
		params.Argument3 = Argument3;
		params.Argument4 = Argument4;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameInstance.OnEnterGameMapDelegate__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::OnEnterGameMapDelegate__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameInstance.OnEnterGameMapDelegate__DelegateSignature");
		
		USheikGameInstance_OnEnterGameMapDelegate__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameInstance.OnEnterFrontendMapDelegate__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::OnEnterFrontendMapDelegate__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameInstance.OnEnterFrontendMapDelegate__DelegateSignature");
		
		USheikGameInstance_OnEnterFrontendMapDelegate__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.OnEditorProgressionDataRetrieved
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::OnEditorProgressionDataRetrieved(bool bSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.OnEditorProgressionDataRetrieved");
		
		USheikGameInstance_OnEditorProgressionDataRetrieved_Params params {};
		params.bSuccessful = bSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameInstance.OnControllerConnectionChanged__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bConnected                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PlatformUserId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ControllerId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::OnControllerConnectionChanged__DelegateSignature(bool bConnected, int32_t PlatformUserId, int32_t ControllerId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameInstance.OnControllerConnectionChanged__DelegateSignature");
		
		USheikGameInstance_OnControllerConnectionChanged__DelegateSignature_Params params {};
		params.bConnected = bConnected;
		params.PlatformUserId = PlatformUserId;
		params.ControllerId = ControllerId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.OnAttemptEditorWorldCozmoLoginSuccess
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::OnAttemptEditorWorldCozmoLoginSuccess()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.OnAttemptEditorWorldCozmoLoginSuccess");
		
		USheikGameInstance_OnAttemptEditorWorldCozmoLoginSuccess_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.LoadAchievementProgressFromDisk
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::LoadAchievementProgressFromDisk()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.LoadAchievementProgressFromDisk");
		
		USheikGameInstance_LoadAchievementProgressFromDisk_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.IsStressingMatchmaking
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::IsStressingMatchmaking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.IsStressingMatchmaking");
		
		USheikGameInstance_IsStressingMatchmaking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.IsRunningFromEpicLauncher
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::IsRunningFromEpicLauncher()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.IsRunningFromEpicLauncher");
		
		USheikGameInstance_IsRunningFromEpicLauncher_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.IsRunningAutomaticMatchmaking
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::IsRunningAutomaticMatchmaking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.IsRunningAutomaticMatchmaking");
		
		USheikGameInstance_IsRunningAutomaticMatchmaking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.IsOpeningSplashMoviePlaying
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::IsOpeningSplashMoviePlaying()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.IsOpeningSplashMoviePlaying");
		
		USheikGameInstance_IsOpeningSplashMoviePlaying_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.IsOnConsole
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::IsOnConsole()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.IsOnConsole");
		
		USheikGameInstance_IsOnConsole_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.IsInMatch
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::IsInMatch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.IsInMatch");
		
		USheikGameInstance_IsInMatch_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.IsInFrontend
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::IsInFrontend()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.IsInFrontend");
		
		USheikGameInstance_IsInFrontend_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.IsInEntry
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::IsInEntry()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.IsInEntry");
		
		USheikGameInstance_IsInEntry_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.IsDevServerAllowed
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::IsDevServerAllowed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.IsDevServerAllowed");
		
		USheikGameInstance_IsDevServerAllowed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.IsCurrentlyMatchmaking
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::IsCurrentlyMatchmaking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.IsCurrentlyMatchmaking");
		
		USheikGameInstance_IsCurrentlyMatchmaking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.InitializeLiveOps
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::InitializeLiveOps()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.InitializeLiveOps");
		
		USheikGameInstance_InitializeLiveOps_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.HasLiveOpsMessage
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::HasLiveOpsMessage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.HasLiveOpsMessage");
		
		USheikGameInstance_HasLiveOpsMessage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.HandleLocalPlayerCozmoBanned
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Reason                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Expiration                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Duration                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::HandleLocalPlayerCozmoBanned(const class FString& Reason, const class FString& Expiration, int32_t Duration)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.HandleLocalPlayerCozmoBanned");
		
		USheikGameInstance_HandleLocalPlayerCozmoBanned_Params params {};
		params.Reason = Reason;
		params.Expiration = Expiration;
		params.Duration = Duration;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.HandleLoadFlowError
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ErrorString                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::HandleLoadFlowError(const class FString& ErrorString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.HandleLoadFlowError");
		
		USheikGameInstance_HandleLoadFlowError_Params params {};
		params.ErrorString = ErrorString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.HandleApplicationWillTerminate
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::HandleApplicationWillTerminate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.HandleApplicationWillTerminate");
		
		USheikGameInstance_HandleApplicationWillTerminate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.HandleApplicationWillEnterBackground
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::HandleApplicationWillEnterBackground()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.HandleApplicationWillEnterBackground");
		
		USheikGameInstance_HandleApplicationWillEnterBackground_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.HandleApplicationWillDeactivate
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::HandleApplicationWillDeactivate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.HandleApplicationWillDeactivate");
		
		USheikGameInstance_HandleApplicationWillDeactivate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.HandleApplicationHasReactivated
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::HandleApplicationHasReactivated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.HandleApplicationHasReactivated");
		
		USheikGameInstance_HandleApplicationHasReactivated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.HandleApplicationHasEnteredForeground
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::HandleApplicationHasEnteredForeground()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.HandleApplicationHasEnteredForeground");
		
		USheikGameInstance_HandleApplicationHasEnteredForeground_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetUITitleStorageInterface
	 * 		Flags  -> ()
	 */
	class USheikUITitleStorageInterface* USheikGameInstance::GetUITitleStorageInterface()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetUITitleStorageInterface");
		
		USheikGameInstance_GetUITitleStorageInterface_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetTitleCardDataManager
	 * 		Flags  -> ()
	 */
	class USheikTitleCardDataManager* USheikGameInstance::GetTitleCardDataManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetTitleCardDataManager");
		
		USheikGameInstance_GetTitleCardDataManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetSheikStatsAdapter
	 * 		Flags  -> ()
	 */
	class USheikStatsAdapter* USheikGameInstance::GetSheikStatsAdapter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetSheikStatsAdapter");
		
		USheikGameInstance_GetSheikStatsAdapter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetSheikSavedSettings
	 * 		Flags  -> ()
	 */
	class USheikSavedSettings* USheikGameInstance::GetSheikSavedSettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetSheikSavedSettings");
		
		USheikGameInstance_GetSheikSavedSettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetSheikCaptureManager
	 * 		Flags  -> ()
	 */
	class ASheikCaptureManager* USheikGameInstance::GetSheikCaptureManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetSheikCaptureManager");
		
		USheikGameInstance_GetSheikCaptureManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetSeasonalStatsManager
	 * 		Flags  -> ()
	 */
	class USheikSeasonalStatsManager* USheikGameInstance::GetSeasonalStatsManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetSeasonalStatsManager");
		
		USheikGameInstance_GetSeasonalStatsManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetSavedPlayerName
	 * 		Flags  -> ()
	 */
	class FString USheikGameInstance::GetSavedPlayerName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetSavedPlayerName");
		
		USheikGameInstance_GetSavedPlayerName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetRestrictedMatchWalletId
	 * 		Flags  -> ()
	 */
	class FName USheikGameInstance::GetRestrictedMatchWalletId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetRestrictedMatchWalletId");
		
		USheikGameInstance_GetRestrictedMatchWalletId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetRepSystem
	 * 		Flags  -> ()
	 */
	class UIGRepSystem* USheikGameInstance::GetRepSystem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetRepSystem");
		
		USheikGameInstance_GetRepSystem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetRedemptionCodeManager
	 * 		Flags  -> ()
	 */
	class USheikRedemptionCodeManager* USheikGameInstance::GetRedemptionCodeManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetRedemptionCodeManager");
		
		USheikGameInstance_GetRedemptionCodeManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetProgressionSystem
	 * 		Flags  -> ()
	 */
	class USheikProgressionSystem* USheikGameInstance::GetProgressionSystem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetProgressionSystem");
		
		USheikGameInstance_GetProgressionSystem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetPlayerMatchmakingSkill
	 * 		Flags  -> ()
	 */
	int32_t USheikGameInstance::GetPlayerMatchmakingSkill()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetPlayerMatchmakingSkill");
		
		USheikGameInstance_GetPlayerMatchmakingSkill_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetPlayerDataManager
	 * 		Flags  -> ()
	 */
	class USheikPlayerDataManager* USheikGameInstance::GetPlayerDataManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetPlayerDataManager");
		
		USheikGameInstance_GetPlayerDataManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetPlayerData
	 * 		Flags  -> ()
	 */
	class USheikPlayerData* USheikGameInstance::GetPlayerData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetPlayerData");
		
		USheikGameInstance_GetPlayerData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetPlayerAccountsManager
	 * 		Flags  -> ()
	 */
	class USheikPlayerAccountsManager* USheikGameInstance::GetPlayerAccountsManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetPlayerAccountsManager");
		
		USheikGameInstance_GetPlayerAccountsManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetPartyManager
	 * 		Flags  -> ()
	 */
	class USheikPartyManager* USheikGameInstance::GetPartyManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetPartyManager");
		
		USheikGameInstance_GetPartyManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetNotificationsManager
	 * 		Flags  -> ()
	 */
	class USheikNotificationsManager* USheikGameInstance::GetNotificationsManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetNotificationsManager");
		
		USheikGameInstance_GetNotificationsManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetNoticesManager
	 * 		Flags  -> ()
	 */
	class USheikNoticesManager* USheikGameInstance::GetNoticesManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetNoticesManager");
		
		USheikGameInstance_GetNoticesManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetLoginManager
	 * 		Flags  -> ()
	 */
	class USheikLoginManager* USheikGameInstance::GetLoginManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetLoginManager");
		
		USheikGameInstance_GetLoginManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetLoadingScreen
	 * 		Flags  -> ()
	 */
	class USheikLoadingScreen* USheikGameInstance::GetLoadingScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetLoadingScreen");
		
		USheikGameInstance_GetLoadingScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetIsMilestoneBuild
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::GetIsMilestoneBuild()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetIsMilestoneBuild");
		
		USheikGameInstance_GetIsMilestoneBuild_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetIsDemoBuild
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::GetIsDemoBuild()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetIsDemoBuild");
		
		USheikGameInstance_GetIsDemoBuild_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetHotfixSystem
	 * 		Flags  -> ()
	 */
	class USheikHotfixSystem* USheikGameInstance::GetHotfixSystem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetHotfixSystem");
		
		USheikGameInstance_GetHotfixSystem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetGroupingForRep
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RowName                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRepGrouping                                OutRepGrouping                                             (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikGameInstance::GetGroupingForRep(const class FName& RowName, struct FRepGrouping* OutRepGrouping)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetGroupingForRep");
		
		USheikGameInstance_GetGroupingForRep_Params params {};
		params.RowName = RowName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutRepGrouping != nullptr)
			*OutRepGrouping = params.OutRepGrouping;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetFrontendLevelName
	 * 		Flags  -> ()
	 */
	class FName USheikGameInstance::GetFrontendLevelName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetFrontendLevelName");
		
		USheikGameInstance_GetFrontendLevelName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetFriendsManager
	 * 		Flags  -> ()
	 */
	class USheikFriendsManager* USheikGameInstance::GetFriendsManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetFriendsManager");
		
		USheikGameInstance_GetFriendsManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetErrorText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FText                                        HeaderText                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        BodyText                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        ErrorCodeText                                              (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::GetErrorText(const struct FSheikError& Error, class FText* HeaderText, class FText* BodyText, class FText* ErrorCodeText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetErrorText");
		
		USheikGameInstance_GetErrorText_Params params {};
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (HeaderText != nullptr)
			*HeaderText = params.HeaderText;
		if (BodyText != nullptr)
			*BodyText = params.BodyText;
		if (ErrorCodeText != nullptr)
			*ErrorCodeText = params.ErrorCodeText;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetErrorManager
	 * 		Flags  -> ()
	 */
	class USheikErrorManager* USheikGameInstance::GetErrorManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetErrorManager");
		
		USheikGameInstance_GetErrorManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetEntryLevelName
	 * 		Flags  -> ()
	 */
	class FName USheikGameInstance::GetEntryLevelName()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetEntryLevelName");
		
		USheikGameInstance_GetEntryLevelName_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetDesiredMatchConfigTypeForPlayer
	 * 		Flags  -> ()
	 */
	EMatchConfigType USheikGameInstance::GetDesiredMatchConfigTypeForPlayer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetDesiredMatchConfigTypeForPlayer");
		
		USheikGameInstance_GetDesiredMatchConfigTypeForPlayer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetCurrentReps
	 * 		Flags  -> ()
	 */
	TArray<struct FRepUIData> USheikGameInstance::GetCurrentReps()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetCurrentReps");
		
		USheikGameInstance_GetCurrentReps_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetCozmoId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      CozmoId                                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikGameInstance::GetCozmoId(class FString* CozmoId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetCozmoId");
		
		USheikGameInstance_GetCozmoId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (CozmoId != nullptr)
			*CozmoId = params.CozmoId;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetChangelistNumber
	 * 		Flags  -> ()
	 */
	int32_t USheikGameInstance::GetChangelistNumber()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetChangelistNumber");
		
		USheikGameInstance_GetChangelistNumber_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetCallbacksManager
	 * 		Flags  -> ()
	 */
	class USheikCallbacksManager* USheikGameInstance::GetCallbacksManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetCallbacksManager");
		
		USheikGameInstance_GetCallbacksManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetAnyRepsIfNeeded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ERepType                                           RepType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikGameInstance::GetAnyRepsIfNeeded(ERepType RepType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetAnyRepsIfNeeded");
		
		USheikGameInstance_GetAnyRepsIfNeeded_Params params {};
		params.RepType = RepType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.GetAgeGatingManager
	 * 		Flags  -> ()
	 */
	class USheikAgeGatingManager* USheikGameInstance::GetAgeGatingManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.GetAgeGatingManager");
		
		USheikGameInstance_GetAgeGatingManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecXpBoosterManager_StopConsuming
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecXpBoosterManager_StopConsuming()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecXpBoosterManager_StopConsuming");
		
		USheikGameInstance_ExecXpBoosterManager_StopConsuming_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecXpBoosterManager_StartConsuming
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecXpBoosterManager_StartConsuming()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecXpBoosterManager_StartConsuming");
		
		USheikGameInstance_ExecXpBoosterManager_StartConsuming_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecXpBoosterManager_PrintCurrentBoosterPlusCozmoData
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecXpBoosterManager_PrintCurrentBoosterPlusCozmoData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecXpBoosterManager_PrintCurrentBoosterPlusCozmoData");
		
		USheikGameInstance_ExecXpBoosterManager_PrintCurrentBoosterPlusCozmoData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecXpBoosterManager_PrintCurrentBooster
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecXpBoosterManager_PrintCurrentBooster()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecXpBoosterManager_PrintCurrentBooster");
		
		USheikGameInstance_ExecXpBoosterManager_PrintCurrentBooster_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecXpBoosterManager_ConsumeMinutesForCurrentBooster
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Minutes                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecXpBoosterManager_ConsumeMinutesForCurrentBooster(int32_t Minutes)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecXpBoosterManager_ConsumeMinutesForCurrentBooster");
		
		USheikGameInstance_ExecXpBoosterManager_ConsumeMinutesForCurrentBooster_Params params {};
		params.Minutes = Minutes;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecWriteToFilePlayerData
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecWriteToFilePlayerData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecWriteToFilePlayerData");
		
		USheikGameInstance_ExecWriteToFilePlayerData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecUploadPlayerData
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecUploadPlayerData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecUploadPlayerData");
		
		USheikGameInstance_ExecUploadPlayerData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecUploadClientTrackedPlayerStats
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecUploadClientTrackedPlayerStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecUploadClientTrackedPlayerStats");
		
		USheikGameInstance_ExecUploadClientTrackedPlayerStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecUpdateRemotePlayerDataLifetimeXp
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Data                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecUpdateRemotePlayerDataLifetimeXp(float Data)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecUpdateRemotePlayerDataLifetimeXp");
		
		USheikGameInstance_ExecUpdateRemotePlayerDataLifetimeXp_Params params {};
		params.Data = Data;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecUpdatePlayerSympathyValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewSymapathyValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecUpdatePlayerSympathyValue(int32_t NewSymapathyValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecUpdatePlayerSympathyValue");
		
		USheikGameInstance_ExecUpdatePlayerSympathyValue_Params params {};
		params.NewSymapathyValue = NewSymapathyValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecUpdatePlayerOnboardingValue
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewOnboardingValue                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecUpdatePlayerOnboardingValue(int32_t NewOnboardingValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecUpdatePlayerOnboardingValue");
		
		USheikGameInstance_ExecUpdatePlayerOnboardingValue_Params params {};
		params.NewOnboardingValue = NewOnboardingValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecUpdatePlayerMatchmakingRank
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewRank                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecUpdatePlayerMatchmakingRank(int32_t NewRank)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecUpdatePlayerMatchmakingRank");
		
		USheikGameInstance_ExecUpdatePlayerMatchmakingRank_Params params {};
		params.NewRank = NewRank;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecUpdateLocalPlayerData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Type                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Data                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecUpdateLocalPlayerData(int32_t Type, const class FString& Data)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecUpdateLocalPlayerData");
		
		USheikGameInstance_ExecUpdateLocalPlayerData_Params params {};
		params.Type = Type;
		params.Data = Data;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecUpdateAchievement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            AchievementId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ProgressToIncreaseBy                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecUpdateAchievement(int32_t AchievementId, int32_t ProgressToIncreaseBy)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecUpdateAchievement");
		
		USheikGameInstance_ExecUpdateAchievement_Params params {};
		params.AchievementId = AchievementId;
		params.ProgressToIncreaseBy = ProgressToIncreaseBy;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecToggleMuteVoiceOutput
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecToggleMuteVoiceOutput()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecToggleMuteVoiceOutput");
		
		USheikGameInstance_ExecToggleMuteVoiceOutput_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecToggleMuteVoiceInput
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecToggleMuteVoiceInput()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecToggleMuteVoiceInput");
		
		USheikGameInstance_ExecToggleMuteVoiceInput_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecToggleFanAccrualAsSeconds
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bUseSeconds                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecToggleFanAccrualAsSeconds(bool bUseSeconds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecToggleFanAccrualAsSeconds");
		
		USheikGameInstance_ExecToggleFanAccrualAsSeconds_Params params {};
		params.bUseSeconds = bUseSeconds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecToggleDisplayPartyInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bShow                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecToggleDisplayPartyInfo(bool bShow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecToggleDisplayPartyInfo");
		
		USheikGameInstance_ExecToggleDisplayPartyInfo_Params params {};
		params.bShow = bShow;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecTitleCard_UploadTitleCardLoadout
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecTitleCard_UploadTitleCardLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecTitleCard_UploadTitleCardLoadout");
		
		USheikGameInstance_ExecTitleCard_UploadTitleCardLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecTitleCard_SoftUnlockHoveredReward
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecTitleCard_SoftUnlockHoveredReward()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecTitleCard_SoftUnlockHoveredReward");
		
		USheikGameInstance_ExecTitleCard_SoftUnlockHoveredReward_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecTitleCard_SoftUnlockAllTitleCardRewards
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecTitleCard_SoftUnlockAllTitleCardRewards()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecTitleCard_SoftUnlockAllTitleCardRewards");
		
		USheikGameInstance_ExecTitleCard_SoftUnlockAllTitleCardRewards_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecTitleCard_DownloadTitleCardLoadout
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecTitleCard_DownloadTitleCardLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecTitleCard_DownloadTitleCardLoadout");
		
		USheikGameInstance_ExecTitleCard_DownloadTitleCardLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecTestFindOptimalPurchaseOfferCombination
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NumTiersToPurchase                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecTestFindOptimalPurchaseOfferCombination(int32_t NumTiersToPurchase)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecTestFindOptimalPurchaseOfferCombination");
		
		USheikGameInstance_ExecTestFindOptimalPurchaseOfferCombination_Params params {};
		params.NumTiersToPurchase = NumTiersToPurchase;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecTestBattlePassCelebration
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecTestBattlePassCelebration()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecTestBattlePassCelebration");
		
		USheikGameInstance_ExecTestBattlePassCelebration_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecTestBattlePassCalculation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Fans                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecTestBattlePassCalculation(int32_t Fans)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecTestBattlePassCalculation");
		
		USheikGameInstance_ExecTestBattlePassCalculation_Params params {};
		params.Fans = Fans;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecTestAllProgressionCalculation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Fans                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecTestAllProgressionCalculation(int32_t Fans)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecTestAllProgressionCalculation");
		
		USheikGameInstance_ExecTestAllProgressionCalculation_Params params {};
		params.Fans = Fans;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecStopAllProgression
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               StopProgression                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecStopAllProgression(bool StopProgression)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecStopAllProgression");
		
		USheikGameInstance_ExecStopAllProgression_Params params {};
		params.StopProgression = StopProgression;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecStartHotfixCheck
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Version                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecStartHotfixCheck(int32_t Version)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecStartHotfixCheck");
		
		USheikGameInstance_ExecStartHotfixCheck_Params params {};
		params.Version = Version;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecShowPlayerReviewDialog
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecShowPlayerReviewDialog()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecShowPlayerReviewDialog");
		
		USheikGameInstance_ExecShowPlayerReviewDialog_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecShowCommerceDialog
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecShowCommerceDialog()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecShowCommerceDialog");
		
		USheikGameInstance_ExecShowCommerceDialog_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecSetVoipPlayerMute
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsMuted                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecSetVoipPlayerMute(const class FString& PlayerId, bool bIsMuted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecSetVoipPlayerMute");
		
		USheikGameInstance_ExecSetVoipPlayerMute_Params params {};
		params.PlayerId = PlayerId;
		params.bIsMuted = bIsMuted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecSetPlayerSympathy
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bHasSympathyMatch                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecSetPlayerSympathy(bool bHasSympathyMatch)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecSetPlayerSympathy");
		
		USheikGameInstance_ExecSetPlayerSympathy_Params params {};
		params.bHasSympathyMatch = bHasSympathyMatch;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecSetFanMailCount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewFanMailCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecSetFanMailCount(int32_t NewFanMailCount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecSetFanMailCount");
		
		USheikGameInstance_ExecSetFanMailCount_Params params {};
		params.NewFanMailCount = NewFanMailCount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecSetFanAccrualTime
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Minutes                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecSetFanAccrualTime(int32_t Minutes)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecSetFanAccrualTime");
		
		USheikGameInstance_ExecSetFanAccrualTime_Params params {};
		params.Minutes = Minutes;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecSetEndOfMatchBonusLedgerMidnightToPast
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EEndOfMatchBonusName                               BonusName                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecSetEndOfMatchBonusLedgerMidnightToPast(EEndOfMatchBonusName BonusName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecSetEndOfMatchBonusLedgerMidnightToPast");
		
		USheikGameInstance_ExecSetEndOfMatchBonusLedgerMidnightToPast_Params params {};
		params.BonusName = BonusName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecSetConstantNumFansPerAccrual
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            FansPerAccrual                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecSetConstantNumFansPerAccrual(int32_t FansPerAccrual)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecSetConstantNumFansPerAccrual");
		
		USheikGameInstance_ExecSetConstantNumFansPerAccrual_Params params {};
		params.FansPerAccrual = FansPerAccrual;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecSetAllowTeamFill
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bAllowTeamFill                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecSetAllowTeamFill(bool bAllowTeamFill)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecSetAllowTeamFill");
		
		USheikGameInstance_ExecSetAllowTeamFill_Params params {};
		params.bAllowTeamFill = bAllowTeamFill;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecSetActiveVoipParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PartyType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecSetActiveVoipParty(int32_t PartyType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecSetActiveVoipParty");
		
		USheikGameInstance_ExecSetActiveVoipParty_Params params {};
		params.PartyType = PartyType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecSetAccountPermissionSetting
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bAccountPerm                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecSetAccountPermissionSetting(bool bAccountPerm)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecSetAccountPermissionSetting");
		
		USheikGameInstance_ExecSetAccountPermissionSetting_Params params {};
		params.bAccountPerm = bAccountPerm;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecResetProgressionToDefaultTitleStorageValues
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecResetProgressionToDefaultTitleStorageValues()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecResetProgressionToDefaultTitleStorageValues");
		
		USheikGameInstance_ExecResetProgressionToDefaultTitleStorageValues_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecResetProgressionPlacementAndRoundStatesToDefault
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecResetProgressionPlacementAndRoundStatesToDefault()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecResetProgressionPlacementAndRoundStatesToDefault");
		
		USheikGameInstance_ExecResetProgressionPlacementAndRoundStatesToDefault_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecResetPlayerMatchmakingRank
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecResetPlayerMatchmakingRank()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecResetPlayerMatchmakingRank");
		
		USheikGameInstance_ExecResetPlayerMatchmakingRank_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecResetLastKnownSeason
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecResetLastKnownSeason()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecResetLastKnownSeason");
		
		USheikGameInstance_ExecResetLastKnownSeason_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecResetCloutProgressionLevel
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecResetCloutProgressionLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecResetCloutProgressionLevel");
		
		USheikGameInstance_ExecResetCloutProgressionLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecResetBattlePassProgress
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecResetBattlePassProgress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecResetBattlePassProgress");
		
		USheikGameInstance_ExecResetBattlePassProgress_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecResetBattlePassMatchAccumulationData
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecResetBattlePassMatchAccumulationData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecResetBattlePassMatchAccumulationData");
		
		USheikGameInstance_ExecResetBattlePassMatchAccumulationData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecResetAllProgression
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecResetAllProgression()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecResetAllProgression");
		
		USheikGameInstance_ExecResetAllProgression_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecResetAllCozmoEntitlements
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecResetAllCozmoEntitlements()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecResetAllCozmoEntitlements");
		
		USheikGameInstance_ExecResetAllCozmoEntitlements_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_SetRerollAllowance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Allowance                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecRep_SetRerollAllowance(int32_t Allowance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_SetRerollAllowance");
		
		USheikGameInstance_ExecRep_SetRerollAllowance_Params params {};
		params.Allowance = Allowance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_SetRepAllowance
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Allowance                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecRep_SetRepAllowance(int32_t Allowance)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_SetRepAllowance");
		
		USheikGameInstance_ExecRep_SetRepAllowance_Params params {};
		params.Allowance = Allowance;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_SetLastTimeRepAcquired
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            MinutesBack                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecRep_SetLastTimeRepAcquired(int32_t MinutesBack)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_SetLastTimeRepAcquired");
		
		USheikGameInstance_ExecRep_SetLastTimeRepAcquired_Params params {};
		params.MinutesBack = MinutesBack;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_SetLastTimeGainedReroll
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            MinutesBack                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecRep_SetLastTimeGainedReroll(int32_t MinutesBack)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_SetLastTimeGainedReroll");
		
		USheikGameInstance_ExecRep_SetLastTimeGainedReroll_Params params {};
		params.MinutesBack = MinutesBack;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_RerollDebug
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecRep_RerollDebug()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_RerollDebug");
		
		USheikGameInstance_ExecRep_RerollDebug_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_PrintRerollAllowance
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecRep_PrintRerollAllowance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_PrintRerollAllowance");
		
		USheikGameInstance_ExecRep_PrintRerollAllowance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_PrintRepNames
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecRep_PrintRepNames()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_PrintRepNames");
		
		USheikGameInstance_ExecRep_PrintRepNames_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_PrintRepLedger
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecRep_PrintRepLedger()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_PrintRepLedger");
		
		USheikGameInstance_ExecRep_PrintRepLedger_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_PrintRepHistory
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecRep_PrintRepHistory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_PrintRepHistory");
		
		USheikGameInstance_ExecRep_PrintRepHistory_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_PrintRepAllowance
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecRep_PrintRepAllowance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_PrintRepAllowance");
		
		USheikGameInstance_ExecRep_PrintRepAllowance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_PrintLastTimeRerollAcquired
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecRep_PrintLastTimeRerollAcquired()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_PrintLastTimeRerollAcquired");
		
		USheikGameInstance_ExecRep_PrintLastTimeRerollAcquired_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_PrintLastTimeRepAcquired
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecRep_PrintLastTimeRepAcquired()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_PrintLastTimeRepAcquired");
		
		USheikGameInstance_ExecRep_PrintLastTimeRepAcquired_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_GetReps
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecRep_GetReps()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_GetReps");
		
		USheikGameInstance_ExecRep_GetReps_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_GetNewRepByName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RepName                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecRep_GetNewRepByName(const class FName& RepName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_GetNewRepByName");
		
		USheikGameInstance_ExecRep_GetNewRepByName_Params params {};
		params.RepName = RepName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_GetNewRandomRep
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecRep_GetNewRandomRep()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_GetNewRandomRep");
		
		USheikGameInstance_ExecRep_GetNewRandomRep_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_CompleteRepByNameOnClient
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RepName                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecRep_CompleteRepByNameOnClient(const class FName& RepName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_CompleteRepByNameOnClient");
		
		USheikGameInstance_ExecRep_CompleteRepByNameOnClient_Params params {};
		params.RepName = RepName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_CompleteAllWeeklyRepsOnClient
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecRep_CompleteAllWeeklyRepsOnClient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_CompleteAllWeeklyRepsOnClient");
		
		USheikGameInstance_ExecRep_CompleteAllWeeklyRepsOnClient_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_CompleteAllRepsOnClient
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecRep_CompleteAllRepsOnClient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_CompleteAllRepsOnClient");
		
		USheikGameInstance_ExecRep_CompleteAllRepsOnClient_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_CompleteAllFTUE
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecRep_CompleteAllFTUE()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_CompleteAllFTUE");
		
		USheikGameInstance_ExecRep_CompleteAllFTUE_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_CompleteAllDailyRepsOnClient
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecRep_CompleteAllDailyRepsOnClient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_CompleteAllDailyRepsOnClient");
		
		USheikGameInstance_ExecRep_CompleteAllDailyRepsOnClient_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_ClearAllRepLedgerData
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecRep_ClearAllRepLedgerData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_ClearAllRepLedgerData");
		
		USheikGameInstance_ExecRep_ClearAllRepLedgerData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRep_ClaimRepByName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RepName                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecRep_ClaimRepByName(const class FName& RepName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRep_ClaimRepByName");
		
		USheikGameInstance_ExecRep_ClaimRepByName_Params params {};
		params.RepName = RepName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecRefreshAchievementsFromDiskAndPrint
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecRefreshAchievementsFromDiskAndPrint()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecRefreshAchievementsFromDiskAndPrint");
		
		USheikGameInstance_ExecRefreshAchievementsFromDiskAndPrint_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecQueryAchievements
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecQueryAchievements()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecQueryAchievements");
		
		USheikGameInstance_ExecQueryAchievements_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecQueryAchievementDescriptions
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecQueryAchievementDescriptions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecQueryAchievementDescriptions");
		
		USheikGameInstance_ExecQueryAchievementDescriptions_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecPurchaseBattlePassTiers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NumTiersToPurchase                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecPurchaseBattlePassTiers(int32_t NumTiersToPurchase)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecPurchaseBattlePassTiers");
		
		USheikGameInstance_ExecPurchaseBattlePassTiers_Params params {};
		params.NumTiersToPurchase = NumTiersToPurchase;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecPurchaseBattlePass
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecPurchaseBattlePass()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecPurchaseBattlePass");
		
		USheikGameInstance_ExecPurchaseBattlePass_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecPrintSeasons
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecPrintSeasons()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecPrintSeasons");
		
		USheikGameInstance_ExecPrintSeasons_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecPrintNextCloutLevel
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecPrintNextCloutLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecPrintNextCloutLevel");
		
		USheikGameInstance_ExecPrintNextCloutLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecPrintEndOfMatchTracking
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecPrintEndOfMatchTracking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecPrintEndOfMatchTracking");
		
		USheikGameInstance_ExecPrintEndOfMatchTracking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecPrintCozmoId
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecPrintCozmoId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecPrintCozmoId");
		
		USheikGameInstance_ExecPrintCozmoId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecPrintAchievementsFromCache
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecPrintAchievementsFromCache()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecPrintAchievementsFromCache");
		
		USheikGameInstance_ExecPrintAchievementsFromCache_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecLogSkillValue
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecLogSkillValue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecLogSkillValue");
		
		USheikGameInstance_ExecLogSkillValue_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecLogPlayerData
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecLogPlayerData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecLogPlayerData");
		
		USheikGameInstance_ExecLogPlayerData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecLogPartyMatchmakingTypes
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecLogPartyMatchmakingTypes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecLogPartyMatchmakingTypes");
		
		USheikGameInstance_ExecLogPartyMatchmakingTypes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecLogLocalHotfixVersion
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecLogLocalHotfixVersion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecLogLocalHotfixVersion");
		
		USheikGameInstance_ExecLogLocalHotfixVersion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecLoginClearAcceptedLegalDocs
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecLoginClearAcceptedLegalDocs()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecLoginClearAcceptedLegalDocs");
		
		USheikGameInstance_ExecLoginClearAcceptedLegalDocs_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecLoadRepData
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecLoadRepData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecLoadRepData");
		
		USheikGameInstance_ExecLoadRepData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecLeaveTeamParty
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecLeaveTeamParty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecLeaveTeamParty");
		
		USheikGameInstance_ExecLeaveTeamParty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecForceStopFanAccrual
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecForceStopFanAccrual()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecForceStopFanAccrual");
		
		USheikGameInstance_ExecForceStopFanAccrual_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecForceStartFanAccrual
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecForceStartFanAccrual()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecForceStartFanAccrual");
		
		USheikGameInstance_ExecForceStartFanAccrual_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecForceBattlePassTierSelected
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            TierId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecForceBattlePassTierSelected(int32_t TierId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecForceBattlePassTierSelected");
		
		USheikGameInstance_ExecForceBattlePassTierSelected_Params params {};
		params.TierId = TierId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecFireRingStartsClosingDelegate
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecFireRingStartsClosingDelegate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecFireRingStartsClosingDelegate");
		
		USheikGameInstance_ExecFireRingStartsClosingDelegate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecFireRingFinishedClosingDelegate
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecFireRingFinishedClosingDelegate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecFireRingFinishedClosingDelegate");
		
		USheikGameInstance_ExecFireRingFinishedClosingDelegate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecFireFinalRingStateDelegate
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecFireFinalRingStateDelegate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecFireFinalRingStateDelegate");
		
		USheikGameInstance_ExecFireFinalRingStateDelegate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecFindAndJoinTeamParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PartyGuid                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecFindAndJoinTeamParty(const class FString& PartyGuid)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecFindAndJoinTeamParty");
		
		USheikGameInstance_ExecFindAndJoinTeamParty_Params params {};
		params.PartyGuid = PartyGuid;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecEnableLockerRoomAdvanceMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecEnableLockerRoomAdvanceMode(bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecEnableLockerRoomAdvanceMode");
		
		USheikGameInstance_ExecEnableLockerRoomAdvanceMode_Params params {};
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecDumpClientTrackedPlayerStats
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecDumpClientTrackedPlayerStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecDumpClientTrackedPlayerStats");
		
		USheikGameInstance_ExecDumpClientTrackedPlayerStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecDownloadProgressionDataTitleStorage
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecDownloadProgressionDataTitleStorage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecDownloadProgressionDataTitleStorage");
		
		USheikGameInstance_ExecDownloadProgressionDataTitleStorage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecDownloadPlayerData
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecDownloadPlayerData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecDownloadPlayerData");
		
		USheikGameInstance_ExecDownloadPlayerData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecDownloadClientTrackedPlayerStats
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecDownloadClientTrackedPlayerStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecDownloadClientTrackedPlayerStats");
		
		USheikGameInstance_ExecDownloadClientTrackedPlayerStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecDebugRevertAllHotfixes
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecDebugRevertAllHotfixes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecDebugRevertAllHotfixes");
		
		USheikGameInstance_ExecDebugRevertAllHotfixes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecDebugRestrictedMatchLogic
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               IsRestrictedMatch                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecDebugRestrictedMatchLogic(bool IsRestrictedMatch)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecDebugRestrictedMatchLogic");
		
		USheikGameInstance_ExecDebugRestrictedMatchLogic_Params params {};
		params.IsRestrictedMatch = IsRestrictedMatch;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecCreateTeamParty
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecCreateTeamParty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecCreateTeamParty");
		
		USheikGameInstance_ExecCreateTeamParty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecClearRemoteData
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecClearRemoteData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecClearRemoteData");
		
		USheikGameInstance_ExecClearRemoteData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecCheckWillCloutLevelup
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ExecCheckWillCloutLevelup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecCheckWillCloutLevelup");
		
		USheikGameInstance_ExecCheckWillCloutLevelup_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecBPCall
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      CallName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Argument1                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Argument2                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Argument3                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Argument4                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecBPCall(const class FString& CallName, const class FString& Argument1, const class FString& Argument2, const class FString& Argument3, const class FString& Argument4)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecBPCall");
		
		USheikGameInstance_ExecBPCall_Params params {};
		params.CallName = CallName;
		params.Argument1 = Argument1;
		params.Argument2 = Argument2;
		params.Argument3 = Argument3;
		params.Argument4 = Argument4;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecAllowCozmoLogging
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bAllowLogging                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecAllowCozmoLogging(bool bAllowLogging)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecAllowCozmoLogging");
		
		USheikGameInstance_ExecAllowCozmoLogging_Params params {};
		params.bAllowLogging = bAllowLogging;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ExecAddVirtualCurrency
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ExecAddVirtualCurrency(int32_t Amount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ExecAddVirtualCurrency");
		
		USheikGameInstance_ExecAddVirtualCurrency_Params params {};
		params.Amount = Amount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.DevDisableAchievements
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::DevDisableAchievements()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.DevDisableAchievements");
		
		USheikGameInstance_DevDisableAchievements_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.DebugTriggerFanAnnouncementWithLevelUp
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            CurrentLevelId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OldFanCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NumFansToAdd                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            FansNeededToLevelUp                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NumNewFanMail                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EReasonFansAwarded                                 ReasonFansAwarded                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::DebugTriggerFanAnnouncementWithLevelUp(int32_t CurrentLevelId, int32_t OldFanCount, int32_t NumFansToAdd, int32_t FansNeededToLevelUp, int32_t NumNewFanMail, EReasonFansAwarded ReasonFansAwarded)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.DebugTriggerFanAnnouncementWithLevelUp");
		
		USheikGameInstance_DebugTriggerFanAnnouncementWithLevelUp_Params params {};
		params.CurrentLevelId = CurrentLevelId;
		params.OldFanCount = OldFanCount;
		params.NumFansToAdd = NumFansToAdd;
		params.FansNeededToLevelUp = FansNeededToLevelUp;
		params.NumNewFanMail = NumNewFanMail;
		params.ReasonFansAwarded = ReasonFansAwarded;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.DebugTriggerFanAnnouncementNoLevelUp
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            CurrentLevelId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OldFanCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NumFansToAdd                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            FansNeededToLevelUp                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EReasonFansAwarded                                 ReasonFansAwarded                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::DebugTriggerFanAnnouncementNoLevelUp(int32_t CurrentLevelId, int32_t OldFanCount, int32_t NumFansToAdd, int32_t FansNeededToLevelUp, EReasonFansAwarded ReasonFansAwarded)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.DebugTriggerFanAnnouncementNoLevelUp");
		
		USheikGameInstance_DebugTriggerFanAnnouncementNoLevelUp_Params params {};
		params.CurrentLevelId = CurrentLevelId;
		params.OldFanCount = OldFanCount;
		params.NumFansToAdd = NumFansToAdd;
		params.FansNeededToLevelUp = FansNeededToLevelUp;
		params.ReasonFansAwarded = ReasonFansAwarded;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.CreateLiveOpsPopup
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::CreateLiveOpsPopup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.CreateLiveOpsPopup");
		
		USheikGameInstance_CreateLiveOpsPopup_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.CommitSavedSettingsChangesForEntryMap
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::CommitSavedSettingsChangesForEntryMap()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.CommitSavedSettingsChangesForEntryMap");
		
		USheikGameInstance_CommitSavedSettingsChangesForEntryMap_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ClearNetworkFailures
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ClearNetworkFailures()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ClearNetworkFailures");
		
		USheikGameInstance_ClearNetworkFailures_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ClearAndResetSettingsCacheOnProfileSwitch
	 * 		Flags  -> ()
	 */
	void USheikGameInstance::ClearAndResetSettingsCacheOnProfileSwitch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ClearAndResetSettingsCacheOnProfileSwitch");
		
		USheikGameInstance_ClearAndResetSettingsCacheOnProfileSwitch_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.ClaimRep
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RepName                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::ClaimRep(const class FName& RepName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.ClaimRep");
		
		USheikGameInstance_ClaimRep_Params params {};
		params.RepName = RepName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.BroadcastHotfixSystemComplete
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            ServerVersion                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::BroadcastHotfixSystemComplete(int32_t ServerVersion)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.BroadcastHotfixSystemComplete");
		
		USheikGameInstance_BroadcastHotfixSystemComplete_Params params {};
		params.ServerVersion = ServerVersion;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.AttemptSaveAchievementProgress
	 * 		Flags  -> ()
	 */
	bool USheikGameInstance::AttemptSaveAchievementProgress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.AttemptSaveAchievementProgress");
		
		USheikGameInstance_AttemptSaveAchievementProgress_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameInstance.AttemptEditorWorldCozmoLogin
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FScriptDelegate                              OnCompleteDelegate                                         (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikGameInstance::AttemptEditorWorldCozmoLogin(const class FScriptDelegate& OnCompleteDelegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameInstance.AttemptEditorWorldCozmoLogin");
		
		USheikGameInstance_AttemptEditorWorldCozmoLogin_Params params {};
		params.OnCompleteDelegate = OnCompleteDelegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikGameInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikGameInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikGameInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UCommonGameplaySettingsData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UCommonGameplaySettingsData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.CommonGameplaySettingsData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UBRGameplaySettingsData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UBRGameplaySettingsData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.BRGameplaySettingsData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameModeCommon.SheikBotPlayMoveMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      MoveName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikGameModeCommon::SheikBotPlayMoveMontage(const class FString& MoveName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameModeCommon.SheikBotPlayMoveMontage");
		
		ASheikGameModeCommon_SheikBotPlayMoveMontage_Params params {};
		params.MoveName = MoveName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameModeCommon.ResetGameMatchReporter
	 * 		Flags  -> ()
	 */
	void ASheikGameModeCommon::ResetGameMatchReporter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameModeCommon.ResetGameMatchReporter");
		
		ASheikGameModeCommon_ResetGameMatchReporter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameModeCommon.RequestPS5AccessToken
	 * 		Flags  -> ()
	 */
	void ASheikGameModeCommon::RequestPS5AccessToken()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameModeCommon.RequestPS5AccessToken");
		
		ASheikGameModeCommon_RequestPS5AccessToken_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameModeCommon.OnSinglePlayerSkillDownloaded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikPlayerStateCommon*                     PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikGameModeCommon::OnSinglePlayerSkillDownloaded(class ASheikPlayerStateCommon* PlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameModeCommon.OnSinglePlayerSkillDownloaded");
		
		ASheikGameModeCommon_OnSinglePlayerSkillDownloaded_Params params {};
		params.PlayerState = PlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameModeCommon.OnGameFlowStateUpdated__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EGameFlowState                                     PreviousGameFlowState                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EGameFlowState                                     CurrentGameFlowState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikGameModeCommon::OnGameFlowStateUpdated__DelegateSignature(EGameFlowState PreviousGameFlowState, EGameFlowState CurrentGameFlowState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameModeCommon.OnGameFlowStateUpdated__DelegateSignature");
		
		ASheikGameModeCommon_OnGameFlowStateUpdated__DelegateSignature_Params params {};
		params.PreviousGameFlowState = PreviousGameFlowState;
		params.CurrentGameFlowState = CurrentGameFlowState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameModeCommon.GetTotalPlayers
	 * 		Flags  -> ()
	 */
	int32_t ASheikGameModeCommon::GetTotalPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameModeCommon.GetTotalPlayers");
		
		ASheikGameModeCommon_GetTotalPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameModeCommon.GetGameplaySettings
	 * 		Flags  -> ()
	 */
	class UCommonGameplaySettingsData* ASheikGameModeCommon::GetGameplaySettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameModeCommon.GetGameplaySettings");
		
		ASheikGameModeCommon_GetGameplaySettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameModeCommon.GetAIGameInfo
	 * 		Flags  -> ()
	 */
	class USheikAIGameInfo* ASheikGameModeCommon::GetAIGameInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameModeCommon.GetAIGameInfo");
		
		ASheikGameModeCommon_GetAIGameInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameModeCommon.CreateGameMatch
	 * 		Flags  -> ()
	 */
	void ASheikGameModeCommon::CreateGameMatch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameModeCommon.CreateGameMatch");
		
		ASheikGameModeCommon_CreateGameMatch_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameModeCommon.BuildInGameRoster
	 * 		Flags  -> ()
	 */
	void ASheikGameModeCommon::BuildInGameRoster()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameModeCommon.BuildInGameRoster");
		
		ASheikGameModeCommon_BuildInGameRoster_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikGameModeCommon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikGameModeCommon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikGameModeCommon");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameModeBR.SetPlaygroundTimeLeft
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              TimeLeft                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikGameModeBR::SetPlaygroundTimeLeft(float TimeLeft)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameModeBR.SetPlaygroundTimeLeft");
		
		ASheikGameModeBR_SetPlaygroundTimeLeft_Params params {};
		params.TimeLeft = TimeLeft;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameModeBR.IsActorInRing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AActor*                                      InActor                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              PaddedRingRadius                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikGameModeBR::IsActorInRing(class AActor* InActor, float PaddedRingRadius)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameModeBR.IsActorInRing");
		
		ASheikGameModeBR_IsActorInRing_Params params {};
		params.InActor = InActor;
		params.PaddedRingRadius = PaddedRingRadius;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameModeBR.DisplayFromTwoPlayerNames
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      FirstPlayerName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SecondPlayerName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikGameModeBR::DisplayFromTwoPlayerNames(const class FString& FirstPlayerName, const class FString& SecondPlayerName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameModeBR.DisplayFromTwoPlayerNames");
		
		ASheikGameModeBR_DisplayFromTwoPlayerNames_Params params {};
		params.FirstPlayerName = FirstPlayerName;
		params.SecondPlayerName = SecondPlayerName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameModeBR.DisplayFromPlayerName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikGameModeBR::DisplayFromPlayerName(const class FString& PlayerName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameModeBR.DisplayFromPlayerName");
		
		ASheikGameModeBR_DisplayFromPlayerName_Params params {};
		params.PlayerName = PlayerName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikGameModeBR.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikGameModeBR::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikGameModeBR");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikGameModeCTF.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikGameModeCTF::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikGameModeCTF");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikGameModeDeathmatch.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikGameModeDeathmatch::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikGameModeDeathmatch");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikGameModeSnowballFight.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikGameModeSnowballFight::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikGameModeSnowballFight");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameModesScreen.OnExitScreen
	 * 		Flags  -> ()
	 */
	void USheikGameModesScreen::OnExitScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameModesScreen.OnExitScreen");
		
		USheikGameModesScreen_OnExitScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikGameModesScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikGameModesScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikGameModesScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitor.EnterRequestedState
	 * 		Flags  -> ()
	 */
	void ASheikGameMonitor::EnterRequestedState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitor.EnterRequestedState");
		
		ASheikGameMonitor_EnterRequestedState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitor.EnterInactiveState
	 * 		Flags  -> ()
	 */
	void ASheikGameMonitor::EnterInactiveState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitor.EnterInactiveState");
		
		ASheikGameMonitor_EnterInactiveState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitor.EnterDisplayState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EIGMonitorLayout                                   MonitorLayout                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ASheikGameMonitorManager*                    Manager                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikGameMonitor::EnterDisplayState(EIGMonitorLayout MonitorLayout, class ASheikGameMonitorManager* Manager)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitor.EnterDisplayState");
		
		ASheikGameMonitor_EnterDisplayState_Params params {};
		params.MonitorLayout = MonitorLayout;
		params.Manager = Manager;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikGameMonitor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikGameMonitor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikGameMonitor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.SetupNextCapture
	 * 		Flags  -> ()
	 */
	void ASheikGameMonitorManager::SetupNextCapture()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.SetupNextCapture");
		
		ASheikGameMonitorManager_SetupNextCapture_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.SetupCaptureActors
	 * 		Flags  -> ()
	 */
	void ASheikGameMonitorManager::SetupCaptureActors()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.SetupCaptureActors");
		
		ASheikGameMonitorManager_SetupCaptureActors_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.ResolveNextMeshMerge
	 * 		Flags  -> ()
	 */
	void ASheikGameMonitorManager::ResolveNextMeshMerge()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.ResolveNextMeshMerge");
		
		ASheikGameMonitorManager_ResolveNextMeshMerge_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.ResolveCaptureActors
	 * 		Flags  -> ()
	 */
	void ASheikGameMonitorManager::ResolveCaptureActors()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.ResolveCaptureActors");
		
		ASheikGameMonitorManager_ResolveCaptureActors_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.ResolveAssetLoads
	 * 		Flags  -> ()
	 */
	void ASheikGameMonitorManager::ResolveAssetLoads()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.ResolveAssetLoads");
		
		ASheikGameMonitorManager_ResolveAssetLoads_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.ResetMonitorManagerState
	 * 		Flags  -> ()
	 */
	void ASheikGameMonitorManager::ResetMonitorManagerState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.ResetMonitorManagerState");
		
		ASheikGameMonitorManager_ResetMonitorManagerState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.OnTitleCardAssetsLoaded
	 * 		Flags  -> ()
	 */
	void ASheikGameMonitorManager::OnTitleCardAssetsLoaded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.OnTitleCardAssetsLoaded");
		
		ASheikGameMonitorManager_OnTitleCardAssetsLoaded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.OnMinTimerExpired
	 * 		Flags  -> ()
	 */
	void ASheikGameMonitorManager::OnMinTimerExpired()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.OnMinTimerExpired");
		
		ASheikGameMonitorManager_OnMinTimerExpired_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.OnMeshMergeReady
	 * 		Flags  -> ()
	 */
	void ASheikGameMonitorManager::OnMeshMergeReady()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.OnMeshMergeReady");
		
		ASheikGameMonitorManager_OnMeshMergeReady_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.OnMaxTimeExpired
	 * 		Flags  -> ()
	 */
	void ASheikGameMonitorManager::OnMaxTimeExpired()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.OnMaxTimeExpired");
		
		ASheikGameMonitorManager_OnMaxTimeExpired_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.OnCaptureReady
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            CaptureIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikGameMonitorManager::OnCaptureReady(int32_t CaptureIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.OnCaptureReady");
		
		ASheikGameMonitorManager_OnCaptureReady_Params params {};
		params.CaptureIndex = CaptureIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.NetMulticastIncomingEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FMonitorEvent                               IncomingEvent                                              (Parm, NativeAccessSpecifierPublic)
	 */
	void ASheikGameMonitorManager::NetMulticastIncomingEvent(const struct FMonitorEvent& IncomingEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.NetMulticastIncomingEvent");
		
		ASheikGameMonitorManager_NetMulticastIncomingEvent_Params params {};
		params.IncomingEvent = IncomingEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.GetSecondPlayerMaterialInstance
	 * 		Flags  -> ()
	 */
	class UMaterialInstanceDynamic* ASheikGameMonitorManager::GetSecondPlayerMaterialInstance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.GetSecondPlayerMaterialInstance");
		
		ASheikGameMonitorManager_GetSecondPlayerMaterialInstance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.GetFirstPlayerMaterialInstance
	 * 		Flags  -> ()
	 */
	class UMaterialInstanceDynamic* ASheikGameMonitorManager::GetFirstPlayerMaterialInstance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.GetFirstPlayerMaterialInstance");
		
		ASheikGameMonitorManager_GetFirstPlayerMaterialInstance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.GatherAssetsForCapture
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerState*                                PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CaptureIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikGameMonitorManager::GatherAssetsForCapture(class APlayerState* PlayerState, int32_t CaptureIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.GatherAssetsForCapture");
		
		ASheikGameMonitorManager_GatherAssetsForCapture_Params params {};
		params.PlayerState = PlayerState;
		params.CaptureIndex = CaptureIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.EnteringRequestedState
	 * 		Flags  -> ()
	 */
	void ASheikGameMonitorManager::EnteringRequestedState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.EnteringRequestedState");
		
		ASheikGameMonitorManager_EnteringRequestedState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.EnteringInactiveState
	 * 		Flags  -> ()
	 */
	void ASheikGameMonitorManager::EnteringInactiveState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.EnteringInactiveState");
		
		ASheikGameMonitorManager_EnteringInactiveState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.EnteringDisplayState
	 * 		Flags  -> ()
	 */
	void ASheikGameMonitorManager::EnteringDisplayState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.EnteringDisplayState");
		
		ASheikGameMonitorManager_EnteringDisplayState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameMonitorManager.AddAssetsToLoadForPlayerState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerState*                                PlayerState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FSoftObjectPath>                     InOutAssetsToLoad                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void ASheikGameMonitorManager::AddAssetsToLoadForPlayerState(class APlayerState* PlayerState, TArray<struct FSoftObjectPath>* InOutAssetsToLoad)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameMonitorManager.AddAssetsToLoadForPlayerState");
		
		ASheikGameMonitorManager_AddAssetsToLoadForPlayerState_Params params {};
		params.PlayerState = PlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InOutAssetsToLoad != nullptr)
			*InOutAssetsToLoad = params.InOutAssetsToLoad;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikGameMonitorManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikGameMonitorManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikGameMonitorManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateCommon.ReportInputSourceChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FUserControllerData                         OldInputSource                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FUserControllerData                         NewInputSource                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ASheikGameStateCommon::ReportInputSourceChanged(const struct FUserControllerData& OldInputSource, const struct FUserControllerData& NewInputSource)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateCommon.ReportInputSourceChanged");
		
		ASheikGameStateCommon_ReportInputSourceChanged_Params params {};
		params.OldInputSource = OldInputSource;
		params.NewInputSource = NewInputSource;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameStateCommon.OnServerHotfixVersionChanged__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            ServerVersion                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikGameStateCommon::OnServerHotfixVersionChanged__DelegateSignature(int32_t ServerVersion)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameStateCommon.OnServerHotfixVersionChanged__DelegateSignature");
		
		ASheikGameStateCommon_OnServerHotfixVersionChanged__DelegateSignature_Params params {};
		params.ServerVersion = ServerVersion;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateCommon.OnRep_ServerHotfixVersion
	 * 		Flags  -> ()
	 */
	void ASheikGameStateCommon::OnRep_ServerHotfixVersion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateCommon.OnRep_ServerHotfixVersion");
		
		ASheikGameStateCommon_OnRep_ServerHotfixVersion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateCommon.OnRep_NumTeamsAliveChanged
	 * 		Flags  -> ()
	 */
	void ASheikGameStateCommon::OnRep_NumTeamsAliveChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateCommon.OnRep_NumTeamsAliveChanged");
		
		ASheikGameStateCommon_OnRep_NumTeamsAliveChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateCommon.OnRep_NumPlayersAliveChanged
	 * 		Flags  -> ()
	 */
	void ASheikGameStateCommon::OnRep_NumPlayersAliveChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateCommon.OnRep_NumPlayersAliveChanged");
		
		ASheikGameStateCommon_OnRep_NumPlayersAliveChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateCommon.OnRep_CurrentTeamMode
	 * 		Flags  -> ()
	 */
	void ASheikGameStateCommon::OnRep_CurrentTeamMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateCommon.OnRep_CurrentTeamMode");
		
		ASheikGameStateCommon_OnRep_CurrentTeamMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateCommon.OnRep_CurrentGameModeType
	 * 		Flags  -> ()
	 */
	void ASheikGameStateCommon::OnRep_CurrentGameModeType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateCommon.OnRep_CurrentGameModeType");
		
		ASheikGameStateCommon_OnRep_CurrentGameModeType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateCommon.OnRep_CurrentGameFlowChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FGameFlowData                               LastGameFlowData                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ASheikGameStateCommon::OnRep_CurrentGameFlowChanged(const struct FGameFlowData& LastGameFlowData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateCommon.OnRep_CurrentGameFlowChanged");
		
		ASheikGameStateCommon_OnRep_CurrentGameFlowChanged_Params params {};
		params.LastGameFlowData = LastGameFlowData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikGameStateCommon.OnNumberOfPlayersChanged__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            TotalPlayers                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               HasPlayerBeenAdded                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikGameStateCommon::OnNumberOfPlayersChanged__DelegateSignature(int32_t TotalPlayers, bool HasPlayerBeenAdded)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikGameStateCommon.OnNumberOfPlayersChanged__DelegateSignature");
		
		ASheikGameStateCommon_OnNumberOfPlayersChanged__DelegateSignature_Params params {};
		params.TotalPlayers = TotalPlayers;
		params.HasPlayerBeenAdded = HasPlayerBeenAdded;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateCommon.GetGameplaySettings
	 * 		Flags  -> ()
	 */
	class UCommonGameplaySettingsData* ASheikGameStateCommon::GetGameplaySettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateCommon.GetGameplaySettings");
		
		ASheikGameStateCommon_GetGameplaySettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateCommon.Client_OnNewCratesIncoming
	 * 		Flags  -> ()
	 */
	void ASheikGameStateCommon::Client_OnNewCratesIncoming()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateCommon.Client_OnNewCratesIncoming");
		
		ASheikGameStateCommon_Client_OnNewCratesIncoming_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateCommon.BroadcastNumberOfPlayersChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            CurrentTotalPlayers                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bHasPlayerBeenAdded                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikGameStateCommon::BroadcastNumberOfPlayersChanged(int32_t CurrentTotalPlayers, bool bHasPlayerBeenAdded)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateCommon.BroadcastNumberOfPlayersChanged");
		
		ASheikGameStateCommon_BroadcastNumberOfPlayersChanged_Params params {};
		params.CurrentTotalPlayers = CurrentTotalPlayers;
		params.bHasPlayerBeenAdded = bHasPlayerBeenAdded;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateCommon.AutomaticMatchmakingQuitTimerReached
	 * 		Flags  -> ()
	 */
	void ASheikGameStateCommon::AutomaticMatchmakingQuitTimerReached()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateCommon.AutomaticMatchmakingQuitTimerReached");
		
		ASheikGameStateCommon_AutomaticMatchmakingQuitTimerReached_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikGameStateCommon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikGameStateCommon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikGameStateCommon");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateBR.OnRep_SuddenDeathRingShrinkCountChanged
	 * 		Flags  -> ()
	 */
	void ASheikGameStateBR::OnRep_SuddenDeathRingShrinkCountChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateBR.OnRep_SuddenDeathRingShrinkCountChanged");
		
		ASheikGameStateBR_OnRep_SuddenDeathRingShrinkCountChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateBR.OnRep_OnlyUseDemoRings
	 * 		Flags  -> ()
	 */
	void ASheikGameStateBR::OnRep_OnlyUseDemoRings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateBR.OnRep_OnlyUseDemoRings");
		
		ASheikGameStateBR_OnRep_OnlyUseDemoRings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateBR.OnRep_IsFinalRingStateChanged
	 * 		Flags  -> ()
	 */
	void ASheikGameStateBR::OnRep_IsFinalRingStateChanged()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateBR.OnRep_IsFinalRingStateChanged");
		
		ASheikGameStateBR_OnRep_IsFinalRingStateChanged_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateBR.OnEventStartHandler
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            EventTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsParticipating                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikGameStateBR::OnEventStartHandler(int32_t EventTime, bool bIsParticipating)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateBR.OnEventStartHandler");
		
		ASheikGameStateBR_OnEventStartHandler_Params params {};
		params.EventTime = EventTime;
		params.bIsParticipating = bIsParticipating;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateBR.OnEventCountdownStartHandler
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            EventTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikGameStateBR::OnEventCountdownStartHandler(int32_t EventTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateBR.OnEventCountdownStartHandler");
		
		ASheikGameStateBR_OnEventCountdownStartHandler_Params params {};
		params.EventTime = EventTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateBR.GetMatchTimerInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikCharacter*                             InCharacter                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FSheikMatchTimerHUDInfo ASheikGameStateBR::GetMatchTimerInfo(class ASheikCharacter* InCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateBR.GetMatchTimerInfo");
		
		ASheikGameStateBR_GetMatchTimerInfo_Params params {};
		params.InCharacter = InCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGameStateBR.Client_OnBargeBanterEvent
	 * 		Flags  -> ()
	 */
	void ASheikGameStateBR::Client_OnBargeBanterEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGameStateBR.Client_OnBargeBanterEvent");
		
		ASheikGameStateBR_Client_OnBargeBanterEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikGameStateBR.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikGameStateBR::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikGameStateBR");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikGameStateCTF.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikGameStateCTF::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikGameStateCTF");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikGameStateDeathmatch.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikGameStateDeathmatch::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikGameStateDeathmatch");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGenericPopup.SetHeaderText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        HeaderText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikGenericPopup::SetHeaderText(const class FText& HeaderText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGenericPopup.SetHeaderText");
		
		USheikGenericPopup_SetHeaderText_Params params {};
		params.HeaderText = HeaderText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGenericPopup.SetErrorCodeText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        ErrorCodeText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikGenericPopup::SetErrorCodeText(const class FText& ErrorCodeText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGenericPopup.SetErrorCodeText");
		
		USheikGenericPopup_SetErrorCodeText_Params params {};
		params.ErrorCodeText = ErrorCodeText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGenericPopup.SetDimBackground
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               DimBackground                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGenericPopup::SetDimBackground(bool DimBackground)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGenericPopup.SetDimBackground");
		
		USheikGenericPopup_SetDimBackground_Params params {};
		params.DimBackground = DimBackground;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGenericPopup.SetBodyText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        BodyText                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bUseDefaultFormatting                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikGenericPopup::SetBodyText(const class FText& BodyText, bool bUseDefaultFormatting)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGenericPopup.SetBodyText");
		
		USheikGenericPopup_SetBodyText_Params params {};
		params.BodyText = BodyText;
		params.bUseDefaultFormatting = bUseDefaultFormatting;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikGenericPopup.AddLegend
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FLegendData>                         LegendPrompts                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USheikGenericPopup::AddLegend(TArray<struct FLegendData> LegendPrompts)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikGenericPopup.AddLegend");
		
		USheikGenericPopup_AddLegend_Params params {};
		params.LegendPrompts = LegendPrompts;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikGenericPopup.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikGenericPopup::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikGenericPopup");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.ToggleDebugMenu
	 * 		Flags  -> ()
	 */
	void ASheikHUD::ToggleDebugMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.ToggleDebugMenu");
		
		ASheikHUD_ToggleDebugMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.StartMinigame
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikMinigameInfo                          MinigameInfo                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::StartMinigame(const struct FSheikMinigameInfo& MinigameInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.StartMinigame");
		
		ASheikHUD_StartMinigame_Params params {};
		params.MinigameInfo = MinigameInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.ShouldShowFullMap
	 * 		Flags  -> ()
	 */
	bool ASheikHUD::ShouldShowFullMap()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.ShouldShowFullMap");
		
		ASheikHUD_ShouldShowFullMap_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.ShouldShowDirectLine
	 * 		Flags  -> ()
	 */
	bool ASheikHUD::ShouldShowDirectLine()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.ShouldShowDirectLine");
		
		ASheikHUD_ShouldShowDirectLine_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.SetPlayerCharacterPawnToFollow
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikCharacter*                             SheikCharacter                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::SetPlayerCharacterPawnToFollow(class ASheikCharacter* SheikCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.SetPlayerCharacterPawnToFollow");
		
		ASheikHUD_SetPlayerCharacterPawnToFollow_Params params {};
		params.SheikCharacter = SheikCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.SetAllowCursorInput
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bUseMenuInput                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::SetAllowCursorInput(bool bUseMenuInput)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.SetAllowCursorInput");
		
		ASheikHUD_SetAllowCursorInput_Params params {};
		params.bUseMenuInput = bUseMenuInput;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.SendWaypointInfo
	 * 		Flags  -> ()
	 */
	void ASheikHUD::SendWaypointInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.SendWaypointInfo");
		
		ASheikHUD_SendWaypointInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.ResetAllowCheckCannonLaunch
	 * 		Flags  -> ()
	 */
	void ASheikHUD::ResetAllowCheckCannonLaunch()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.ResetAllowCheckCannonLaunch");
		
		ASheikHUD_ResetAllowCheckCannonLaunch_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikHUD.OnUpdateWaypoints__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikWaypointInfo>                  Waypoints                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::OnUpdateWaypoints__DelegateSignature(TArray<struct FSheikWaypointInfo> Waypoints)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikHUD.OnUpdateWaypoints__DelegateSignature");
		
		ASheikHUD_OnUpdateWaypoints__DelegateSignature_Params params {};
		params.Waypoints = Waypoints;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikHUD.OnUpdateShowPlayZoneDirectPath__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikHUD::OnUpdateShowPlayZoneDirectPath__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikHUD.OnUpdateShowPlayZoneDirectPath__DelegateSignature");
		
		ASheikHUD_OnUpdateShowPlayZoneDirectPath__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikHUD.OnUpdateShowingFullMap__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikHUD::OnUpdateShowingFullMap__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikHUD.OnUpdateShowingFullMap__DelegateSignature");
		
		ASheikHUD_OnUpdateShowingFullMap__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikHUD.OnUpdateOwningPlayerInfo__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikOwningPlayerInfo                      OwningPlayerInfo                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::OnUpdateOwningPlayerInfo__DelegateSignature(const struct FSheikOwningPlayerInfo& OwningPlayerInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikHUD.OnUpdateOwningPlayerInfo__DelegateSignature");
		
		ASheikHUD_OnUpdateOwningPlayerInfo__DelegateSignature_Params params {};
		params.OwningPlayerInfo = OwningPlayerInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikHUD.OnUpdateMapLookupInfo__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikMapLookupInfo                         MapLookupInfo                                              (Parm, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::OnUpdateMapLookupInfo__DelegateSignature(const struct FSheikMapLookupInfo& MapLookupInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikHUD.OnUpdateMapLookupInfo__DelegateSignature");
		
		ASheikHUD_OnUpdateMapLookupInfo__DelegateSignature_Params params {};
		params.MapLookupInfo = MapLookupInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikHUD.OnUpdateLaunchCone__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikCannonConeData                        CannonConeLaunchData                                       (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::OnUpdateLaunchCone__DelegateSignature(const struct FSheikCannonConeData& CannonConeLaunchData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikHUD.OnUpdateLaunchCone__DelegateSignature");
		
		ASheikHUD_OnUpdateLaunchCone__DelegateSignature_Params params {};
		params.CannonConeLaunchData = CannonConeLaunchData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikHUD.OnTeammateGameplayEvent__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGPlayerState*                              TeammateState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::OnTeammateGameplayEvent__DelegateSignature(class AIGPlayerState* TeammateState, bool bValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikHUD.OnTeammateGameplayEvent__DelegateSignature");
		
		ASheikHUD_OnTeammateGameplayEvent__DelegateSignature_Params params {};
		params.TeammateState = TeammateState;
		params.bValue = bValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikHUD.OnTeammateCannonLanded__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGPlayerState*                              TeammateState                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::OnTeammateCannonLanded__DelegateSignature(class AIGPlayerState* TeammateState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikHUD.OnTeammateCannonLanded__DelegateSignature");
		
		ASheikHUD_OnTeammateCannonLanded__DelegateSignature_Params params {};
		params.TeammateState = TeammateState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikHUD.OnCannonFired__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikHUD::OnCannonFired__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikHUD.OnCannonFired__DelegateSignature");
		
		ASheikHUD_OnCannonFired__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikHUD.OnAllowCursorInputChanged__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               UseMenuInput                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::OnAllowCursorInputChanged__DelegateSignature(bool UseMenuInput)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikHUD.OnAllowCursorInputChanged__DelegateSignature");
		
		ASheikHUD_OnAllowCursorInputChanged__DelegateSignature_Params params {};
		params.UseMenuInput = UseMenuInput;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.LoadMapLookupInfo
	 * 		Flags  -> ()
	 */
	void ASheikHUD::LoadMapLookupInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.LoadMapLookupInfo");
		
		ASheikHUD_LoadMapLookupInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.IsDisplayingScreenOfType
	 * 		Flags  -> ()
	 */
	bool ASheikHUD::IsDisplayingScreenOfType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.IsDisplayingScreenOfType");
		
		ASheikHUD_IsDisplayingScreenOfType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.HideDebugMenu
	 * 		Flags  -> ()
	 */
	void ASheikHUD::HideDebugMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.HideDebugMenu");
		
		ASheikHUD_HideDebugMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.HasFoundMapLookupInfo
	 * 		Flags  -> ()
	 */
	bool ASheikHUD::HasFoundMapLookupInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.HasFoundMapLookupInfo");
		
		ASheikHUD_HasFoundMapLookupInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.HandleOnTeammateInCombatAlert
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGPlayerState*                              TeammateState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsTeammateInCombat                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::HandleOnTeammateInCombatAlert(class AIGPlayerState* TeammateState, bool bIsTeammateInCombat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.HandleOnTeammateInCombatAlert");
		
		ASheikHUD_HandleOnTeammateInCombatAlert_Params params {};
		params.TeammateState = TeammateState;
		params.bIsTeammateInCombat = bIsTeammateInCombat;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.HandleOnTeammateHPAlert
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGPlayerState*                              TeammateState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsTeammateLowHealth                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::HandleOnTeammateHPAlert(class AIGPlayerState* TeammateState, bool bIsTeammateLowHealth)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.HandleOnTeammateHPAlert");
		
		ASheikHUD_HandleOnTeammateHPAlert_Params params {};
		params.TeammateState = TeammateState;
		params.bIsTeammateLowHealth = bIsTeammateLowHealth;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.HandleOnTeammateCannonLanded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGPlayerState*                              TeammateState                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::HandleOnTeammateCannonLanded(class AIGPlayerState* TeammateState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.HandleOnTeammateCannonLanded");
		
		ASheikHUD_HandleOnTeammateCannonLanded_Params params {};
		params.TeammateState = TeammateState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.HandleOnPingExpired
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PartyMemberID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::HandleOnPingExpired(int32_t PartyMemberID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.HandleOnPingExpired");
		
		ASheikHUD_HandleOnPingExpired_Params params {};
		params.PartyMemberID = PartyMemberID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.HandleOnPingAtLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EIGPingType                                        PingType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PartyMemberID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     PingLocation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     PingNormal                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::HandleOnPingAtLocation(EIGPingType PingType, int32_t PartyMemberID, const struct FVector& PingLocation, const struct FVector& PingNormal)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.HandleOnPingAtLocation");
		
		ASheikHUD_HandleOnPingAtLocation_Params params {};
		params.PingType = PingType;
		params.PartyMemberID = PartyMemberID;
		params.PingLocation = PingLocation;
		params.PingNormal = PingNormal;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.HandleOnPinEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikPinEventType                                 EventType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ASheikCharacter*                             Attacker                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ASheikCharacter*                             Victim                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::HandleOnPinEvent(ESheikPinEventType EventType, class ASheikCharacter* Attacker, class ASheikCharacter* Victim)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.HandleOnPinEvent");
		
		ASheikHUD_HandleOnPinEvent_Params params {};
		params.EventType = EventType;
		params.Attacker = Attacker;
		params.Victim = Victim;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.HandleOnKnockOutOccured
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGKnockOutData                             KnockOutData                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::HandleOnKnockOutOccured(const struct FIGKnockOutData& KnockOutData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.HandleOnKnockOutOccured");
		
		ASheikHUD_HandleOnKnockOutOccured_Params params {};
		params.KnockOutData = KnockOutData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.HandleOnGameFlowStateChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EGameFlowState                                     NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::HandleOnGameFlowStateChanged(EGameFlowState NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.HandleOnGameFlowStateChanged");
		
		ASheikHUD_HandleOnGameFlowStateChanged_Params params {};
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.HandleOnClientFiredCannon
	 * 		Flags  -> ()
	 */
	void ASheikHUD::HandleOnClientFiredCannon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.HandleOnClientFiredCannon");
		
		ASheikHUD_HandleOnClientFiredCannon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.GetTexture2DFromPayload
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPayload                               Payload                                                    (Parm, NativeAccessSpecifierPublic)
	 * 		class FString                                      KeyName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               OutSuccessful                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::GetTexture2DFromPayload(const struct FSheikPayload& Payload, const class FString& KeyName, bool* OutSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.GetTexture2DFromPayload");
		
		ASheikHUD_GetTexture2DFromPayload_Params params {};
		params.Payload = Payload;
		params.KeyName = KeyName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutSuccessful != nullptr)
			*OutSuccessful = params.OutSuccessful;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.GetTextFromPayload
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPayload                               Payload                                                    (Parm, NativeAccessSpecifierPublic)
	 * 		class FString                                      KeyName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               OutSuccessful                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText ASheikHUD::GetTextFromPayload(const struct FSheikPayload& Payload, const class FString& KeyName, bool* OutSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.GetTextFromPayload");
		
		ASheikHUD_GetTextFromPayload_Params params {};
		params.Payload = Payload;
		params.KeyName = KeyName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutSuccessful != nullptr)
			*OutSuccessful = params.OutSuccessful;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.GetStringFromPayload
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPayload                               Payload                                                    (Parm, NativeAccessSpecifierPublic)
	 * 		class FString                                      KeyName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               OutSuccessful                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FString ASheikHUD::GetStringFromPayload(const struct FSheikPayload& Payload, const class FString& KeyName, bool* OutSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.GetStringFromPayload");
		
		ASheikHUD_GetStringFromPayload_Params params {};
		params.Payload = Payload;
		params.KeyName = KeyName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutSuccessful != nullptr)
			*OutSuccessful = params.OutSuccessful;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.GetPlayZoneDirectPathLineDimensions
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   MapDimensions                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IsFullMap                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Successful                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     UseThisPlayerLocation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FSheikDirectLineToPlayZoneData ASheikHUD::GetPlayZoneDirectPathLineDimensions(const struct FVector2D& MapDimensions, bool IsFullMap, bool* Successful, const struct FVector& UseThisPlayerLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.GetPlayZoneDirectPathLineDimensions");
		
		ASheikHUD_GetPlayZoneDirectPathLineDimensions_Params params {};
		params.MapDimensions = MapDimensions;
		params.IsFullMap = IsFullMap;
		params.UseThisPlayerLocation = UseThisPlayerLocation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Successful != nullptr)
			*Successful = params.Successful;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.GetMapLookupInfo
	 * 		Flags  -> ()
	 */
	struct FSheikMapLookupInfo ASheikHUD::GetMapLookupInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.GetMapLookupInfo");
		
		ASheikHUD_GetMapLookupInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.GetIntFromPayload
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPayload                               Payload                                                    (Parm, NativeAccessSpecifierPublic)
	 * 		class FString                                      KeyName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               OutSuccessful                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t ASheikHUD::GetIntFromPayload(const struct FSheikPayload& Payload, const class FString& KeyName, bool* OutSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.GetIntFromPayload");
		
		ASheikHUD_GetIntFromPayload_Params params {};
		params.Payload = Payload;
		params.KeyName = KeyName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutSuccessful != nullptr)
			*OutSuccessful = params.OutSuccessful;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.GetFloatFromPayload
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPayload                               Payload                                                    (Parm, NativeAccessSpecifierPublic)
	 * 		class FString                                      KeyName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               OutSuccessful                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float ASheikHUD::GetFloatFromPayload(const struct FSheikPayload& Payload, const class FString& KeyName, bool* OutSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.GetFloatFromPayload");
		
		ASheikHUD_GetFloatFromPayload_Params params {};
		params.Payload = Payload;
		params.KeyName = KeyName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutSuccessful != nullptr)
			*OutSuccessful = params.OutSuccessful;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.GetDimensionsOfRotatedSquareOverlapInMinimapSection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              WidthOfMinimapSide                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              HeightOfMinimapSide                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   CenterOfSquare                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              SquareSideLength                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              SquareRotationInDegrees                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FSheikMinimapOverlapInfo ASheikHUD::GetDimensionsOfRotatedSquareOverlapInMinimapSection(float WidthOfMinimapSide, float HeightOfMinimapSide, const struct FVector2D& CenterOfSquare, float SquareSideLength, float SquareRotationInDegrees)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.GetDimensionsOfRotatedSquareOverlapInMinimapSection");
		
		ASheikHUD_GetDimensionsOfRotatedSquareOverlapInMinimapSection_Params params {};
		params.WidthOfMinimapSide = WidthOfMinimapSide;
		params.HeightOfMinimapSide = HeightOfMinimapSide;
		params.CenterOfSquare = CenterOfSquare;
		params.SquareSideLength = SquareSideLength;
		params.SquareRotationInDegrees = SquareRotationInDegrees;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.GetDimensionsOfCircleOverlapInMinimapSection
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              WidthOfMinimapSide                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              HeightOfMinimapSide                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   CenterOfCircle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              CircleRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FSheikMinimapOverlapInfo ASheikHUD::GetDimensionsOfCircleOverlapInMinimapSection(float WidthOfMinimapSide, float HeightOfMinimapSide, const struct FVector2D& CenterOfCircle, float CircleRadius)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.GetDimensionsOfCircleOverlapInMinimapSection");
		
		ASheikHUD_GetDimensionsOfCircleOverlapInMinimapSection_Params params {};
		params.WidthOfMinimapSide = WidthOfMinimapSide;
		params.HeightOfMinimapSide = HeightOfMinimapSide;
		params.CenterOfCircle = CenterOfCircle;
		params.CircleRadius = CircleRadius;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.GetCurrentNetSimulationSettings
	 * 		Flags  -> ()
	 */
	struct FCurrentNetSimulationSettings ASheikHUD::GetCurrentNetSimulationSettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.GetCurrentNetSimulationSettings");
		
		ASheikHUD_GetCurrentNetSimulationSettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.GetCalculatedDirectLineData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   StartPositionInCanvasPanel                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   EndPositionInCanvasPanel                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   TopLeftCornerOfPanel                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   BottomRightCornerOfPanel                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FSheikDirectLineCalculatedData ASheikHUD::GetCalculatedDirectLineData(const struct FVector2D& StartPositionInCanvasPanel, const struct FVector2D& EndPositionInCanvasPanel, const struct FVector2D& TopLeftCornerOfPanel, const struct FVector2D& BottomRightCornerOfPanel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.GetCalculatedDirectLineData");
		
		ASheikHUD_GetCalculatedDirectLineData_Params params {};
		params.StartPositionInCanvasPanel = StartPositionInCanvasPanel;
		params.EndPositionInCanvasPanel = EndPositionInCanvasPanel;
		params.TopLeftCornerOfPanel = TopLeftCornerOfPanel;
		params.BottomRightCornerOfPanel = BottomRightCornerOfPanel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.GetBooleanFromPayload
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPayload                               Payload                                                    (Parm, NativeAccessSpecifierPublic)
	 * 		class FString                                      KeyName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               OutSuccessful                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikHUD::GetBooleanFromPayload(const struct FSheikPayload& Payload, const class FString& KeyName, bool* OutSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.GetBooleanFromPayload");
		
		ASheikHUD_GetBooleanFromPayload_Params params {};
		params.Payload = Payload;
		params.KeyName = KeyName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutSuccessful != nullptr)
			*OutSuccessful = params.OutSuccessful;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.GetAngleBetweenTwoPoints
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   PointA                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector2D                                   PointB                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float ASheikHUD::GetAngleBetweenTwoPoints(const struct FVector2D& PointA, const struct FVector2D& PointB)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.GetAngleBetweenTwoPoints");
		
		ASheikHUD_GetAngleBetweenTwoPoints_Params params {};
		params.PointA = PointA;
		params.PointB = PointB;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.EndMinigame
	 * 		Flags  -> ()
	 */
	void ASheikHUD::EndMinigame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.EndMinigame");
		
		ASheikHUD_EndMinigame_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.EnableGlobalInvalidation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::EnableGlobalInvalidation(bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.EnableGlobalInvalidation");
		
		ASheikHUD_EnableGlobalInvalidation_Params params {};
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.DebugStartMinigame
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              StartingPosition                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TargetPosition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TargetSize                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              GradientSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Speed                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               BounceBackOnHit                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NumOfBounces                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::DebugStartMinigame(float StartingPosition, float TargetPosition, float TargetSize, float GradientSize, float Speed, bool BounceBackOnHit, int32_t NumOfBounces)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.DebugStartMinigame");
		
		ASheikHUD_DebugStartMinigame_Params params {};
		params.StartingPosition = StartingPosition;
		params.TargetPosition = TargetPosition;
		params.TargetSize = TargetSize;
		params.GradientSize = GradientSize;
		params.Speed = Speed;
		params.BounceBackOnHit = BounceBackOnHit;
		params.NumOfBounces = NumOfBounces;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.DebugOnMinigameResults
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikMinigameResults                       MinigameResults                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::DebugOnMinigameResults(const struct FSheikMinigameResults& MinigameResults)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.DebugOnMinigameResults");
		
		ASheikHUD_DebugOnMinigameResults_Params params {};
		params.MinigameResults = MinigameResults;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.DebugEndMinigame
	 * 		Flags  -> ()
	 */
	void ASheikHUD::DebugEndMinigame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.DebugEndMinigame");
		
		ASheikHUD_DebugEndMinigame_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.DebugContinueMinigame
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               ResetCursorPosition                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::DebugContinueMinigame(bool ResetCursorPosition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.DebugContinueMinigame");
		
		ASheikHUD_DebugContinueMinigame_Params params {};
		params.ResetCursorPosition = ResetCursorPosition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.ContinueMinigame
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               ResetCursorPosition                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::ContinueMinigame(bool ResetCursorPosition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.ContinueMinigame");
		
		ASheikHUD_ContinueMinigame_Params params {};
		params.ResetCursorPosition = ResetCursorPosition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.AddTexture2DToPayload
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPayload                               Payload                                                    (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FString                                      KeyName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::AddTexture2DToPayload(struct FSheikPayload* Payload, const class FString& KeyName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.AddTexture2DToPayload");
		
		ASheikHUD_AddTexture2DToPayload_Params params {};
		params.KeyName = KeyName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Payload != nullptr)
			*Payload = params.Payload;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.AddTextToPayload
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPayload                               Payload                                                    (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FString                                      KeyName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        Value                                                      (Parm, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::AddTextToPayload(struct FSheikPayload* Payload, const class FString& KeyName, const class FText& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.AddTextToPayload");
		
		ASheikHUD_AddTextToPayload_Params params {};
		params.KeyName = KeyName;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Payload != nullptr)
			*Payload = params.Payload;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.AddStringToPayload
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPayload                               Payload                                                    (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FString                                      KeyName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Value                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::AddStringToPayload(struct FSheikPayload* Payload, const class FString& KeyName, const class FString& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.AddStringToPayload");
		
		ASheikHUD_AddStringToPayload_Params params {};
		params.KeyName = KeyName;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Payload != nullptr)
			*Payload = params.Payload;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.AddIntToPayload
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPayload                               Payload                                                    (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FString                                      KeyName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::AddIntToPayload(struct FSheikPayload* Payload, const class FString& KeyName, int32_t Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.AddIntToPayload");
		
		ASheikHUD_AddIntToPayload_Params params {};
		params.KeyName = KeyName;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Payload != nullptr)
			*Payload = params.Payload;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.AddFloatToPayload
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPayload                               Payload                                                    (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FString                                      KeyName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::AddFloatToPayload(struct FSheikPayload* Payload, const class FString& KeyName, float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.AddFloatToPayload");
		
		ASheikHUD_AddFloatToPayload_Params params {};
		params.KeyName = KeyName;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Payload != nullptr)
			*Payload = params.Payload;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikHUD.AddBooleanToPayload
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPayload                               Payload                                                    (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FString                                      KeyName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikHUD::AddBooleanToPayload(struct FSheikPayload* Payload, const class FString& KeyName, bool Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikHUD.AddBooleanToPayload");
		
		ASheikHUD_AddBooleanToPayload_Params params {};
		params.KeyName = KeyName;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Payload != nullptr)
			*Payload = params.Payload;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikHUD.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikHUD::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikHUD");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikImage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikImage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikImage");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPrompts.HandleOnUpdatedInputPrompts
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikInputPromptContainerData              PromptContainerData                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikInputPrompts::HandleOnUpdatedInputPrompts(const struct FSheikInputPromptContainerData& PromptContainerData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPrompts.HandleOnUpdatedInputPrompts");
		
		USheikInputPrompts_HandleOnUpdatedInputPrompts_Params params {};
		params.PromptContainerData = PromptContainerData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPrompts.GetTextForGenericPrompt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikGenericInputPrompt                           InputPrompt                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText USheikInputPrompts::GetTextForGenericPrompt(ESheikGenericInputPrompt InputPrompt)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPrompts.GetTextForGenericPrompt");
		
		USheikInputPrompts_GetTextForGenericPrompt_Params params {};
		params.InputPrompt = InputPrompt;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikInputPrompts.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikInputPrompts::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikInputPrompts");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.UpdatePromptDataWithHeldItemPrompts
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikCharacter*                             PlayerCharacter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikInputPromptContainerData              ContainerData                                              (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		bool                                               UseInAirPrompts                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IgnoreTopPrompt                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               IgnoreConsume                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikInputPromptsCallbacks::UpdatePromptDataWithHeldItemPrompts(class ASheikCharacter* PlayerCharacter, struct FSheikInputPromptContainerData* ContainerData, bool UseInAirPrompts, bool IgnoreTopPrompt, bool IgnoreConsume)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.UpdatePromptDataWithHeldItemPrompts");
		
		USheikInputPromptsCallbacks_UpdatePromptDataWithHeldItemPrompts_Params params {};
		params.PlayerCharacter = PlayerCharacter;
		params.UseInAirPrompts = UseInAirPrompts;
		params.IgnoreTopPrompt = IgnoreTopPrompt;
		params.IgnoreConsume = IgnoreConsume;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ContainerData != nullptr)
			*ContainerData = params.ContainerData;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.UpdateInputPrompts
	 * 		Flags  -> ()
	 */
	void USheikInputPromptsCallbacks::UpdateInputPrompts()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.UpdateInputPrompts");
		
		USheikInputPromptsCallbacks_UpdateInputPrompts_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.SubscribeToCharacterDelegates
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikCharacter*                             NewCharacter                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikInputPromptsCallbacks::SubscribeToCharacterDelegates(class ASheikCharacter* NewCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.SubscribeToCharacterDelegates");
		
		USheikInputPromptsCallbacks_SubscribeToCharacterDelegates_Params params {};
		params.NewCharacter = NewCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikInputPromptsCallbacks.OnUpdatedInputPrompts__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikInputPromptContainerData              PromptContainerData                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikInputPromptsCallbacks::OnUpdatedInputPrompts__DelegateSignature(const struct FSheikInputPromptContainerData& PromptContainerData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikInputPromptsCallbacks.OnUpdatedInputPrompts__DelegateSignature");
		
		USheikInputPromptsCallbacks_OnUpdatedInputPrompts__DelegateSignature_Params params {};
		params.PromptContainerData = PromptContainerData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.IsInMovesetMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikMovesetPromptType                            MovesetPromptType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikInputPromptsCallbacks::IsInMovesetMontage(ESheikMovesetPromptType MovesetPromptType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.IsInMovesetMontage");
		
		USheikInputPromptsCallbacks_IsInMovesetMontage_Params params {};
		params.MovesetPromptType = MovesetPromptType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.IsInCombo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGMovesetComponent*                         MovesetComponent                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikInputPromptsCallbacks::IsInCombo(class UIGMovesetComponent* MovesetComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.IsInCombo");
		
		USheikInputPromptsCallbacks_IsInCombo_Params params {};
		params.MovesetComponent = MovesetComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleShowComboPromptTimerEvent
	 * 		Flags  -> ()
	 */
	void USheikInputPromptsCallbacks::HandleShowComboPromptTimerEvent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleShowComboPromptTimerEvent");
		
		USheikInputPromptsCallbacks_HandleShowComboPromptTimerEvent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleOnWallGrabPromptChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     SurfaceLoc                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikInputPromptsCallbacks::HandleOnWallGrabPromptChanged(const struct FVector& SurfaceLoc)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleOnWallGrabPromptChanged");
		
		USheikInputPromptsCallbacks_HandleOnWallGrabPromptChanged_Params params {};
		params.SurfaceLoc = SurfaceLoc;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleOnMovesetDataUpdated
	 * 		Flags  -> ()
	 */
	void USheikInputPromptsCallbacks::HandleOnMovesetDataUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleOnMovesetDataUpdated");
		
		USheikInputPromptsCallbacks_HandleOnMovesetDataUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleOnMovementModeChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ACharacter*                                  Character                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EMovementMode                                      PrevMovementMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		unsigned char                                      PreviousCustomMode                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikInputPromptsCallbacks::HandleOnMovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, unsigned char PreviousCustomMode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleOnMovementModeChanged");
		
		USheikInputPromptsCallbacks_HandleOnMovementModeChanged_Params params {};
		params.Character = Character;
		params.PrevMovementMode = PrevMovementMode;
		params.PreviousCustomMode = PreviousCustomMode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleOnMontageStarted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikInputPromptsCallbacks::HandleOnMontageStarted(class UAnimMontage* Montage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleOnMontageStarted");
		
		USheikInputPromptsCallbacks_HandleOnMontageStarted_Params params {};
		params.Montage = Montage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleOnMontageChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInteruppted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikInputPromptsCallbacks::HandleOnMontageChanged(class UAnimMontage* Montage, bool bInteruppted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleOnMontageChanged");
		
		USheikInputPromptsCallbacks_HandleOnMontageChanged_Params params {};
		params.Montage = Montage;
		params.bInteruppted = bInteruppted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleOnLaunchControlUpdated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bLaunchControl                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikInputPromptsCallbacks::HandleOnLaunchControlUpdated(bool bLaunchControl)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleOnLaunchControlUpdated");
		
		USheikInputPromptsCallbacks_HandleOnLaunchControlUpdated_Params params {};
		params.bLaunchControl = bLaunchControl;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleOnInteractVolumeExited
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGInteractableBoxComponent*                 InteractableBoxComponent                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikInputPromptsCallbacks::HandleOnInteractVolumeExited(class UIGInteractableBoxComponent* InteractableBoxComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleOnInteractVolumeExited");
		
		USheikInputPromptsCallbacks_HandleOnInteractVolumeExited_Params params {};
		params.InteractableBoxComponent = InteractableBoxComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleOnInteractVolumeEntered
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGInteractableBoxComponent*                 InteractableBoxComponent                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikInputPromptsCallbacks::HandleOnInteractVolumeEntered(class UIGInteractableBoxComponent* InteractableBoxComponent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleOnInteractVolumeEntered");
		
		USheikInputPromptsCallbacks_HandleOnInteractVolumeEntered_Params params {};
		params.InteractableBoxComponent = InteractableBoxComponent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleOnInteractableStatusChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGCharacter*                                InteractableActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikInputPromptsCallbacks::HandleOnInteractableStatusChanged(class AIGCharacter* InteractableActor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleOnInteractableStatusChanged");
		
		USheikInputPromptsCallbacks_HandleOnInteractableStatusChanged_Params params {};
		params.InteractableActor = InteractableActor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleOnFreefallStart
	 * 		Flags  -> ()
	 */
	void USheikInputPromptsCallbacks::HandleOnFreefallStart()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleOnFreefallStart");
		
		USheikInputPromptsCallbacks_HandleOnFreefallStart_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleOnClientIsAimingCannonChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               IsAimingCannon                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikInputPromptsCallbacks::HandleOnClientIsAimingCannonChanged(bool IsAimingCannon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleOnClientIsAimingCannonChanged");
		
		USheikInputPromptsCallbacks_HandleOnClientIsAimingCannonChanged_Params params {};
		params.IsAimingCannon = IsAimingCannon;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleOnClientFiredCannon
	 * 		Flags  -> ()
	 */
	void USheikInputPromptsCallbacks::HandleOnClientFiredCannon()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleOnClientFiredCannon");
		
		USheikInputPromptsCallbacks_HandleOnClientFiredCannon_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleOnCharacterPawnChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikCharacter*                             NewCharacter                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikInputPromptsCallbacks::HandleOnCharacterPawnChanged(class ASheikCharacter* NewCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleOnCharacterPawnChanged");
		
		USheikInputPromptsCallbacks_HandleOnCharacterPawnChanged_Params params {};
		params.NewCharacter = NewCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleOnCharacterDamaged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGInstanceHitData                          HitData                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikInputPromptsCallbacks::HandleOnCharacterDamaged(const struct FIGInstanceHitData& HitData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleOnCharacterDamaged");
		
		USheikInputPromptsCallbacks_HandleOnCharacterDamaged_Params params {};
		params.HitData = HitData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleOnCannonLaunchPhase2Start
	 * 		Flags  -> ()
	 */
	void USheikInputPromptsCallbacks::HandleOnCannonLaunchPhase2Start()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleOnCannonLaunchPhase2Start");
		
		USheikInputPromptsCallbacks_HandleOnCannonLaunchPhase2Start_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.HandleOnCannonLaunchCanEnterFreeFall
	 * 		Flags  -> ()
	 */
	void USheikInputPromptsCallbacks::HandleOnCannonLaunchCanEnterFreeFall()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.HandleOnCannonLaunchCanEnterFreeFall");
		
		USheikInputPromptsCallbacks_HandleOnCannonLaunchCanEnterFreeFall_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.BindEventsToLocalPlayerController
	 * 		Flags  -> ()
	 */
	void USheikInputPromptsCallbacks::BindEventsToLocalPlayerController()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.BindEventsToLocalPlayerController");
		
		USheikInputPromptsCallbacks_BindEventsToLocalPlayerController_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikInputPromptsCallbacks.AreInputPromptsEmpty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikInputPromptContainerData              PromptContainerData                                        (Parm, NativeAccessSpecifierPublic)
	 */
	bool USheikInputPromptsCallbacks::AreInputPromptsEmpty(const struct FSheikInputPromptContainerData& PromptContainerData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikInputPromptsCallbacks.AreInputPromptsEmpty");
		
		USheikInputPromptsCallbacks_AreInputPromptsEmpty_Params params {};
		params.PromptContainerData = PromptContainerData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikInputPromptsCallbacks.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikInputPromptsCallbacks::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikInputPromptsCallbacks");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikJoinRestrictedMatchScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikJoinRestrictedMatchScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikJoinRestrictedMatchScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikKeybindingManager.SaveKeyBindings
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikKeybindingManager::SaveKeyBindings(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikKeybindingManager.SaveKeyBindings");
		
		USheikKeybindingManager_SaveKeyBindings_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikKeybindingManager.ResetKeyboardBindings
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikKeybindingManager::ResetKeyboardBindings(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikKeybindingManager.ResetKeyboardBindings");
		
		USheikKeybindingManager_ResetKeyboardBindings_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikKeybindingManager.ResetKeyBindings
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikKeybindingManager::ResetKeyBindings(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikKeybindingManager.ResetKeyBindings");
		
		USheikKeybindingManager_ResetKeyBindings_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikKeybindingManager.ResetGamepadBindings
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikKeybindingManager::ResetGamepadBindings(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikKeybindingManager.ResetGamepadBindings");
		
		USheikKeybindingManager_ResetGamepadBindings_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikKeybindingManager.RebindActionForKeyboard
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ActionName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FKey                                        OldKey                                                     (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FKey                                        NewKey                                                     (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikActionBindingSlot                            Slot                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                ActionNameFilter                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FName                                        Context                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikKeybindingManager::RebindActionForKeyboard(class UObject* WorldContextObject, const class FName& ActionName, const struct FKey& OldKey, const struct FKey& NewKey, ESheikActionBindingSlot Slot, TArray<class FName> ActionNameFilter, const class FName& Context)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikKeybindingManager.RebindActionForKeyboard");
		
		USheikKeybindingManager_RebindActionForKeyboard_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.ActionName = ActionName;
		params.OldKey = OldKey;
		params.NewKey = NewKey;
		params.Slot = Slot;
		params.ActionNameFilter = ActionNameFilter;
		params.Context = Context;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikKeybindingManager.RebindActionForGamepad
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ActionName                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FKey                                        OldKey                                                     (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FKey                                        NewKey                                                     (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                ActionNameFilter                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		class FName                                        Context                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikKeybindingManager::RebindActionForGamepad(class UObject* WorldContextObject, const class FName& ActionName, const struct FKey& OldKey, const struct FKey& NewKey, TArray<class FName> ActionNameFilter, const class FName& Context)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikKeybindingManager.RebindActionForGamepad");
		
		USheikKeybindingManager_RebindActionForGamepad_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.ActionName = ActionName;
		params.OldKey = OldKey;
		params.NewKey = NewKey;
		params.ActionNameFilter = ActionNameFilter;
		params.Context = Context;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikKeybindingManager.IsActionBound
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InActionName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikKeybindingManager::IsActionBound(class UObject* WorldContextObject, const class FName& InActionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikKeybindingManager.IsActionBound");
		
		USheikKeybindingManager_IsActionBound_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.InActionName = InActionName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikKeybindingManager.GetTextureForKey
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FKey                                        InKey                                                      (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EInputSource                                       Source                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UDataTable*                                  KeyToTextureDataTable                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UTexture* USheikKeybindingManager::GetTextureForKey(const struct FKey& InKey, EInputSource Source, class UDataTable* KeyToTextureDataTable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikKeybindingManager.GetTextureForKey");
		
		USheikKeybindingManager_GetTextureForKey_Params params {};
		params.InKey = InKey;
		params.Source = Source;
		params.KeyToTextureDataTable = KeyToTextureDataTable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikKeybindingManager.GetTextureForAction
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        InAction                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EInputSource                                       Source                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UDataTable*                                  KeyToTextureDataTable                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UTexture* USheikKeybindingManager::GetTextureForAction(class UObject* WorldContextObject, const class FName& InAction, EInputSource Source, class UDataTable* KeyToTextureDataTable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikKeybindingManager.GetTextureForAction");
		
		USheikKeybindingManager_GetTextureForAction_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.InAction = InAction;
		params.Source = Source;
		params.KeyToTextureDataTable = KeyToTextureDataTable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikKeybindingManager.GetLocalPlayerController
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class APlayerController* USheikKeybindingManager::GetLocalPlayerController(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikKeybindingManager.GetLocalPlayerController");
		
		USheikKeybindingManager_GetLocalPlayerController_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikKeybindingManager.GetKeyboardKeysForActionByName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FBoundKeyInfo USheikKeybindingManager::GetKeyboardKeysForActionByName(class UObject* WorldContextObject, const class FName& ActionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikKeybindingManager.GetKeyboardKeysForActionByName");
		
		USheikKeybindingManager_GetKeyboardKeysForActionByName_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.ActionName = ActionName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikKeybindingManager.GetKeyboardBindings
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeUnboundActions                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FBoundKeyInfo> USheikKeybindingManager::GetKeyboardBindings(class UObject* WorldContextObject, bool bIncludeUnboundActions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikKeybindingManager.GetKeyboardBindings");
		
		USheikKeybindingManager_GetKeyboardBindings_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.bIncludeUnboundActions = bIncludeUnboundActions;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikKeybindingManager.GetGamepadKeysForActionByName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ActionName                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FBoundKeyInfo USheikKeybindingManager::GetGamepadKeysForActionByName(class UObject* WorldContextObject, const class FName& ActionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikKeybindingManager.GetGamepadKeysForActionByName");
		
		USheikKeybindingManager_GetGamepadKeysForActionByName_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.ActionName = ActionName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikKeybindingManager.GetGamepadBindings
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeUnboundActions                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FBoundKeyInfo> USheikKeybindingManager::GetGamepadBindings(class UObject* WorldContextObject, bool bIncludeUnboundActions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikKeybindingManager.GetGamepadBindings");
		
		USheikKeybindingManager_GetGamepadBindings_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.bIncludeUnboundActions = bIncludeUnboundActions;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikKeybindingManager.GetActionByKey
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FKey                                        InKey                                                      (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName USheikKeybindingManager::GetActionByKey(class UObject* WorldContextObject, const struct FKey& InKey)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikKeybindingManager.GetActionByKey");
		
		USheikKeybindingManager_GetActionByKey_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.InKey = InKey;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikKeybindingManager.DoesActionExist
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        InActionName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikKeybindingManager::DoesActionExist(const class FName& InActionName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikKeybindingManager.DoesActionExist");
		
		USheikKeybindingManager_DoesActionExist_Params params {};
		params.InActionName = InActionName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikKeybindingManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikKeybindingManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikKeybindingManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLiveOpsSystem.KickToTitleScreen
	 * 		Flags  -> ()
	 */
	void USheikLiveOpsSystem::KickToTitleScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLiveOpsSystem.KickToTitleScreen");
		
		USheikLiveOpsSystem_KickToTitleScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikLiveOpsSystem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikLiveOpsSystem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikLiveOpsSystem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoaderGameModeBase.GetLoadFlowManager
	 * 		Flags  -> ()
	 */
	class USheikLoadFlowManager* ASheikLoaderGameModeBase::GetLoadFlowManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoaderGameModeBase.GetLoadFlowManager");
		
		ASheikLoaderGameModeBase_GetLoadFlowManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikLoaderGameModeBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikLoaderGameModeBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikLoaderGameModeBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoadFlowManager.RestartHotfixCheckForDesiredVersion
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUpdateCompletionStatus                            Result                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLoadFlowManager::RestartHotfixCheckForDesiredVersion(EUpdateCompletionStatus Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoadFlowManager.RestartHotfixCheckForDesiredVersion");
		
		USheikLoadFlowManager_RestartHotfixCheckForDesiredVersion_Params params {};
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoadFlowManager.OnHotfixDefer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<int32_t>                                    AvailableVersions                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikLoadFlowManager::OnHotfixDefer(TArray<int32_t> AvailableVersions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoadFlowManager.OnHotfixDefer");
		
		USheikLoadFlowManager_OnHotfixDefer_Params params {};
		params.AvailableVersions = AvailableVersions;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoadFlowManager.OnHotfixComplete
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUpdateCompletionStatus                            Result                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLoadFlowManager::OnHotfixComplete(EUpdateCompletionStatus Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoadFlowManager.OnHotfixComplete");
		
		USheikLoadFlowManager_OnHotfixComplete_Params params {};
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoadFlowManager.OnDeferredHotfixComplete
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUpdateCompletionStatus                            Result                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLoadFlowManager::OnDeferredHotfixComplete(EUpdateCompletionStatus Result)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoadFlowManager.OnDeferredHotfixComplete");
		
		USheikLoadFlowManager_OnDeferredHotfixComplete_Params params {};
		params.Result = Result;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoadFlowManager.GetCurrentState
	 * 		Flags  -> ()
	 */
	ELoadFlowState USheikLoadFlowManager::GetCurrentState()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoadFlowManager.GetCurrentState");
		
		USheikLoadFlowManager_GetCurrentState_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikLoadFlowManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikLoadFlowManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikLoadFlowManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoadingScreen.ShowEstimatedProgress
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              EstimatedProgress                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLoadingScreen::ShowEstimatedProgress(float EstimatedProgress)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoadingScreen.ShowEstimatedProgress");
		
		USheikLoadingScreen_ShowEstimatedProgress_Params params {};
		params.EstimatedProgress = EstimatedProgress;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoadingScreen.OnUITitleStorageDataRetrieved
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikLoadingScreen::OnUITitleStorageDataRetrieved(bool bSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoadingScreen.OnUITitleStorageDataRetrieved");
		
		USheikLoadingScreen_OnUITitleStorageDataRetrieved_Params params {};
		params.bSuccessful = bSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikLoadingScreen.OnTriggerLoadFinished__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikLoadingScreen::OnTriggerLoadFinished__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikLoadingScreen.OnTriggerLoadFinished__DelegateSignature");
		
		USheikLoadingScreen_OnTriggerLoadFinished__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoadingScreen.OnSpinnerFrameUpdated
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Frame                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLoadingScreen::OnSpinnerFrameUpdated(int32_t Frame)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoadingScreen.OnSpinnerFrameUpdated");
		
		USheikLoadingScreen_OnSpinnerFrameUpdated_Params params {};
		params.Frame = Frame;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoadingScreen.OnSeasonVerificationCompleted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikLoadingScreen::OnSeasonVerificationCompleted(bool bSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoadingScreen.OnSeasonVerificationCompleted");
		
		USheikLoadingScreen_OnSeasonVerificationCompleted_Params params {};
		params.bSuccessful = bSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoadingScreen.OnProgressionDataRetrieved
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikLoadingScreen::OnProgressionDataRetrieved(bool bSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoadingScreen.OnProgressionDataRetrieved");
		
		USheikLoadingScreen_OnProgressionDataRetrieved_Params params {};
		params.bSuccessful = bSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoadingScreen.OnPlayerDataRetrieved
	 * 		Flags  -> ()
	 */
	void USheikLoadingScreen::OnPlayerDataRetrieved()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoadingScreen.OnPlayerDataRetrieved");
		
		USheikLoadingScreen_OnPlayerDataRetrieved_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoadingScreen.OnEntitlementsOwnedRefreshComplete
	 * 		Flags  -> ()
	 */
	void USheikLoadingScreen::OnEntitlementsOwnedRefreshComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoadingScreen.OnEntitlementsOwnedRefreshComplete");
		
		USheikLoadingScreen_OnEntitlementsOwnedRefreshComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoadingScreen.OnAchievementsProgressSaved
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLoadingScreen::OnAchievementsProgressSaved(bool bSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoadingScreen.OnAchievementsProgressSaved");
		
		USheikLoadingScreen_OnAchievementsProgressSaved_Params params {};
		params.bSuccessful = bSuccessful;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoadingScreen.IsLoadFinished
	 * 		Flags  -> ()
	 */
	bool USheikLoadingScreen::IsLoadFinished()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoadingScreen.IsLoadFinished");
		
		USheikLoadingScreen_IsLoadFinished_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikLoadingScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikLoadingScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikLoadingScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.ZoomCameraToRegion
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EIGBodyType                                        BodyType                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EIGBodyRegion                                      ZoomRegion                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bSmoothZoom                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::ZoomCameraToRegion(EIGBodyType BodyType, EIGBodyRegion ZoomRegion, bool bSmoothZoom)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.ZoomCameraToRegion");
		
		USheikLockerRoom_ZoomCameraToRegion_Params params {};
		params.BodyType = BodyType;
		params.ZoomRegion = ZoomRegion;
		params.bSmoothZoom = bSmoothZoom;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.UnPreviewAccessory
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::UnPreviewAccessory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.UnPreviewAccessory");
		
		USheikLockerRoom_UnPreviewAccessory_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.ToggleCharacterPreviewVisibility
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsHidden                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::ToggleCharacterPreviewVisibility(bool bIsHidden)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.ToggleCharacterPreviewVisibility");
		
		USheikLockerRoom_ToggleCharacterPreviewVisibility_Params params {};
		params.bIsHidden = bIsHidden;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.SpawnCharacterPreview
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::SpawnCharacterPreview()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.SpawnCharacterPreview");
		
		USheikLockerRoom_SpawnCharacterPreview_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.SortAccessoryList
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikAccessoryInfo>                 Accessories                                                (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikLockerRoom::SortAccessoryList(TArray<struct FSheikAccessoryInfo>* Accessories)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.SortAccessoryList");
		
		USheikLockerRoom_SortAccessoryList_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Accessories != nullptr)
			*Accessories = params.Accessories;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.SetSheikAccessorySystem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USheikAccessorySystem*                       SheikAccSys                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::SetSheikAccessorySystem(class USheikAccessorySystem* SheikAccSys)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.SetSheikAccessorySystem");
		
		USheikLockerRoom_SetSheikAccessorySystem_Params params {};
		params.SheikAccSys = SheikAccSys;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.SetCameraPositionByItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikAccessoryInfo                         FocusItem                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::SetCameraPositionByItem(const struct FSheikAccessoryInfo& FocusItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.SetCameraPositionByItem");
		
		USheikLockerRoom_SetCameraPositionByItem_Params params {};
		params.FocusItem = FocusItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.SetCameraForCurrentBodyType
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::SetCameraForCurrentBodyType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.SetCameraForCurrentBodyType");
		
		USheikLockerRoom_SetCameraForCurrentBodyType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.SaveCurrentLoadoutAsPreset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PresetSlotIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikLockerRoom::SaveCurrentLoadoutAsPreset(int32_t PresetSlotIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.SaveCurrentLoadoutAsPreset");
		
		USheikLockerRoom_SaveCurrentLoadoutAsPreset_Params params {};
		params.PresetSlotIndex = PresetSlotIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.SaveCharacterLoadout
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::SaveCharacterLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.SaveCharacterLoadout");
		
		USheikLockerRoom_SaveCharacterLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.ResetCamera
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::ResetCamera()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.ResetCamera");
		
		USheikLockerRoom_ResetCamera_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.RemoveFilter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikFilterType                                   FilterType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               RefreshAccessories                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::RemoveFilter(ESheikFilterType FilterType, bool RefreshAccessories)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.RemoveFilter");
		
		USheikLockerRoom_RemoveFilter_Params params {};
		params.FilterType = FilterType;
		params.RefreshAccessories = RefreshAccessories;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.RemoveAllFilters
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               RefreshAccessories                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::RemoveAllFilters(bool RefreshAccessories)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.RemoveAllFilters");
		
		USheikLockerRoom_RemoveAllFilters_Params params {};
		params.RefreshAccessories = RefreshAccessories;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.RemoveAccessory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ID                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::RemoveAccessory(const class FName& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.RemoveAccessory");
		
		USheikLockerRoom_RemoveAccessory_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.RefreshAccessoryData
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::RefreshAccessoryData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.RefreshAccessoryData");
		
		USheikLockerRoom_RefreshAccessoryData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.RandomizeBodyOptions
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::RandomizeBodyOptions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.RandomizeBodyOptions");
		
		USheikLockerRoom_RandomizeBodyOptions_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.RandomizeAccessories
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::RandomizeAccessories()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.RandomizeAccessories");
		
		USheikLockerRoom_RandomizeAccessories_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.ProcessDataTables
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::ProcessDataTables()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.ProcessDataTables");
		
		USheikLockerRoom_ProcessDataTables_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.PreviewAccessory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ID                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsTogglingUndies                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::PreviewAccessory(const class FName& ID, bool bIsTogglingUndies)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.PreviewAccessory");
		
		USheikLockerRoom_PreviewAccessory_Params params {};
		params.ID = ID;
		params.bIsTogglingUndies = bIsTogglingUndies;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikLockerRoom.OnRefreshAccessoryList__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::OnRefreshAccessoryList__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikLockerRoom.OnRefreshAccessoryList__DelegateSignature");
		
		USheikLockerRoom_OnRefreshAccessoryList__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikLockerRoom.OnErrorOccurred__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        ErrorMsg                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::OnErrorOccurred__DelegateSignature(const class FText& ErrorMsg)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikLockerRoom.OnErrorOccurred__DelegateSignature");
		
		USheikLockerRoom_OnErrorOccurred__DelegateSignature_Params params {};
		params.ErrorMsg = ErrorMsg;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikLockerRoom.OnConflictOccurred__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikAccessoryInfo>                 ConflictingItems                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::OnConflictOccurred__DelegateSignature(TArray<struct FSheikAccessoryInfo> ConflictingItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikLockerRoom.OnConflictOccurred__DelegateSignature");
		
		USheikLockerRoom_OnConflictOccurred__DelegateSignature_Params params {};
		params.ConflictingItems = ConflictingItems;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikLockerRoom.OnAccessoryLoadUpdate__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::OnAccessoryLoadUpdate__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikLockerRoom.OnAccessoryLoadUpdate__DelegateSignature");
		
		USheikLockerRoom_OnAccessoryLoadUpdate__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.MakePreviewBodyShapeSameAsBase
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::MakePreviewBodyShapeSameAsBase()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.MakePreviewBodyShapeSameAsBase");
		
		USheikLockerRoom_MakePreviewBodyShapeSameAsBase_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.LogLockerRoomOpenEventOnFirstInteraction
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::LogLockerRoomOpenEventOnFirstInteraction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.LogLockerRoomOpenEventOnFirstInteraction");
		
		USheikLockerRoom_LogLockerRoomOpenEventOnFirstInteraction_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.IsOutfitEqualToLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikOutfitInfo                            InOutfitInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FCharacterLoadout                           InLoadout                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikLockerRoom::IsOutfitEqualToLoadout(const struct FSheikOutfitInfo& InOutfitInfo, const struct FCharacterLoadout& InLoadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.IsOutfitEqualToLoadout");
		
		USheikLockerRoom_IsOutfitEqualToLoadout_Params params {};
		params.InOutfitInfo = InOutfitInfo;
		params.InLoadout = InLoadout;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.IsFilterLocked
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikFilterType                                   FilterType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikLockerRoom::IsFilterLocked(ESheikFilterType FilterType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.IsFilterLocked");
		
		USheikLockerRoom_IsFilterLocked_Params params {};
		params.FilterType = FilterType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.IsAnyVariationUnseen
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        VariationGroupName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikLockerRoom::IsAnyVariationUnseen(const class FName& VariationGroupName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.IsAnyVariationUnseen");
		
		USheikLockerRoom_IsAnyVariationUnseen_Params params {};
		params.VariationGroupName = VariationGroupName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.IsAdvancedLockerRoomEnabled
	 * 		Flags  -> ()
	 */
	bool USheikLockerRoom::IsAdvancedLockerRoomEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.IsAdvancedLockerRoomEnabled");
		
		USheikLockerRoom_IsAdvancedLockerRoomEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.IsAccessoryAlreadyEquipped
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ID                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikLockerRoom::IsAccessoryAlreadyEquipped(const class FName& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.IsAccessoryAlreadyEquipped");
		
		USheikLockerRoom_IsAccessoryAlreadyEquipped_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.HasMultipleVariations
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        VariationGroupName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikLockerRoom::HasMultipleVariations(const class FName& VariationGroupName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.HasMultipleVariations");
		
		USheikLockerRoom_HasMultipleVariations_Params params {};
		params.VariationGroupName = VariationGroupName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.HasFilter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikFilterType                                   FilterType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikLockerRoom::HasFilter(ESheikFilterType FilterType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.HasFilter");
		
		USheikLockerRoom_HasFilter_Params params {};
		params.FilterType = FilterType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.HandleOnVisibilityChangedEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESlateVisibility                                   InVisibility                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::HandleOnVisibilityChangedEvent(ESlateVisibility InVisibility)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.HandleOnVisibilityChangedEvent");
		
		USheikLockerRoom_HandleOnVisibilityChangedEvent_Params params {};
		params.InVisibility = InVisibility;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.HandleOnMatchFound
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::HandleOnMatchFound(bool bSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.HandleOnMatchFound");
		
		USheikLockerRoom_HandleOnMatchFound_Params params {};
		params.bSuccessful = bSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.HandleOnCustomizerUpdateComplete
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::HandleOnCustomizerUpdateComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.HandleOnCustomizerUpdateComplete");
		
		USheikLockerRoom_HandleOnCustomizerUpdateComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.HandleNavigationButtonPressEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FInputEventData                             InputEvent                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::HandleNavigationButtonPressEvent(const struct FInputEventData& InputEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.HandleNavigationButtonPressEvent");
		
		USheikLockerRoom_HandleNavigationButtonPressEvent_Params params {};
		params.InputEvent = InputEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetWalletSystem
	 * 		Flags  -> ()
	 */
	class USheikWalletSystem* USheikLockerRoom::GetWalletSystem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetWalletSystem");
		
		USheikLockerRoom_GetWalletSystem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetVariationGroupNames
	 * 		Flags  -> ()
	 */
	TArray<class FName> USheikLockerRoom::GetVariationGroupNames()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetVariationGroupNames");
		
		USheikLockerRoom_GetVariationGroupNames_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetVariationGroupAccessories
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        VariationGroupName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               FilterByCurrentBody                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FSheikAccessoryInfo> USheikLockerRoom::GetVariationGroupAccessories(const class FName& VariationGroupName, bool FilterByCurrentBody)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetVariationGroupAccessories");
		
		USheikLockerRoom_GetVariationGroupAccessories_Params params {};
		params.VariationGroupName = VariationGroupName;
		params.FilterByCurrentBody = FilterByCurrentBody;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetUnlockedOutfits
	 * 		Flags  -> ()
	 */
	TArray<struct FSheikOutfitInfo> USheikLockerRoom::GetUnlockedOutfits()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetUnlockedOutfits");
		
		USheikLockerRoom_GetUnlockedOutfits_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetUngroupedAccessoryVariations
	 * 		Flags  -> ()
	 */
	TArray<struct FSheikAccessoryInfo> USheikLockerRoom::GetUngroupedAccessoryVariations()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetUngroupedAccessoryVariations");
		
		USheikLockerRoom_GetUngroupedAccessoryVariations_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetSubcategoryFilters
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikFilterType                                   InFilterType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<ESheikFilterType> USheikLockerRoom::GetSubcategoryFilters(ESheikFilterType InFilterType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetSubcategoryFilters");
		
		USheikLockerRoom_GetSubcategoryFilters_Params params {};
		params.InFilterType = InFilterType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetStoreSystem
	 * 		Flags  -> ()
	 */
	class USheikStoreSystem* USheikLockerRoom::GetStoreSystem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetStoreSystem");
		
		USheikLockerRoom_GetStoreSystem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetPlayersCurrentBudget
	 * 		Flags  -> ()
	 */
	int32_t USheikLockerRoom::GetPlayersCurrentBudget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetPlayersCurrentBudget");
		
		USheikLockerRoom_GetPlayersCurrentBudget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetPlayerData
	 * 		Flags  -> ()
	 */
	class USheikPlayerData* USheikLockerRoom::GetPlayerData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetPlayerData");
		
		USheikLockerRoom_GetPlayerData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetNewestOutfitStoreOffer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikStoreItem                             OutStoreOffer                                              (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikLockerRoom::GetNewestOutfitStoreOffer(struct FSheikStoreItem* OutStoreOffer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetNewestOutfitStoreOffer");
		
		USheikLockerRoom_GetNewestOutfitStoreOffer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutStoreOffer != nullptr)
			*OutStoreOffer = params.OutStoreOffer;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetListOfAccessories
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<EAccessoryType>                             AccessoryTypes                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		bool                                               SortAccessories                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               AdvancedMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FSheikAccessoryInfo> USheikLockerRoom::GetListOfAccessories(TArray<EAccessoryType> AccessoryTypes, bool SortAccessories, bool AdvancedMode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetListOfAccessories");
		
		USheikLockerRoom_GetListOfAccessories_Params params {};
		params.AccessoryTypes = AccessoryTypes;
		params.SortAccessories = SortAccessories;
		params.AdvancedMode = AdvancedMode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetDisplayNameForSort
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikSortingType                                  SortingType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText USheikLockerRoom::GetDisplayNameForSort(ESheikSortingType SortingType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetDisplayNameForSort");
		
		USheikLockerRoom_GetDisplayNameForSort_Params params {};
		params.SortingType = SortingType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetDisplayNameForFilter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikFilterType                                   FilterType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText USheikLockerRoom::GetDisplayNameForFilter(ESheikFilterType FilterType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetDisplayNameForFilter");
		
		USheikLockerRoom_GetDisplayNameForFilter_Params params {};
		params.FilterType = FilterType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetCurrentSortingType
	 * 		Flags  -> ()
	 */
	ESheikSortingType USheikLockerRoom::GetCurrentSortingType()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetCurrentSortingType");
		
		USheikLockerRoom_GetCurrentSortingType_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetCreatedPresetCount
	 * 		Flags  -> ()
	 */
	int32_t USheikLockerRoom::GetCreatedPresetCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetCreatedPresetCount");
		
		USheikLockerRoom_GetCreatedPresetCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetConflictsForAccessory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ID                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FSheikAccessoryInfo>                 OutConflicts                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::GetConflictsForAccessory(const class FName& ID, TArray<struct FSheikAccessoryInfo>* OutConflicts)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetConflictsForAccessory");
		
		USheikLockerRoom_GetConflictsForAccessory_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutConflicts != nullptr)
			*OutConflicts = params.OutConflicts;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.GetAccessoryLabel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ID                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText USheikLockerRoom::GetAccessoryLabel(const class FName& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.GetAccessoryLabel");
		
		USheikLockerRoom_GetAccessoryLabel_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.FilterEmotesByCategoryTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikAccessoryInfo>                 InEmotes                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FGameplayTag                                InTag                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FSheikAccessoryInfo> USheikLockerRoom::FilterEmotesByCategoryTag(TArray<struct FSheikAccessoryInfo> InEmotes, const struct FGameplayTag& InTag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.FilterEmotesByCategoryTag");
		
		USheikLockerRoom_FilterEmotesByCategoryTag_Params params {};
		params.InEmotes = InEmotes;
		params.InTag = InTag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.ExecShowAccessories
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::ExecShowAccessories()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.ExecShowAccessories");
		
		USheikLockerRoom_ExecShowAccessories_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.EquipSavedLoadoutIndex
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            InLoadoutIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::EquipSavedLoadoutIndex(int32_t InLoadoutIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.EquipSavedLoadoutIndex");
		
		USheikLockerRoom_EquipSavedLoadoutIndex_Params params {};
		params.InLoadoutIndex = InLoadoutIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.EquipPreset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PresetIndex                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::EquipPreset(int32_t PresetIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.EquipPreset");
		
		USheikLockerRoom_EquipPreset_Params params {};
		params.PresetIndex = PresetIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.EquipOutfit
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikOutfitInfo                            InOutfit                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsPreviewing                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::EquipOutfit(const struct FSheikOutfitInfo& InOutfit, bool bIsPreviewing)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.EquipOutfit");
		
		USheikLockerRoom_EquipOutfit_Params params {};
		params.InOutfit = InOutfit;
		params.bIsPreviewing = bIsPreviewing;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.EquipLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterLoadout                           CharacterLoadout                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::EquipLoadout(const struct FCharacterLoadout& CharacterLoadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.EquipLoadout");
		
		USheikLockerRoom_EquipLoadout_Params params {};
		params.CharacterLoadout = CharacterLoadout;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.EquipAccessory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ID                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::EquipAccessory(const class FName& ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.EquipAccessory");
		
		USheikLockerRoom_EquipAccessory_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.DoesItemPassFilters
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikAccessoryInfo                         AccessoryInfo                                              (Parm, NativeAccessSpecifierPublic)
	 */
	bool USheikLockerRoom::DoesItemPassFilters(const struct FSheikAccessoryInfo& AccessoryInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.DoesItemPassFilters");
		
		USheikLockerRoom_DoesItemPassFilters_Params params {};
		params.AccessoryInfo = AccessoryInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.DoesAccessoryCauseStyleBudgetOverage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterLoadout                           BaseLoadout                                                (Parm, NativeAccessSpecifierPublic)
	 * 		struct FSheikAccessoryInfo                         InAccessory                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikLockerRoom::DoesAccessoryCauseStyleBudgetOverage(const struct FCharacterLoadout& BaseLoadout, const struct FSheikAccessoryInfo& InAccessory)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.DoesAccessoryCauseStyleBudgetOverage");
		
		USheikLockerRoom_DoesAccessoryCauseStyleBudgetOverage_Params params {};
		params.BaseLoadout = BaseLoadout;
		params.InAccessory = InAccessory;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.ClearAccessoriesNoSave
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::ClearAccessoriesNoSave()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.ClearAccessoriesNoSave");
		
		USheikLockerRoom_ClearAccessoriesNoSave_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.ClearAccessories
	 * 		Flags  -> ()
	 */
	void USheikLockerRoom::ClearAccessories()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.ClearAccessories");
		
		USheikLockerRoom_ClearAccessories_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.ChangeSortingType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikSortingType                                  SortingType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::ChangeSortingType(ESheikSortingType SortingType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.ChangeSortingType");
		
		USheikLockerRoom_ChangeSortingType_Params params {};
		params.SortingType = SortingType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.CanCreateNewPreset
	 * 		Flags  -> ()
	 */
	bool USheikLockerRoom::CanCreateNewPreset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.CanCreateNewPreset");
		
		USheikLockerRoom_CanCreateNewPreset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.CalculateAccessoriesDisallowedByStyleBudget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikAccessoryInfo>                 InAccessories                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	TArray<bool> USheikLockerRoom::CalculateAccessoriesDisallowedByStyleBudget(TArray<struct FSheikAccessoryInfo> InAccessories)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.CalculateAccessoriesDisallowedByStyleBudget");
		
		USheikLockerRoom_CalculateAccessoriesDisallowedByStyleBudget_Params params {};
		params.InAccessories = InAccessories;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoom.AddFilter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikFilterType                                   FilterType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               RefreshAccessories                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoom::AddFilter(ESheikFilterType FilterType, bool RefreshAccessories)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoom.AddFilter");
		
		USheikLockerRoom_AddFilter_Params params {};
		params.FilterType = FilterType;
		params.RefreshAccessories = RefreshAccessories;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikLockerRoom.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikLockerRoom::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikLockerRoom");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoomClothingPage.RefreshUnseenMapEntriesForLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USheikLockerRoom*                            LockerRoom                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FSheikAccessoryInfo>                 InAccessories                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoomClothingPage::RefreshUnseenMapEntriesForLoadout(class USheikLockerRoom* LockerRoom, TArray<struct FSheikAccessoryInfo> InAccessories)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoomClothingPage.RefreshUnseenMapEntriesForLoadout");
		
		USheikLockerRoomClothingPage_RefreshUnseenMapEntriesForLoadout_Params params {};
		params.LockerRoom = LockerRoom;
		params.InAccessories = InAccessories;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoomClothingPage.RefreshStackingDecoratorsNative
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USheikLockerRoom*                            LockerRoom                                                 (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<class UIGUI_WidgetBase*>                    NavigableWidgets                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoomClothingPage::RefreshStackingDecoratorsNative(class USheikLockerRoom* LockerRoom, TArray<class UIGUI_WidgetBase*> NavigableWidgets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoomClothingPage.RefreshStackingDecoratorsNative");
		
		USheikLockerRoomClothingPage_RefreshStackingDecoratorsNative_Params params {};
		params.LockerRoom = LockerRoom;
		params.NavigableWidgets = NavigableWidgets;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoomClothingPage.FilterLockedAccessoriesNative
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikAccessoryInfo>                 InAccessories                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class USheikWalletSystem*                          WalletSys                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<struct FSheikAccessoryInfo> USheikLockerRoomClothingPage::FilterLockedAccessoriesNative(TArray<struct FSheikAccessoryInfo> InAccessories, class USheikWalletSystem* WalletSys)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoomClothingPage.FilterLockedAccessoriesNative");
		
		USheikLockerRoomClothingPage_FilterLockedAccessoriesNative_Params params {};
		params.InAccessories = InAccessories;
		params.WalletSys = WalletSys;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikLockerRoomClothingPage.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikLockerRoomClothingPage::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikLockerRoomClothingPage");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoomItemBase.SetStackingEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               StackingEnabled                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoomItemBase::SetStackingEnabled(bool StackingEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoomItemBase.SetStackingEnabled");
		
		USheikLockerRoomItemBase_SetStackingEnabled_Params params {};
		params.StackingEnabled = StackingEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoomItemBase.SetNewContentNative
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               New                                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoomItemBase::SetNewContentNative(bool New)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoomItemBase.SetNewContentNative");
		
		USheikLockerRoomItemBase_SetNewContentNative_Params params {};
		params.New = New;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoomItemBase.SetItemImageNative
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UTexture2D*                                  Texture                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UImage*                                      Image                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCircularThrobber*                           Spinner                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoomItemBase::SetItemImageNative(class UTexture2D* Texture, class UImage* Image, class UCircularThrobber* Spinner)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoomItemBase.SetItemImageNative");
		
		USheikLockerRoomItemBase_SetItemImageNative_Params params {};
		params.Texture = Texture;
		params.Image = Image;
		params.Spinner = Spinner;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoomItemBase.SetItemColorNative
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLinearColor                                Color                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UImage*                                      Image                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoomItemBase::SetItemColorNative(const struct FLinearColor& Color, class UImage* Image)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoomItemBase.SetItemColorNative");
		
		USheikLockerRoomItemBase_SetItemColorNative_Params params {};
		params.Color = Color;
		params.Image = Image;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoomItemBase.SetEquippedStylingNative
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Equipped                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UImage*                                      EquippedFrame                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UImage*                                      EquippedCheckmark                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UTextBlock*                                  NewIcon                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UOverlay*                                    EquippedNewOverlay                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoomItemBase::SetEquippedStylingNative(bool Equipped, class UImage* EquippedFrame, class UImage* EquippedCheckmark, class UTextBlock* NewIcon, class UOverlay* EquippedNewOverlay)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoomItemBase.SetEquippedStylingNative");
		
		USheikLockerRoomItemBase_SetEquippedStylingNative_Params params {};
		params.Equipped = Equipped;
		params.EquippedFrame = EquippedFrame;
		params.EquippedCheckmark = EquippedCheckmark;
		params.NewIcon = NewIcon;
		params.EquippedNewOverlay = EquippedNewOverlay;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoomItemBase.SetEquippedNewVisibilityNative
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UOverlay*                                    EquippedNewOverlay                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoomItemBase::SetEquippedNewVisibilityNative(class UOverlay* EquippedNewOverlay)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoomItemBase.SetEquippedNewVisibilityNative");
		
		USheikLockerRoomItemBase_SetEquippedNewVisibilityNative_Params params {};
		params.EquippedNewOverlay = EquippedNewOverlay;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoomItemBase.SetCostNative
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               ShowCost                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            BudgetCost                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UOverlay*                                    StyleBudgetOverlay                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UTextBlock*                                  CostTextBlock                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoomItemBase::SetCostNative(bool ShowCost, int32_t BudgetCost, class UOverlay* StyleBudgetOverlay, class UTextBlock* CostTextBlock)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoomItemBase.SetCostNative");
		
		USheikLockerRoomItemBase_SetCostNative_Params params {};
		params.ShowCost = ShowCost;
		params.BudgetCost = BudgetCost;
		params.StyleBudgetOverlay = StyleBudgetOverlay;
		params.CostTextBlock = CostTextBlock;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoomItemBase.PushChangesToContentNative
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikAccessoryInfo                         ItemAccessory                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class UImage*                                      Image                                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UCircularThrobber*                           Spinner                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UOverlay*                                    StyleBudgetOverlay                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UTextBlock*                                  CostTextBlock                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UTextBlock*                                  NewIcon                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UOverlay*                                    EquippedNewOverlay                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UImage*                                      EquippedFrame                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UImage*                                      EquippedCheckmark                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoomItemBase::PushChangesToContentNative(const struct FSheikAccessoryInfo& ItemAccessory, class UImage* Image, class UCircularThrobber* Spinner, class UOverlay* StyleBudgetOverlay, class UTextBlock* CostTextBlock, class UTextBlock* NewIcon, class UOverlay* EquippedNewOverlay, class UImage* EquippedFrame, class UImage* EquippedCheckmark)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoomItemBase.PushChangesToContentNative");
		
		USheikLockerRoomItemBase_PushChangesToContentNative_Params params {};
		params.ItemAccessory = ItemAccessory;
		params.Image = Image;
		params.Spinner = Spinner;
		params.StyleBudgetOverlay = StyleBudgetOverlay;
		params.CostTextBlock = CostTextBlock;
		params.NewIcon = NewIcon;
		params.EquippedNewOverlay = EquippedNewOverlay;
		params.EquippedFrame = EquippedFrame;
		params.EquippedCheckmark = EquippedCheckmark;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikLockerRoomItemBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikLockerRoomItemBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikLockerRoomItemBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLockerRoomUniformGridList.RefreshNavigationOverridesNative
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class UIGUI_WidgetBase*>                    Items                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CountOverride                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            NumberOfCells                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EOrientation                                       ScrollOrientation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               WrapUp                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               WrapDown                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               WrapLeft                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               WrapRight                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLockerRoomUniformGridList::RefreshNavigationOverridesNative(TArray<class UIGUI_WidgetBase*> Items, int32_t CountOverride, int32_t NumberOfCells, EOrientation ScrollOrientation, bool WrapUp, bool WrapDown, bool WrapLeft, bool WrapRight)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLockerRoomUniformGridList.RefreshNavigationOverridesNative");
		
		USheikLockerRoomUniformGridList_RefreshNavigationOverridesNative_Params params {};
		params.Items = Items;
		params.CountOverride = CountOverride;
		params.NumberOfCells = NumberOfCells;
		params.ScrollOrientation = ScrollOrientation;
		params.WrapUp = WrapUp;
		params.WrapDown = WrapDown;
		params.WrapLeft = WrapLeft;
		params.WrapRight = WrapRight;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikLockerRoomUniformGridList.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikLockerRoomUniformGridList::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikLockerRoomUniformGridList");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoginManager.QueueIntoCozmo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FScriptDelegate                              UpdateDelegate                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              CompletionDelegate                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool USheikLoginManager::QueueIntoCozmo(const class FScriptDelegate& UpdateDelegate, const class FScriptDelegate& CompletionDelegate, struct FSheikError* Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoginManager.QueueIntoCozmo");
		
		USheikLoginManager_QueueIntoCozmo_Params params {};
		params.UpdateDelegate = UpdateDelegate;
		params.CompletionDelegate = CompletionDelegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Error != nullptr)
			*Error = params.Error;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikLoginManager.OnFullLogoutCompleteDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            LocalUserNum                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bWasSuccessful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikLoginManager::OnFullLogoutCompleteDelegate__DelegateSignature(int32_t LocalUserNum, bool bWasSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikLoginManager.OnFullLogoutCompleteDelegate__DelegateSignature");
		
		USheikLoginManager_OnFullLogoutCompleteDelegate__DelegateSignature_Params params {};
		params.LocalUserNum = LocalUserNum;
		params.bWasSuccessful = bWasSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikLoginManager.OnCozmoQueueUpdateDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            TicketId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ServingNumber                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikLoginManager::OnCozmoQueueUpdateDelegate__DelegateSignature(int32_t TicketId, int32_t ServingNumber)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikLoginManager.OnCozmoQueueUpdateDelegate__DelegateSignature");
		
		USheikLoginManager_OnCozmoQueueUpdateDelegate__DelegateSignature_Params params {};
		params.TicketId = TicketId;
		params.ServingNumber = ServingNumber;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikLoginManager.OnCozmoQueueCompleteDelegate__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bWasSuccessful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikLoginManager::OnCozmoQueueCompleteDelegate__DelegateSignature(bool bWasSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikLoginManager.OnCozmoQueueCompleteDelegate__DelegateSignature");
		
		USheikLoginManager_OnCozmoQueueCompleteDelegate__DelegateSignature_Params params {};
		params.bWasSuccessful = bWasSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoginManager.NotifyOnConsoleSubsystemLoginComplete
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FScriptDelegate                              OnComplete                                                 (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikLoginManager::NotifyOnConsoleSubsystemLoginComplete(const class FScriptDelegate& OnComplete)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoginManager.NotifyOnConsoleSubsystemLoginComplete");
		
		USheikLoginManager_NotifyOnConsoleSubsystemLoginComplete_Params params {};
		params.OnComplete = OnComplete;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoginManager.Logout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FScriptDelegate                              InDelegate                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool USheikLoginManager::Logout(const class FScriptDelegate& InDelegate, struct FSheikError* Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoginManager.Logout");
		
		USheikLoginManager_Logout_Params params {};
		params.InDelegate = InDelegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Error != nullptr)
			*Error = params.Error;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoginManager.LoginIntoEOS
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ID                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Token                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              InDelegate                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool USheikLoginManager::LoginIntoEOS(const class FString& ID, const class FString& Token, const class FScriptDelegate& InDelegate, struct FSheikError* Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoginManager.LoginIntoEOS");
		
		USheikLoginManager_LoginIntoEOS_Params params {};
		params.ID = ID;
		params.Token = Token;
		params.InDelegate = InDelegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Error != nullptr)
			*Error = params.Error;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoginManager.LoginIntoCozmo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FScriptDelegate                              InDelegate                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool USheikLoginManager::LoginIntoCozmo(const class FScriptDelegate& InDelegate, struct FSheikError* Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoginManager.LoginIntoCozmo");
		
		USheikLoginManager_LoginIntoCozmo_Params params {};
		params.InDelegate = InDelegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Error != nullptr)
			*Error = params.Error;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoginManager.IsUserLoggedIntoPlatform
	 * 		Flags  -> ()
	 */
	ESheikLoginStatus USheikLoginManager::IsUserLoggedIntoPlatform()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoginManager.IsUserLoggedIntoPlatform");
		
		USheikLoginManager_IsUserLoggedIntoPlatform_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoginManager.IsUserLoggedIntoEOS
	 * 		Flags  -> ()
	 */
	bool USheikLoginManager::IsUserLoggedIntoEOS()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoginManager.IsUserLoggedIntoEOS");
		
		USheikLoginManager_IsUserLoggedIntoEOS_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoginManager.IsUserLoggedIntoCozmo
	 * 		Flags  -> ()
	 */
	bool USheikLoginManager::IsUserLoggedIntoCozmo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoginManager.IsUserLoggedIntoCozmo");
		
		USheikLoginManager_IsUserLoggedIntoCozmo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoginManager.IsLoggingOut
	 * 		Flags  -> ()
	 */
	bool USheikLoginManager::IsLoggingOut()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoginManager.IsLoggingOut");
		
		USheikLoginManager_IsLoggingOut_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoginManager.DisplayPlatformLoginUI
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FScriptDelegate                              InDelegate                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool USheikLoginManager::DisplayPlatformLoginUI(const class FScriptDelegate& InDelegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoginManager.DisplayPlatformLoginUI");
		
		USheikLoginManager_DisplayPlatformLoginUI_Params params {};
		params.InDelegate = InDelegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoginManager.CozmoBanInfoRequest
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FScriptDelegate                              InDelegate                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool USheikLoginManager::CozmoBanInfoRequest(const class FScriptDelegate& InDelegate, struct FSheikError* Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoginManager.CozmoBanInfoRequest");
		
		USheikLoginManager_CozmoBanInfoRequest_Params params {};
		params.InDelegate = InDelegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Error != nullptr)
			*Error = params.Error;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikLoginManager.CancelQueueIntoCozmo
	 * 		Flags  -> ()
	 */
	void USheikLoginManager::CancelQueueIntoCozmo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikLoginManager.CancelQueueIntoCozmo");
		
		USheikLoginManager_CancelQueueIntoCozmo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikLoginManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikLoginManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikLoginManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.TakePerk
	 * 		Flags  -> ()
	 */
	void USheikMagazineEquipScreen::TakePerk()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.TakePerk");
		
		USheikMagazineEquipScreen_TakePerk_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.StopReading
	 * 		Flags  -> ()
	 */
	void USheikMagazineEquipScreen::StopReading()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.StopReading");
		
		USheikMagazineEquipScreen_StopReading_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.ShowNewMoveToEquip
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGMoveMontage*                              MoveMontage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EMoveTier                                          MoveTier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMagazineEquipScreen::ShowNewMoveToEquip(class UIGMoveMontage* MoveMontage, EMoveTier MoveTier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.ShowNewMoveToEquip");
		
		USheikMagazineEquipScreen_ShowNewMoveToEquip_Params params {};
		params.MoveMontage = MoveMontage;
		params.MoveTier = MoveTier;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.HandleOnClientIsAimingCannonChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               IsAimingCannon                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMagazineEquipScreen::HandleOnClientIsAimingCannonChanged(bool IsAimingCannon)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.HandleOnClientIsAimingCannonChanged");
		
		USheikMagazineEquipScreen_HandleOnClientIsAimingCannonChanged_Params params {};
		params.IsAimingCannon = IsAimingCannon;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.HandleOnCharacterDied
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ECauseOfDeath                                      CauseOfDeath                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMagazineEquipScreen::HandleOnCharacterDied(ECauseOfDeath CauseOfDeath)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.HandleOnCharacterDied");
		
		USheikMagazineEquipScreen_HandleOnCharacterDied_Params params {};
		params.CauseOfDeath = CauseOfDeath;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.HandleOnCharacterDamaged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGInstanceHitData                          HitData                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikMagazineEquipScreen::HandleOnCharacterDamaged(const struct FIGInstanceHitData& HitData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.HandleOnCharacterDamaged");
		
		USheikMagazineEquipScreen_HandleOnCharacterDamaged_Params params {};
		params.HitData = HitData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.GetLocalPlayerMovesetComponent
	 * 		Flags  -> ()
	 */
	class UIGMovesetComponent* USheikMagazineEquipScreen::GetLocalPlayerMovesetComponent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.GetLocalPlayerMovesetComponent");
		
		USheikMagazineEquipScreen_GetLocalPlayerMovesetComponent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.GetExistingSlotTwoTier
	 * 		Flags  -> ()
	 */
	EMoveTier USheikMagazineEquipScreen::GetExistingSlotTwoTier()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.GetExistingSlotTwoTier");
		
		USheikMagazineEquipScreen_GetExistingSlotTwoTier_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.GetExistingSlotTwoMove
	 * 		Flags  -> ()
	 */
	class UIGMoveMontage* USheikMagazineEquipScreen::GetExistingSlotTwoMove()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.GetExistingSlotTwoMove");
		
		USheikMagazineEquipScreen_GetExistingSlotTwoMove_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.GetExistingSlotOneTier
	 * 		Flags  -> ()
	 */
	EMoveTier USheikMagazineEquipScreen::GetExistingSlotOneTier()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.GetExistingSlotOneTier");
		
		USheikMagazineEquipScreen_GetExistingSlotOneTier_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.GetExistingSlotOneMove
	 * 		Flags  -> ()
	 */
	class UIGMoveMontage* USheikMagazineEquipScreen::GetExistingSlotOneMove()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.GetExistingSlotOneMove");
		
		USheikMagazineEquipScreen_GetExistingSlotOneMove_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.GetCurrentMoveToEquip
	 * 		Flags  -> ()
	 */
	class UIGMoveMontage* USheikMagazineEquipScreen::GetCurrentMoveToEquip()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.GetCurrentMoveToEquip");
		
		USheikMagazineEquipScreen_GetCurrentMoveToEquip_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.EnableExtremeLogging
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMagazineEquipScreen::EnableExtremeLogging(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.EnableExtremeLogging");
		
		USheikMagazineEquipScreen_EnableExtremeLogging_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.CloseEquipScreen
	 * 		Flags  -> ()
	 */
	void USheikMagazineEquipScreen::CloseEquipScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.CloseEquipScreen");
		
		USheikMagazineEquipScreen_CloseEquipScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.BindToCharacterDelegates
	 * 		Flags  -> ()
	 */
	void USheikMagazineEquipScreen::BindToCharacterDelegates()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.BindToCharacterDelegates");
		
		USheikMagazineEquipScreen_BindToCharacterDelegates_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.AssignMoveToSlotTwo
	 * 		Flags  -> ()
	 */
	void USheikMagazineEquipScreen::AssignMoveToSlotTwo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.AssignMoveToSlotTwo");
		
		USheikMagazineEquipScreen_AssignMoveToSlotTwo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMagazineEquipScreen.AssignMoveToSlotOne
	 * 		Flags  -> ()
	 */
	void USheikMagazineEquipScreen::AssignMoveToSlotOne()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMagazineEquipScreen.AssignMoveToSlotOne");
		
		USheikMagazineEquipScreen_AssignMoveToSlotOne_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikMagazineEquipScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikMagazineEquipScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikMagazineEquipScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMainMenu.ToggleMenuActorVisibility
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsHidden                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMainMenu::ToggleMenuActorVisibility(bool bIsHidden)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMainMenu.ToggleMenuActorVisibility");
		
		USheikMainMenu_ToggleMenuActorVisibility_Params params {};
		params.bIsHidden = bIsHidden;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMainMenu.SetupPartyActors
	 * 		Flags  -> ()
	 */
	void USheikMainMenu::SetupPartyActors()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMainMenu.SetupPartyActors");
		
		USheikMainMenu_SetupPartyActors_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMainMenu.SetSheikWalletSystem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USheikWalletSystem*                          InWalletSystem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMainMenu::SetSheikWalletSystem(class USheikWalletSystem* InWalletSystem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMainMenu.SetSheikWalletSystem");
		
		USheikMainMenu_SetSheikWalletSystem_Params params {};
		params.InWalletSystem = InWalletSystem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMainMenu.SetSheikStoreSystem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USheikStoreSystem*                           InStoreSystem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMainMenu::SetSheikStoreSystem(class USheikStoreSystem* InStoreSystem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMainMenu.SetSheikStoreSystem");
		
		USheikMainMenu_SetSheikStoreSystem_Params params {};
		params.InStoreSystem = InStoreSystem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMainMenu.SetSheikAccessorySystem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USheikAccessorySystem*                       SheikAccSys                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMainMenu::SetSheikAccessorySystem(class USheikAccessorySystem* SheikAccSys)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMainMenu.SetSheikAccessorySystem");
		
		USheikMainMenu_SetSheikAccessorySystem_Params params {};
		params.SheikAccSys = SheikAccSys;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMainMenu.OnWalletIdRevocationOccurred
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FName>                                RevokedWalledIds                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikMainMenu::OnWalletIdRevocationOccurred(TArray<class FName> RevokedWalledIds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMainMenu.OnWalletIdRevocationOccurred");
		
		USheikMainMenu_OnWalletIdRevocationOccurred_Params params {};
		params.RevokedWalledIds = RevokedWalledIds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikMainMenu.OnGrantEntitlementCheckComplete__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikMainMenu::OnGrantEntitlementCheckComplete__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikMainMenu.OnGrantEntitlementCheckComplete__DelegateSignature");
		
		USheikMainMenu_OnGrantEntitlementCheckComplete__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikMainMenu.OnAccessoryLoadComplete__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikMainMenu::OnAccessoryLoadComplete__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikMainMenu.OnAccessoryLoadComplete__DelegateSignature");
		
		USheikMainMenu_OnAccessoryLoadComplete__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMainMenu.HandleMenuActorScaling
	 * 		Flags  -> ()
	 */
	void USheikMainMenu::HandleMenuActorScaling()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMainMenu.HandleMenuActorScaling");
		
		USheikMainMenu_HandleMenuActorScaling_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMainMenu.GrantEntitlementsCheck
	 * 		Flags  -> ()
	 */
	void USheikMainMenu::GrantEntitlementsCheck()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMainMenu.GrantEntitlementsCheck");
		
		USheikMainMenu_GrantEntitlementsCheck_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMainMenu.GetLeaguesWidget
	 * 		Flags  -> ()
	 */
	class UIGUI_WidgetBase* USheikMainMenu::GetLeaguesWidget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMainMenu.GetLeaguesWidget");
		
		USheikMainMenu_GetLeaguesWidget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMainMenu.EquipAccessories
	 * 		Flags  -> ()
	 */
	void USheikMainMenu::EquipAccessories()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMainMenu.EquipAccessories");
		
		USheikMainMenu_EquipAccessories_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikMainMenu.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikMainMenu::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikMainMenu");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.UpdatePersistentSquareRing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikWaypointInfo                          WaypointInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class UWidget*                                     RingWaypoint                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UMaterialInstanceDynamic*                    RingMaterial                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMap::UpdatePersistentSquareRing(const struct FSheikWaypointInfo& WaypointInfo, class UWidget* RingWaypoint, class UMaterialInstanceDynamic* RingMaterial)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.UpdatePersistentSquareRing");
		
		USheikMap_UpdatePersistentSquareRing_Params params {};
		params.WaypointInfo = WaypointInfo;
		params.RingWaypoint = RingWaypoint;
		params.RingMaterial = RingMaterial;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.UpdatePersistentCircleRing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikWaypointInfo                          WaypointInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class UWidget*                                     RingWaypoint                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UMaterialInstanceDynamic*                    RingMaterial                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMap::UpdatePersistentCircleRing(const struct FSheikWaypointInfo& WaypointInfo, class UWidget* RingWaypoint, class UMaterialInstanceDynamic* RingMaterial)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.UpdatePersistentCircleRing");
		
		USheikMap_UpdatePersistentCircleRing_Params params {};
		params.WaypointInfo = WaypointInfo;
		params.RingWaypoint = RingWaypoint;
		params.RingMaterial = RingMaterial;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.SetWaypoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikWaypointInfo                          WaypointInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikMap::SetWaypoint(const struct FSheikWaypointInfo& WaypointInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.SetWaypoint");
		
		USheikMap_SetWaypoint_Params params {};
		params.WaypointInfo = WaypointInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.SetForPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikPlayerStateCommon*                     SheikPlayerState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMap::SetForPlayer(class ASheikPlayerStateCommon* SheikPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.SetForPlayer");
		
		USheikMap_SetForPlayer_Params params {};
		params.SheikPlayerState = SheikPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.RemoveWaypoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPooledWaypoint                        WaypointWidget                                             (Parm, OutParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USheikMap::RemoveWaypoint(struct FSheikPooledWaypoint* WaypointWidget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.RemoveWaypoint");
		
		USheikMap_RemoveWaypoint_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (WaypointWidget != nullptr)
			*WaypointWidget = params.WaypointWidget;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HideLaunchCone
	 * 		Flags  -> ()
	 */
	void USheikMap::HideLaunchCone()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HideLaunchCone");
		
		USheikMap_HideLaunchCone_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HideDirectLine
	 * 		Flags  -> ()
	 */
	void USheikMap::HideDirectLine()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HideDirectLine");
		
		USheikMap_HideDirectLine_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HideAllDynamicWaypointWidgets
	 * 		Flags  -> ()
	 */
	void USheikMap::HideAllDynamicWaypointWidgets()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HideAllDynamicWaypointWidgets");
		
		USheikMap_HideAllDynamicWaypointWidgets_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnUpdateWaypoints_BP
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikWaypointInfo>                  Waypoints                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikMap::HandleOnUpdateWaypoints_BP(TArray<struct FSheikWaypointInfo> Waypoints)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnUpdateWaypoints_BP");
		
		USheikMap_HandleOnUpdateWaypoints_BP_Params params {};
		params.Waypoints = Waypoints;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnUpdateWaypoints
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikWaypointInfo>                  Waypoints                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikMap::HandleOnUpdateWaypoints(TArray<struct FSheikWaypointInfo> Waypoints)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnUpdateWaypoints");
		
		USheikMap_HandleOnUpdateWaypoints_Params params {};
		params.Waypoints = Waypoints;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnUpdateOwningPlayerInfo_BP
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikOwningPlayerInfo                      OwningPlayerInfo                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikMap::HandleOnUpdateOwningPlayerInfo_BP(const struct FSheikOwningPlayerInfo& OwningPlayerInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnUpdateOwningPlayerInfo_BP");
		
		USheikMap_HandleOnUpdateOwningPlayerInfo_BP_Params params {};
		params.OwningPlayerInfo = OwningPlayerInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnUpdateOwningPlayerInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikOwningPlayerInfo                      OwningPlayerInfo                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikMap::HandleOnUpdateOwningPlayerInfo(const struct FSheikOwningPlayerInfo& OwningPlayerInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnUpdateOwningPlayerInfo");
		
		USheikMap_HandleOnUpdateOwningPlayerInfo_Params params {};
		params.OwningPlayerInfo = OwningPlayerInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnUpdateMapLookupInfo_BP
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikMapLookupInfo                         LookupInfo                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void USheikMap::HandleOnUpdateMapLookupInfo_BP(const struct FSheikMapLookupInfo& LookupInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnUpdateMapLookupInfo_BP");
		
		USheikMap_HandleOnUpdateMapLookupInfo_BP_Params params {};
		params.LookupInfo = LookupInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnUpdateMapLookupInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikMapLookupInfo                         LookupInfo                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void USheikMap::HandleOnUpdateMapLookupInfo(const struct FSheikMapLookupInfo& LookupInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnUpdateMapLookupInfo");
		
		USheikMap_HandleOnUpdateMapLookupInfo_Params params {};
		params.LookupInfo = LookupInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnUpdateLaunchCone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikCannonConeData                        CannonConeData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikMap::HandleOnUpdateLaunchCone(const struct FSheikCannonConeData& CannonConeData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnUpdateLaunchCone");
		
		USheikMap_HandleOnUpdateLaunchCone_Params params {};
		params.CannonConeData = CannonConeData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnTeammateRescueAlert
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGPlayerState*                              TeammateState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsTeammateDowned                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMap::HandleOnTeammateRescueAlert(class AIGPlayerState* TeammateState, bool bIsTeammateDowned)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnTeammateRescueAlert");
		
		USheikMap_HandleOnTeammateRescueAlert_Params params {};
		params.TeammateState = TeammateState;
		params.bIsTeammateDowned = bIsTeammateDowned;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnTeammateInCombatAlert
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGPlayerState*                              TeammateState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsTeammateInCombat                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMap::HandleOnTeammateInCombatAlert(class AIGPlayerState* TeammateState, bool bIsTeammateInCombat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnTeammateInCombatAlert");
		
		USheikMap_HandleOnTeammateInCombatAlert_Params params {};
		params.TeammateState = TeammateState;
		params.bIsTeammateInCombat = bIsTeammateInCombat;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnTeammateHPAlert
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGPlayerState*                              TeammateState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsTeammateLowHealth                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMap::HandleOnTeammateHPAlert(class AIGPlayerState* TeammateState, bool bIsTeammateLowHealth)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnTeammateHPAlert");
		
		USheikMap_HandleOnTeammateHPAlert_Params params {};
		params.TeammateState = TeammateState;
		params.bIsTeammateLowHealth = bIsTeammateLowHealth;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnTeammateCannonLanded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGPlayerState*                              TeammateState                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMap::HandleOnTeammateCannonLanded(class AIGPlayerState* TeammateState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnTeammateCannonLanded");
		
		USheikMap_HandleOnTeammateCannonLanded_Params params {};
		params.TeammateState = TeammateState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnStopShowingFullMap_BP
	 * 		Flags  -> ()
	 */
	void USheikMap::HandleOnStopShowingFullMap_BP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnStopShowingFullMap_BP");
		
		USheikMap_HandleOnStopShowingFullMap_BP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnStopShowingFullMap
	 * 		Flags  -> ()
	 */
	void USheikMap::HandleOnStopShowingFullMap()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnStopShowingFullMap");
		
		USheikMap_HandleOnStopShowingFullMap_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnShowPlayZoneDirectPath
	 * 		Flags  -> ()
	 */
	void USheikMap::HandleOnShowPlayZoneDirectPath()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnShowPlayZoneDirectPath");
		
		USheikMap_HandleOnShowPlayZoneDirectPath_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnShowFullMap_BP
	 * 		Flags  -> ()
	 */
	void USheikMap::HandleOnShowFullMap_BP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnShowFullMap_BP");
		
		USheikMap_HandleOnShowFullMap_BP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnShowFullMap
	 * 		Flags  -> ()
	 */
	void USheikMap::HandleOnShowFullMap()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnShowFullMap");
		
		USheikMap_HandleOnShowFullMap_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnMapTextureLoaded
	 * 		Flags  -> ()
	 */
	void USheikMap::HandleOnMapTextureLoaded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnMapTextureLoaded");
		
		USheikMap_HandleOnMapTextureLoaded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.HandleOnHidePlayZoneDirectPath
	 * 		Flags  -> ()
	 */
	void USheikMap::HandleOnHidePlayZoneDirectPath()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.HandleOnHidePlayZoneDirectPath");
		
		USheikMap_HandleOnHidePlayZoneDirectPath_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.DrawDirectLineToPlayZone
	 * 		Flags  -> ()
	 */
	void USheikMap::DrawDirectLineToPlayZone()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.DrawDirectLineToPlayZone");
		
		USheikMap_DrawDirectLineToPlayZone_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.CreateAndPlaceWaypoint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      WidgetClass                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikWaypointInfo                          WaypointInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FSheikWaypointMarkerInfo                    WaypointMarkerInfo                                         (Parm, NativeAccessSpecifierPublic)
	 */
	struct FSheikPooledWaypoint USheikMap::CreateAndPlaceWaypoint(class UClass* WidgetClass, const struct FSheikWaypointInfo& WaypointInfo, const struct FSheikWaypointMarkerInfo& WaypointMarkerInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.CreateAndPlaceWaypoint");
		
		USheikMap_CreateAndPlaceWaypoint_Params params {};
		params.WidgetClass = WidgetClass;
		params.WaypointInfo = WaypointInfo;
		params.WaypointMarkerInfo = WaypointMarkerInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMap.ClearWaypoints
	 * 		Flags  -> ()
	 */
	void USheikMap::ClearWaypoints()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMap.ClearWaypoints");
		
		USheikMap_ClearWaypoints_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikMap.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikMap::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikMap");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikMapStateTimelineData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikMapStateTimelineData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikMapStateTimelineData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikFinalRingDynamicAdjustmentData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikFinalRingDynamicAdjustmentData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikFinalRingDynamicAdjustmentData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMapStateManager.GetStartingRingLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     InLocation                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikMapStateManager::GetStartingRingLocation(struct FVector* InLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMapStateManager.GetStartingRingLocation");
		
		USheikMapStateManager_GetStartingRingLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InLocation != nullptr)
			*InLocation = params.InLocation;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMapStateManager.GetRingsSurvived
	 * 		Flags  -> ()
	 */
	int32_t USheikMapStateManager::GetRingsSurvived()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMapStateManager.GetRingsSurvived");
		
		USheikMapStateManager_GetRingsSurvived_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMapStateManager.GetFinalRingLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     InLocation                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikMapStateManager::GetFinalRingLocation(struct FVector* InLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMapStateManager.GetFinalRingLocation");
		
		USheikMapStateManager_GetFinalRingLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InLocation != nullptr)
			*InLocation = params.InLocation;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikMapStateManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikMapStateManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikMapStateManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikMapWaypoint.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikMapWaypoint::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikMapWaypoint");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.UpdateHotfixesToVersion
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            DesiredVersion                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMatchmakingCallbacks::UpdateHotfixesToVersion(int32_t DesiredVersion)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.UpdateHotfixesToVersion");
		
		USheikMatchmakingCallbacks_UpdateHotfixesToVersion_Params params {};
		params.DesiredVersion = DesiredVersion;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.UpdateHotfixes
	 * 		Flags  -> ()
	 */
	void USheikMatchmakingCallbacks::UpdateHotfixes()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.UpdateHotfixes");
		
		USheikMatchmakingCallbacks_UpdateHotfixes_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.StartMatchmaking
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      MatchConfig                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bShouldCreateRestrictedGame                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      RestrictedSessionGameCode                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            TimeToRestrictGameSession                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               RestrictedSessionOpenToPublic                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool USheikMatchmakingCallbacks::StartMatchmaking(const class FString& MatchConfig, bool bShouldCreateRestrictedGame, const class FString& RestrictedSessionGameCode, int32_t TimeToRestrictGameSession, bool RestrictedSessionOpenToPublic, struct FSheikError* Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.StartMatchmaking");
		
		USheikMatchmakingCallbacks_StartMatchmaking_Params params {};
		params.MatchConfig = MatchConfig;
		params.bShouldCreateRestrictedGame = bShouldCreateRestrictedGame;
		params.RestrictedSessionGameCode = RestrictedSessionGameCode;
		params.TimeToRestrictGameSession = TimeToRestrictGameSession;
		params.RestrictedSessionOpenToPublic = RestrictedSessionOpenToPublic;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Error != nullptr)
			*Error = params.Error;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.RefreshMatchmakingConfigsList
	 * 		Flags  -> ()
	 */
	void USheikMatchmakingCallbacks::RefreshMatchmakingConfigsList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.RefreshMatchmakingConfigsList");
		
		USheikMatchmakingCallbacks_RefreshMatchmakingConfigsList_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikMatchmakingCallbacks.OnRestrictedMatchFound__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      InviteCode                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMatchmakingCallbacks::OnRestrictedMatchFound__DelegateSignature(const class FString& InviteCode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikMatchmakingCallbacks.OnRestrictedMatchFound__DelegateSignature");
		
		USheikMatchmakingCallbacks_OnRestrictedMatchFound__DelegateSignature_Params params {};
		params.InviteCode = InviteCode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikMatchmakingCallbacks.OnPlayerJoinsTeam__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsLeader                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMatchmakingCallbacks::OnPlayerJoinsTeam__DelegateSignature(bool bIsLeader)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikMatchmakingCallbacks.OnPlayerJoinsTeam__DelegateSignature");
		
		USheikMatchmakingCallbacks_OnPlayerJoinsTeam__DelegateSignature_Params params {};
		params.bIsLeader = bIsLeader;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikMatchmakingCallbacks.OnMatchmakingStatusChanged__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EMatchmakingStatus                                 NewStatus                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMatchmakingCallbacks::OnMatchmakingStatusChanged__DelegateSignature(EMatchmakingStatus NewStatus)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikMatchmakingCallbacks.OnMatchmakingStatusChanged__DelegateSignature");
		
		USheikMatchmakingCallbacks_OnMatchmakingStatusChanged__DelegateSignature_Params params {};
		params.NewStatus = NewStatus;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikMatchmakingCallbacks.OnMatchmakingComplete__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikMatchmakingCallbacks::OnMatchmakingComplete__DelegateSignature(bool bSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikMatchmakingCallbacks.OnMatchmakingComplete__DelegateSignature");
		
		USheikMatchmakingCallbacks_OnMatchmakingComplete__DelegateSignature_Params params {};
		params.bSuccessful = bSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikMatchmakingCallbacks.OnLeftMatchmaking__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikMatchmakingCallbacks::OnLeftMatchmaking__DelegateSignature(bool bSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikMatchmakingCallbacks.OnLeftMatchmaking__DelegateSignature");
		
		USheikMatchmakingCallbacks_OnLeftMatchmaking__DelegateSignature_Params params {};
		params.bSuccessful = bSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikMatchmakingCallbacks.OnJoinedMatchmaking__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      MatchConfig                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMatchmakingCallbacks::OnJoinedMatchmaking__DelegateSignature(const class FString& MatchConfig)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikMatchmakingCallbacks.OnJoinedMatchmaking__DelegateSignature");
		
		USheikMatchmakingCallbacks_OnJoinedMatchmaking__DelegateSignature_Params params {};
		params.MatchConfig = MatchConfig;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.OnHotfixSystemComplete
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EUpdateCompletionStatus                            CompletionStatus                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMatchmakingCallbacks::OnHotfixSystemComplete(EUpdateCompletionStatus CompletionStatus)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.OnHotfixSystemComplete");
		
		USheikMatchmakingCallbacks_OnHotfixSystemComplete_Params params {};
		params.CompletionStatus = CompletionStatus;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikMatchmakingCallbacks.OnHotfixingComplete__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EUpdateCompletionStatus                            Result                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikMatchmakingCallbacks::OnHotfixingComplete__DelegateSignature(bool bSuccessful, EUpdateCompletionStatus Result, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikMatchmakingCallbacks.OnHotfixingComplete__DelegateSignature");
		
		USheikMatchmakingCallbacks_OnHotfixingComplete__DelegateSignature_Params params {};
		params.bSuccessful = bSuccessful;
		params.Result = Result;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.JoinFoundMatchmakingServer
	 * 		Flags  -> ()
	 */
	void USheikMatchmakingCallbacks::JoinFoundMatchmakingServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.JoinFoundMatchmakingServer");
		
		USheikMatchmakingCallbacks_JoinFoundMatchmakingServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.IsPlayerTeamLeader
	 * 		Flags  -> ()
	 */
	bool USheikMatchmakingCallbacks::IsPlayerTeamLeader()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.IsPlayerTeamLeader");
		
		USheikMatchmakingCallbacks_IsPlayerTeamLeader_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.IsPlayerInTeam
	 * 		Flags  -> ()
	 */
	bool USheikMatchmakingCallbacks::IsPlayerInTeam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.IsPlayerInTeam");
		
		USheikMatchmakingCallbacks_IsPlayerInTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.IsMatchConfigPlayground
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FMatchmakingConfiguration                   InConfig                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikMatchmakingCallbacks::IsMatchConfigPlayground(const struct FMatchmakingConfiguration& InConfig)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.IsMatchConfigPlayground");
		
		USheikMatchmakingCallbacks_IsMatchConfigPlayground_Params params {};
		params.InConfig = InConfig;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.IsMatchConfigForTeams
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FMatchmakingConfiguration                   InConfig                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikMatchmakingCallbacks::IsMatchConfigForTeams(const struct FMatchmakingConfiguration& InConfig)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.IsMatchConfigForTeams");
		
		USheikMatchmakingCallbacks_IsMatchConfigForTeams_Params params {};
		params.InConfig = InConfig;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.IsMatchConfigExcludedFromFiltering
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FMatchmakingConfiguration                   InConfig                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikMatchmakingCallbacks::IsMatchConfigExcludedFromFiltering(const struct FMatchmakingConfiguration& InConfig)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.IsMatchConfigExcludedFromFiltering");
		
		USheikMatchmakingCallbacks_IsMatchConfigExcludedFromFiltering_Params params {};
		params.InConfig = InConfig;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.IsInMatchmaking
	 * 		Flags  -> ()
	 */
	bool USheikMatchmakingCallbacks::IsInMatchmaking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.IsInMatchmaking");
		
		USheikMatchmakingCallbacks_IsInMatchmaking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.GetUpdatedCurrentMatchConfig
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      OutConfig                                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMatchmakingCallbacks::GetUpdatedCurrentMatchConfig(class FString* OutConfig)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.GetUpdatedCurrentMatchConfig");
		
		USheikMatchmakingCallbacks_GetUpdatedCurrentMatchConfig_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutConfig != nullptr)
			*OutConfig = params.OutConfig;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.GetUnfilteredListOfMatchmakingConfigs
	 * 		Flags  -> ()
	 */
	TArray<struct FMatchmakingConfiguration> USheikMatchmakingCallbacks::GetUnfilteredListOfMatchmakingConfigs()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.GetUnfilteredListOfMatchmakingConfigs");
		
		USheikMatchmakingCallbacks_GetUnfilteredListOfMatchmakingConfigs_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.GetTimeElapsed
	 * 		Flags  -> ()
	 */
	struct FTimespan USheikMatchmakingCallbacks::GetTimeElapsed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.GetTimeElapsed");
		
		USheikMatchmakingCallbacks_GetTimeElapsed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.GetTextForMatchmakingStatus
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EMatchmakingStatus                                 MatchmakingStatus                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText USheikMatchmakingCallbacks::GetTextForMatchmakingStatus(EMatchmakingStatus MatchmakingStatus)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.GetTextForMatchmakingStatus");
		
		USheikMatchmakingCallbacks_GetTextForMatchmakingStatus_Params params {};
		params.MatchmakingStatus = MatchmakingStatus;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.GetRestrictedMatchJoinCode
	 * 		Flags  -> ()
	 */
	class FString USheikMatchmakingCallbacks::GetRestrictedMatchJoinCode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.GetRestrictedMatchJoinCode");
		
		USheikMatchmakingCallbacks_GetRestrictedMatchJoinCode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.GetMatchTypeFromConfig
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FMatchmakingConfiguration                   InConfig                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	EMatchConfigType USheikMatchmakingCallbacks::GetMatchTypeFromConfig(const struct FMatchmakingConfiguration& InConfig)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.GetMatchTypeFromConfig");
		
		USheikMatchmakingCallbacks_GetMatchTypeFromConfig_Params params {};
		params.InConfig = InConfig;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.GetMatchmakingStatus
	 * 		Flags  -> ()
	 */
	EMatchmakingStatus USheikMatchmakingCallbacks::GetMatchmakingStatus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.GetMatchmakingStatus");
		
		USheikMatchmakingCallbacks_GetMatchmakingStatus_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.GetMatchConfiguration
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      MatchConfigName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FMatchmakingConfiguration                   MatchConfig                                                (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	void USheikMatchmakingCallbacks::GetMatchConfiguration(const class FString& MatchConfigName, struct FMatchmakingConfiguration* MatchConfig)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.GetMatchConfiguration");
		
		USheikMatchmakingCallbacks_GetMatchConfiguration_Params params {};
		params.MatchConfigName = MatchConfigName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (MatchConfig != nullptr)
			*MatchConfig = params.MatchConfig;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.GetLocalizedStringsFromDisplayName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      DisplayName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        Title                                                      (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		class FText                                        SubTitle                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	void USheikMatchmakingCallbacks::GetLocalizedStringsFromDisplayName(const class FString& DisplayName, class FText* Title, class FText* SubTitle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.GetLocalizedStringsFromDisplayName");
		
		USheikMatchmakingCallbacks_GetLocalizedStringsFromDisplayName_Params params {};
		params.DisplayName = DisplayName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Title != nullptr)
			*Title = params.Title;
		if (SubTitle != nullptr)
			*SubTitle = params.SubTitle;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.GetListOfMatchmakingConfigs
	 * 		Flags  -> ()
	 */
	TArray<struct FMatchmakingConfiguration> USheikMatchmakingCallbacks::GetListOfMatchmakingConfigs()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.GetListOfMatchmakingConfigs");
		
		USheikMatchmakingCallbacks_GetListOfMatchmakingConfigs_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.GetDummyDevServerMatchConfig
	 * 		Flags  -> ()
	 */
	struct FMatchmakingConfiguration USheikMatchmakingCallbacks::GetDummyDevServerMatchConfig()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.GetDummyDevServerMatchConfig");
		
		USheikMatchmakingCallbacks_GetDummyDevServerMatchConfig_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.GetCurrentMatchConfig
	 * 		Flags  -> ()
	 */
	class FString USheikMatchmakingCallbacks::GetCurrentMatchConfig()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.GetCurrentMatchConfig");
		
		USheikMatchmakingCallbacks_GetCurrentMatchConfig_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.Debug_EndMatchmaking
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bMatchFound                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMatchmakingCallbacks::Debug_EndMatchmaking(bool bMatchFound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.Debug_EndMatchmaking");
		
		USheikMatchmakingCallbacks_Debug_EndMatchmaking_Params params {};
		params.bMatchFound = bMatchFound;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.CleanupOldSessions
	 * 		Flags  -> ()
	 */
	void USheikMatchmakingCallbacks::CleanupOldSessions()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.CleanupOldSessions");
		
		USheikMatchmakingCallbacks_CleanupOldSessions_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMatchmakingCallbacks.CancelMatchmaking
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikError                                 Error                                                      (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool USheikMatchmakingCallbacks::CancelMatchmaking(struct FSheikError* Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMatchmakingCallbacks.CancelMatchmaking");
		
		USheikMatchmakingCallbacks_CancelMatchmaking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Error != nullptr)
			*Error = params.Error;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikMatchmakingCallbacks.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikMatchmakingCallbacks::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikMatchmakingCallbacks");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikMatchRewardDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikMatchRewardDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikMatchRewardDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinigame.UpdateMinigame_BP
	 * 		Flags  -> ()
	 */
	void USheikMinigame::UpdateMinigame_BP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinigame.UpdateMinigame_BP");
		
		USheikMinigame_UpdateMinigame_BP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinigame.StartMinigame_BP
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikMinigameInfo                          MinigameSpecs                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikMinigame::StartMinigame_BP(const struct FSheikMinigameInfo& MinigameSpecs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinigame.StartMinigame_BP");
		
		USheikMinigame_StartMinigame_BP_Params params {};
		params.MinigameSpecs = MinigameSpecs;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinigame.StartMinigame
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikMinigameInfo                          MinigameSpecs                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikMinigame::StartMinigame(const struct FSheikMinigameInfo& MinigameSpecs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinigame.StartMinigame");
		
		USheikMinigame_StartMinigame_Params params {};
		params.MinigameSpecs = MinigameSpecs;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinigame.ProcessInputOnMinigame
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               AutoFail                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinigame::ProcessInputOnMinigame(bool AutoFail)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinigame.ProcessInputOnMinigame");
		
		USheikMinigame_ProcessInputOnMinigame_Params params {};
		params.AutoFail = AutoFail;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinigame.IsCursorInTarget
	 * 		Flags  -> ()
	 */
	bool USheikMinigame::IsCursorInTarget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinigame.IsCursorInTarget");
		
		USheikMinigame_IsCursorInTarget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinigame.IsCursorInGradient
	 * 		Flags  -> ()
	 */
	bool USheikMinigame::IsCursorInGradient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinigame.IsCursorInGradient");
		
		USheikMinigame_IsCursorInGradient_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinigame.EndMinigame_BP
	 * 		Flags  -> ()
	 */
	void USheikMinigame::EndMinigame_BP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinigame.EndMinigame_BP");
		
		USheikMinigame_EndMinigame_BP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinigame.EndMinigame
	 * 		Flags  -> ()
	 */
	void USheikMinigame::EndMinigame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinigame.EndMinigame");
		
		USheikMinigame_EndMinigame_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinigame.ContinueGame_BP
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               ResetCursorPosition                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinigame::ContinueGame_BP(bool ResetCursorPosition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinigame.ContinueGame_BP");
		
		USheikMinigame_ContinueGame_BP_Params params {};
		params.ResetCursorPosition = ResetCursorPosition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinigame.ContinueGame
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               ResetCursorPosition                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinigame::ContinueGame(bool ResetCursorPosition)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinigame.ContinueGame");
		
		USheikMinigame_ContinueGame_Params params {};
		params.ResetCursorPosition = ResetCursorPosition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinigame.AutoSucceedMinigame
	 * 		Flags  -> ()
	 */
	void USheikMinigame::AutoSucceedMinigame()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinigame.AutoSucceedMinigame");
		
		USheikMinigame_AutoSucceedMinigame_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikMinigame.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikMinigame::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikMinigame");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikMinimap.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikMinimap::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikMinimap");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.UpdateTeammateRescueAlert
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsTeammateDowned                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinimapIcon::UpdateTeammateRescueAlert(bool bIsTeammateDowned)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.UpdateTeammateRescueAlert");
		
		USheikMinimapIcon_UpdateTeammateRescueAlert_Params params {};
		params.bIsTeammateDowned = bIsTeammateDowned;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.UpdateTeammateInCombatAlert
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsTeammateInCombat                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinimapIcon::UpdateTeammateInCombatAlert(bool bIsTeammateInCombat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.UpdateTeammateInCombatAlert");
		
		USheikMinimapIcon_UpdateTeammateInCombatAlert_Params params {};
		params.bIsTeammateInCombat = bIsTeammateInCombat;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.UpdateTeammateHPAlert
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsTeammateLowHealth                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinimapIcon::UpdateTeammateHPAlert(bool bIsTeammateLowHealth)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.UpdateTeammateHPAlert");
		
		USheikMinimapIcon_UpdateTeammateHPAlert_Params params {};
		params.bIsTeammateLowHealth = bIsTeammateLowHealth;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.UpdateTeammateHeightThreshold
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikWaypointVerticalDirection                    TeammateVerticalDirection                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinimapIcon::UpdateTeammateHeightThreshold(ESheikWaypointVerticalDirection TeammateVerticalDirection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.UpdateTeammateHeightThreshold");
		
		USheikMinimapIcon_UpdateTeammateHeightThreshold_Params params {};
		params.TeammateVerticalDirection = TeammateVerticalDirection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.SetTopLeft
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinimapIcon::SetTopLeft(const struct FVector2D& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.SetTopLeft");
		
		USheikMinimapIcon_SetTopLeft_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.SetTint
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FLinearColor                                NewTint                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinimapIcon::SetTint(const struct FLinearColor& NewTint)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.SetTint");
		
		USheikMinimapIcon_SetTint_Params params {};
		params.NewTint = NewTint;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.SetSize
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   NewSize                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinimapIcon::SetSize(const struct FVector2D& NewSize)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.SetSize");
		
		USheikMinimapIcon_SetSize_Params params {};
		params.NewSize = NewSize;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.SetSineOfNegativeRotation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinimapIcon::SetSineOfNegativeRotation(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.SetSineOfNegativeRotation");
		
		USheikMinimapIcon_SetSineOfNegativeRotation_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.SetOpacity
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewOpacity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinimapIcon::SetOpacity(float NewOpacity)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.SetOpacity");
		
		USheikMinimapIcon_SetOpacity_Params params {};
		params.NewOpacity = NewOpacity;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.SetMaskDimensions
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Left                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Top                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Width                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Height                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinimapIcon::SetMaskDimensions(float Left, float Top, float Width, float Height)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.SetMaskDimensions");
		
		USheikMinimapIcon_SetMaskDimensions_Params params {};
		params.Left = Left;
		params.Top = Top;
		params.Width = Width;
		params.Height = Height;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.SetImage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UTexture2D*                                  NewTexture                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinimapIcon::SetImage(class UTexture2D* NewTexture)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.SetImage");
		
		USheikMinimapIcon_SetImage_Params params {};
		params.NewTexture = NewTexture;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.SetCosineOfNegativeRotation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinimapIcon::SetCosineOfNegativeRotation(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.SetCosineOfNegativeRotation");
		
		USheikMinimapIcon_SetCosineOfNegativeRotation_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.SetCenter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinimapIcon::SetCenter(const struct FVector2D& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.SetCenter");
		
		USheikMinimapIcon_SetCenter_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.SetBottomRight
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinimapIcon::SetBottomRight(const struct FVector2D& Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.SetBottomRight");
		
		USheikMinimapIcon_SetBottomRight_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.SetAngle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Angle                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinimapIcon::SetAngle(float Angle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.SetAngle");
		
		USheikMinimapIcon_SetAngle_Params params {};
		params.Angle = Angle;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.PlayPingAnimation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsOutOfBounds                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikMinimapIcon::PlayPingAnimation(bool bIsOutOfBounds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.PlayPingAnimation");
		
		USheikMinimapIcon_PlayPingAnimation_Params params {};
		params.bIsOutOfBounds = bIsOutOfBounds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.OnTeammateLanded
	 * 		Flags  -> ()
	 */
	void USheikMinimapIcon::OnTeammateLanded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.OnTeammateLanded");
		
		USheikMinimapIcon_OnTeammateLanded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikMinimapIcon.HandleTeamInfoUpdated
	 * 		Flags  -> ()
	 */
	void USheikMinimapIcon::HandleTeamInfoUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikMinimapIcon.HandleTeamInfoUpdated");
		
		USheikMinimapIcon_HandleTeamInfoUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikMinimapIcon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikMinimapIcon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikMinimapIcon");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikNavigationInvokerComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikNavigationInvokerComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikNavigationInvokerComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikNavInvokerActorBase.UpdateGenerationShape
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EInvokerShape                                      NewShape                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikNavInvokerActorBase::UpdateGenerationShape(EInvokerShape NewShape)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikNavInvokerActorBase.UpdateGenerationShape");
		
		ASheikNavInvokerActorBase_UpdateGenerationShape_Params params {};
		params.NewShape = NewShape;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikNavInvokerActorBase.UpdateGenerationRadius
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewGenerationRadius                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikNavInvokerActorBase::UpdateGenerationRadius(float NewGenerationRadius)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikNavInvokerActorBase.UpdateGenerationRadius");
		
		ASheikNavInvokerActorBase_UpdateGenerationRadius_Params params {};
		params.NewGenerationRadius = NewGenerationRadius;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikNavInvokerActorBase.UpdateBoxGenerationExtents
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Width                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Height                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikNavInvokerActorBase::UpdateBoxGenerationExtents(float Width, float Height)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikNavInvokerActorBase.UpdateBoxGenerationExtents");
		
		ASheikNavInvokerActorBase_UpdateBoxGenerationExtents_Params params {};
		params.Width = Width;
		params.Height = Height;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikNavInvokerActorBase.ShutdownInvoker
	 * 		Flags  -> ()
	 */
	void ASheikNavInvokerActorBase::ShutdownInvoker()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikNavInvokerActorBase.ShutdownInvoker");
		
		ASheikNavInvokerActorBase_ShutdownInvoker_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikNavInvokerActorBase.RegisterInvoker
	 * 		Flags  -> ()
	 */
	void ASheikNavInvokerActorBase::RegisterInvoker()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikNavInvokerActorBase.RegisterInvoker");
		
		ASheikNavInvokerActorBase_RegisterInvoker_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikNavInvokerActorBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikNavInvokerActorBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikNavInvokerActorBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikNoticesManager.GetProcessedNotices
	 * 		Flags  -> ()
	 */
	TArray<struct FNoticesUIData> USheikNoticesManager::GetProcessedNotices()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikNoticesManager.GetProcessedNotices");
		
		USheikNoticesManager_GetProcessedNotices_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikNoticesManager.CanShowNotices
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            HoursBetweenShowingPopupNotices                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FIGTimeOfDay                                NoticesPopupResetTime                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool USheikNoticesManager::CanShowNotices(int32_t HoursBetweenShowingPopupNotices, const struct FIGTimeOfDay& NoticesPopupResetTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikNoticesManager.CanShowNotices");
		
		USheikNoticesManager_CanShowNotices_Params params {};
		params.HoursBetweenShowingPopupNotices = HoursBetweenShowingPopupNotices;
		params.NoticesPopupResetTime = NoticesPopupResetTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikNoticesManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikNoticesManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikNoticesManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikNotificationsManager.RemoveNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikFrontendNotification                  NotificationToRemove                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikNotificationsManager::RemoveNotification(const struct FSheikFrontendNotification& NotificationToRemove)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikNotificationsManager.RemoveNotification");
		
		USheikNotificationsManager_RemoveNotification_Params params {};
		params.NotificationToRemove = NotificationToRemove;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikNotificationsManager.QueueNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikFrontendNotification                  Notification                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikNotificationsManager::QueueNotification(const struct FSheikFrontendNotification& Notification)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikNotificationsManager.QueueNotification");
		
		USheikNotificationsManager_QueueNotification_Params params {};
		params.Notification = Notification;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikNotificationsManager.OnNotificationsUpdated__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikNotificationsManager::OnNotificationsUpdated__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikNotificationsManager.OnNotificationsUpdated__DelegateSignature");
		
		USheikNotificationsManager_OnNotificationsUpdated__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikNotificationsManager.OnNotificationExpired__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikFrontendNotification                  Notification                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikNotificationsManager::OnNotificationExpired__DelegateSignature(const struct FSheikFrontendNotification& Notification)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikNotificationsManager.OnNotificationExpired__DelegateSignature");
		
		USheikNotificationsManager_OnNotificationExpired__DelegateSignature_Params params {};
		params.Notification = Notification;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikNotificationsManager.HasNotifications
	 * 		Flags  -> ()
	 */
	bool USheikNotificationsManager::HasNotifications()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikNotificationsManager.HasNotifications");
		
		USheikNotificationsManager_HasNotifications_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikNotificationsManager.GetNotificationsCount
	 * 		Flags  -> ()
	 */
	int32_t USheikNotificationsManager::GetNotificationsCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikNotificationsManager.GetNotificationsCount");
		
		USheikNotificationsManager_GetNotificationsCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikNotificationsManager.GetNotifications
	 * 		Flags  -> ()
	 */
	TArray<struct FSheikFrontendNotification> USheikNotificationsManager::GetNotifications()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikNotificationsManager.GetNotifications");
		
		USheikNotificationsManager_GetNotifications_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikNotificationsManager.GetNotification
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikFrontendNotification                  Notification                                               (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bValid                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikNotificationsManager::GetNotification(struct FSheikFrontendNotification* Notification, bool* bValid)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikNotificationsManager.GetNotification");
		
		USheikNotificationsManager_GetNotification_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Notification != nullptr)
			*Notification = params.Notification;
		if (bValid != nullptr)
			*bValid = params.bValid;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikNotificationsManager.AcceptNotificationAction
	 * 		Flags  -> ()
	 */
	void USheikNotificationsManager::AcceptNotificationAction()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikNotificationsManager.AcceptNotificationAction");
		
		USheikNotificationsManager_AcceptNotificationAction_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikNotificationsManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikNotificationsManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikNotificationsManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikOnlineAsyncTaskManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikOnlineAsyncTaskManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikOnlineAsyncTaskManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikOnlineGameMatchReporter.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikOnlineGameMatchReporter::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikOnlineGameMatchReporter");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikOnlineSession.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikOnlineSession::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikOnlineSession");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikOpponentDownedTimer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikOpponentDownedTimer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikOpponentDownedTimer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.UpdateSkillData
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::UpdateSkillData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.UpdateSkillData");
		
		USheikPartyManager_UpdateSkillData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.UpdatePlayerAttributeData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikPlatformService                              PlatformService                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CloutLevel                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            HotfixVersion                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PlayerSkill                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            CrossPlaySettingEnabled                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::UpdatePlayerAttributeData(const class FString& PlayerName, ESheikPlatformService PlatformService, int32_t CloutLevel, int32_t HotfixVersion, int32_t PlayerSkill, int32_t CrossPlaySettingEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.UpdatePlayerAttributeData");
		
		USheikPartyManager_UpdatePlayerAttributeData_Params params {};
		params.PlayerName = PlayerName;
		params.PlatformService = PlatformService;
		params.CloutLevel = CloutLevel;
		params.HotfixVersion = HotfixVersion;
		params.PlayerSkill = PlayerSkill;
		params.CrossPlaySettingEnabled = CrossPlaySettingEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.UpdateHotfixVersionToParty
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::UpdateHotfixVersionToParty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.UpdateHotfixVersionToParty");
		
		USheikPartyManager_UpdateHotfixVersionToParty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.UpdateCrossPlayEnabledSetting
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::UpdateCrossPlayEnabledSetting()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.UpdateCrossPlayEnabledSetting");
		
		USheikPartyManager_UpdateCrossPlayEnabledSetting_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.UpdateAvailableAudioDevices
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::UpdateAvailableAudioDevices()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.UpdateAvailableAudioDevices");
		
		USheikPartyManager_UpdateAvailableAudioDevices_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.ToggleVoiceOutputMute
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::ToggleVoiceOutputMute()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.ToggleVoiceOutputMute");
		
		USheikPartyManager_ToggleVoiceOutputMute_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.ToggleVoiceInputMute
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::ToggleVoiceInputMute()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.ToggleVoiceInputMute");
		
		USheikPartyManager_ToggleVoiceInputMute_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.ToggleVoiceChatPushToTalkMode
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::ToggleVoiceChatPushToTalkMode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.ToggleVoiceChatPushToTalkMode");
		
		USheikPartyManager_ToggleVoiceChatPushToTalkMode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.ToggleVoiceChatPushToTalk
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bCanTalk                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::ToggleVoiceChatPushToTalk(bool bCanTalk)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.ToggleVoiceChatPushToTalk");
		
		USheikPartyManager_ToggleVoiceChatPushToTalk_Params params {};
		params.bCanTalk = bCanTalk;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.ToggleVoiceChatMutedForPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::ToggleVoiceChatMutedForPlayer(const class FString& PlayerName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.ToggleVoiceChatMutedForPlayer");
		
		USheikPartyManager_ToggleVoiceChatMutedForPlayer_Params params {};
		params.PlayerName = PlayerName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.ToggleVoiceChatMuted
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::ToggleVoiceChatMuted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.ToggleVoiceChatMuted");
		
		USheikPartyManager_ToggleVoiceChatMuted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.ToggleVoiceChatEnabled
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::ToggleVoiceChatEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.ToggleVoiceChatEnabled");
		
		USheikPartyManager_ToggleVoiceChatEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.ToggleVoiceChatDeafened
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::ToggleVoiceChatDeafened()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.ToggleVoiceChatDeafened");
		
		USheikPartyManager_ToggleVoiceChatDeafened_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.SyncPartyToLeaderHotfixVersion
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::SyncPartyToLeaderHotfixVersion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.SyncPartyToLeaderHotfixVersion");
		
		USheikPartyManager_SyncPartyToLeaderHotfixVersion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.ShowPlayerReviewDialog
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      MatchID                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              OnCompleteDelegate                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::ShowPlayerReviewDialog(const class FString& MatchID, const class FScriptDelegate& OnCompleteDelegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.ShowPlayerReviewDialog");
		
		USheikPartyManager_ShowPlayerReviewDialog_Params params {};
		params.MatchID = MatchID;
		params.OnCompleteDelegate = OnCompleteDelegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.ShowChatRestrictionDialogue
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::ShowChatRestrictionDialogue()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.ShowChatRestrictionDialogue");
		
		USheikPartyManager_ShowChatRestrictionDialogue_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.SetVoiceOutputVolume
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Volume                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::SetVoiceOutputVolume(float Volume)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.SetVoiceOutputVolume");
		
		USheikPartyManager_SetVoiceOutputVolume_Params params {};
		params.Volume = Volume;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.SetVoiceChatPushToTalkMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsPushToTalk                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::SetVoiceChatPushToTalkMode(bool bIsPushToTalk)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.SetVoiceChatPushToTalkMode");
		
		USheikPartyManager_SetVoiceChatPushToTalkMode_Params params {};
		params.bIsPushToTalk = bIsPushToTalk;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.SetVoiceChatMuteStatusForPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsMuted                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::SetVoiceChatMuteStatusForPlayer(const class FString& PlayerName, bool bIsMuted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.SetVoiceChatMuteStatusForPlayer");
		
		USheikPartyManager_SetVoiceChatMuteStatusForPlayer_Params params {};
		params.PlayerName = PlayerName;
		params.bIsMuted = bIsMuted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.SetVoiceChatEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsEnabled                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::SetVoiceChatEnabled(bool bIsEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.SetVoiceChatEnabled");
		
		USheikPartyManager_SetVoiceChatEnabled_Params params {};
		params.bIsEnabled = bIsEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.SetVoiceChatActiveParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikVOIPPartyType                                VoipPartyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::SetVoiceChatActiveParty(ESheikVOIPPartyType VoipPartyType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.SetVoiceChatActiveParty");
		
		USheikPartyManager_SetVoiceChatActiveParty_Params params {};
		params.VoipPartyType = VoipPartyType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.SetUsingMultiplayerFeatures
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bUsingMP                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsUsingCrossPlay                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::SetUsingMultiplayerFeatures(bool bUsingMP, bool bIsUsingCrossPlay)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.SetUsingMultiplayerFeatures");
		
		USheikPartyManager_SetUsingMultiplayerFeatures_Params params {};
		params.bUsingMP = bUsingMP;
		params.bIsUsingCrossPlay = bIsUsingCrossPlay;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.SetAudioOutputDevice
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      OutputDeviceId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::SetAudioOutputDevice(const class FString& OutputDeviceId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.SetAudioOutputDevice");
		
		USheikPartyManager_SetAudioOutputDevice_Params params {};
		params.OutputDeviceId = OutputDeviceId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.SetAudioInputDevice
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      InputDeviceId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::SetAudioInputDevice(const class FString& InputDeviceId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.SetAudioInputDevice");
		
		USheikPartyManager_SetAudioInputDevice_Params params {};
		params.InputDeviceId = InputDeviceId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.SetAttemptingMatchmaking
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               InAttemptingMatchmaking                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::SetAttemptingMatchmaking(bool InAttemptingMatchmaking)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.SetAttemptingMatchmaking");
		
		USheikPartyManager_SetAttemptingMatchmaking_Params params {};
		params.InAttemptingMatchmaking = InAttemptingMatchmaking;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.SendMessageToParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Message                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::SendMessageToParty(const class FString& Message)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.SendMessageToParty");
		
		USheikPartyManager_SendMessageToParty_Params params {};
		params.Message = Message;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.SendCozmoInviteResponse
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPartyInvitation                            PartyInvitation                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bAcceptedInvite                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::SendCozmoInviteResponse(const struct FPartyInvitation& PartyInvitation, bool bAcceptedInvite)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.SendCozmoInviteResponse");
		
		USheikPartyManager_SendCozmoInviteResponse_Params params {};
		params.PartyInvitation = PartyInvitation;
		params.bAcceptedInvite = bAcceptedInvite;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.ReportFailureToSyncToPartyHotfixVersion
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::ReportFailureToSyncToPartyHotfixVersion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.ReportFailureToSyncToPartyHotfixVersion");
		
		USheikPartyManager_ReportFailureToSyncToPartyHotfixVersion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.PromotePlayerToPartyLeader
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      CozmoId                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      EOSPuid                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::PromotePlayerToPartyLeader(const class FString& CozmoId, const class FString& EOSPuid)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.PromotePlayerToPartyLeader");
		
		USheikPartyManager_PromotePlayerToPartyLeader_Params params {};
		params.CozmoId = CozmoId;
		params.EOSPuid = EOSPuid;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPartyManager.OnVoiceChatPlayerTalkingUpdated__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ChannelName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ProductUserId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsTalking                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsLocalPlayer                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::OnVoiceChatPlayerTalkingUpdated__DelegateSignature(const class FString& ChannelName, const class FString& ProductUserId, bool bIsTalking, bool bIsLocalPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPartyManager.OnVoiceChatPlayerTalkingUpdated__DelegateSignature");
		
		USheikPartyManager_OnVoiceChatPlayerTalkingUpdated__DelegateSignature_Params params {};
		params.ChannelName = ChannelName;
		params.ProductUserId = ProductUserId;
		params.bIsTalking = bIsTalking;
		params.bIsLocalPlayer = bIsLocalPlayer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPartyManager.OnVoiceChatOptionsUpdated__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsLocalVOIPEnabled                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsLocalVOIPMuted                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsLocalVOIPDeafened                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsLocalVOIPPushToTalk                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::OnVoiceChatOptionsUpdated__DelegateSignature(bool bIsLocalVOIPEnabled, bool bIsLocalVOIPMuted, bool bIsLocalVOIPDeafened, bool bIsLocalVOIPPushToTalk)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPartyManager.OnVoiceChatOptionsUpdated__DelegateSignature");
		
		USheikPartyManager_OnVoiceChatOptionsUpdated__DelegateSignature_Params params {};
		params.bIsLocalVOIPEnabled = bIsLocalVOIPEnabled;
		params.bIsLocalVOIPMuted = bIsLocalVOIPMuted;
		params.bIsLocalVOIPDeafened = bIsLocalVOIPDeafened;
		params.bIsLocalVOIPPushToTalk = bIsLocalVOIPPushToTalk;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPartyManager.OnVoiceChatMuteListChanged__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::OnVoiceChatMuteListChanged__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPartyManager.OnVoiceChatMuteListChanged__DelegateSignature");
		
		USheikPartyManager_OnVoiceChatMuteListChanged__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPartyManager.OnVoiceChatAvailableAudioDevicesChanged__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::OnVoiceChatAvailableAudioDevicesChanged__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPartyManager.OnVoiceChatAvailableAudioDevicesChanged__DelegateSignature");
		
		USheikPartyManager_OnVoiceChatAvailableAudioDevicesChanged__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPartyManager.OnPSNActivityEventReceived__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::OnPSNActivityEventReceived__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPartyManager.OnPSNActivityEventReceived__DelegateSignature");
		
		USheikPartyManager_OnPSNActivityEventReceived__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.OnPreLoadMap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      MapUrl                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::OnPreLoadMap(const class FString& MapUrl)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.OnPreLoadMap");
		
		USheikPartyManager_OnPreLoadMap_Params params {};
		params.MapUrl = MapUrl;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPartyManager.OnPartyUpdated__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::OnPartyUpdated__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPartyManager.OnPartyUpdated__DelegateSignature");
		
		USheikPartyManager_OnPartyUpdated__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPartyManager.OnPartyPlayerLeft__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::OnPartyPlayerLeft__DelegateSignature(const class FString& PlayerId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPartyManager.OnPartyPlayerLeft__DelegateSignature");
		
		USheikPartyManager_OnPartyPlayerLeft__DelegateSignature_Params params {};
		params.PlayerId = PlayerId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPartyManager.OnPartyPlayerKicked__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::OnPartyPlayerKicked__DelegateSignature(const class FString& PlayerId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPartyManager.OnPartyPlayerKicked__DelegateSignature");
		
		USheikPartyManager_OnPartyPlayerKicked__DelegateSignature_Params params {};
		params.PlayerId = PlayerId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPartyManager.OnPartyPlayerJoined__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      MetaData                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FMatchmakerPlayerAttribute>          Attributes                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::OnPartyPlayerJoined__DelegateSignature(const class FString& PlayerId, const class FString& MetaData, TArray<struct FMatchmakerPlayerAttribute> Attributes)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPartyManager.OnPartyPlayerJoined__DelegateSignature");
		
		USheikPartyManager_OnPartyPlayerJoined__DelegateSignature_Params params {};
		params.PlayerId = PlayerId;
		params.MetaData = MetaData;
		params.Attributes = Attributes;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPartyManager.OnPartyInviteResponseSent__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPartyInvitation                            PartyInvitation                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bAccepted                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::OnPartyInviteResponseSent__DelegateSignature(const struct FPartyInvitation& PartyInvitation, bool bAccepted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPartyManager.OnPartyInviteResponseSent__DelegateSignature");
		
		USheikPartyManager_OnPartyInviteResponseSent__DelegateSignature_Params params {};
		params.PartyInvitation = PartyInvitation;
		params.bAccepted = bAccepted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPartyManager.OnPartyHotfixVersionSyncComplete__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bWasSuccessful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::OnPartyHotfixVersionSyncComplete__DelegateSignature(bool bWasSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPartyManager.OnPartyHotfixVersionSyncComplete__DelegateSignature");
		
		USheikPartyManager_OnPartyHotfixVersionSyncComplete__DelegateSignature_Params params {};
		params.bWasSuccessful = bWasSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.OnGameExit
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::OnGameExit()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.OnGameExit");
		
		USheikPartyManager_OnGameExit_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.OnEnterGameMap
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::OnEnterGameMap()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.OnEnterGameMap");
		
		USheikPartyManager_OnEnterGameMap_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPartyManager.OnCozmoPartyPlayerAttributesUpdated__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerId                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FPlayerPartyAttributesInfo                  UpdatedPlayerInfo                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::OnCozmoPartyPlayerAttributesUpdated__DelegateSignature(const class FString& PlayerId, const struct FPlayerPartyAttributesInfo& UpdatedPlayerInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPartyManager.OnCozmoPartyPlayerAttributesUpdated__DelegateSignature");
		
		USheikPartyManager_OnCozmoPartyPlayerAttributesUpdated__DelegateSignature_Params params {};
		params.PlayerId = PlayerId;
		params.UpdatedPlayerInfo = UpdatedPlayerInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPartyManager.OnCozmoPartyInviteReceivedWithAccountInfo__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPartyInvitation                            PartyInvitation                                            (Parm, NativeAccessSpecifierPublic)
	 * 		struct FSheikPlayerAccount                         Account                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::OnCozmoPartyInviteReceivedWithAccountInfo__DelegateSignature(const struct FPartyInvitation& PartyInvitation, const struct FSheikPlayerAccount& Account)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPartyManager.OnCozmoPartyInviteReceivedWithAccountInfo__DelegateSignature");
		
		USheikPartyManager_OnCozmoPartyInviteReceivedWithAccountInfo__DelegateSignature_Params params {};
		params.PartyInvitation = PartyInvitation;
		params.Account = Account;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPartyManager.OnCozmoPartyInviteReceived__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPartyInvitation                            PartyInvitation                                            (Parm, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::OnCozmoPartyInviteReceived__DelegateSignature(const struct FPartyInvitation& PartyInvitation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPartyManager.OnCozmoPartyInviteReceived__DelegateSignature");
		
		USheikPartyManager_OnCozmoPartyInviteReceived__DelegateSignature_Params params {};
		params.PartyInvitation = PartyInvitation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.OnCozmoMatchmakingCanceled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::OnCozmoMatchmakingCanceled(bool bSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.OnCozmoMatchmakingCanceled");
		
		USheikPartyManager_OnCozmoMatchmakingCanceled_Params params {};
		params.bSuccessful = bSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPartyManager.OnAcceptedPlatformInviteBypassStartupScreen__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::OnAcceptedPlatformInviteBypassStartupScreen__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPartyManager.OnAcceptedPlatformInviteBypassStartupScreen__DelegateSignature");
		
		USheikPartyManager_OnAcceptedPlatformInviteBypassStartupScreen__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.MuteAllPlayers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bMuteAll                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::MuteAllPlayers(bool bMuteAll)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.MuteAllPlayers");
		
		USheikPartyManager_MuteAllPlayers_Params params {};
		params.bMuteAll = bMuteAll;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.LeaveTeamParty
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::LeaveTeamParty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.LeaveTeamParty");
		
		USheikPartyManager_LeaveTeamParty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.LeaveParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bLeaveCozmoParty                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bLeaveTeamParty                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::LeaveParty(bool bLeaveCozmoParty, bool bLeaveTeamParty)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.LeaveParty");
		
		USheikPartyManager_LeaveParty_Params params {};
		params.bLeaveCozmoParty = bLeaveCozmoParty;
		params.bLeaveTeamParty = bLeaveTeamParty;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.KickPlayerFromParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerCozmoId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::KickPlayerFromParty(const class FString& PlayerCozmoId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.KickPlayerFromParty");
		
		USheikPartyManager_KickPlayerFromParty_Params params {};
		params.PlayerCozmoId = PlayerCozmoId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.JoinPrivateParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PartyId                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bJoinCozmoParty                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::JoinPrivateParty(const class FString& PartyId, bool bJoinCozmoParty)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.JoinPrivateParty");
		
		USheikPartyManager_JoinPrivateParty_Params params {};
		params.PartyId = PartyId;
		params.bJoinCozmoParty = bJoinCozmoParty;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.JoinPartyByLeaderId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      LeaderPlayerId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PlatformAccountId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bJoinCozmoParty                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::JoinPartyByLeaderId(const class FString& LeaderPlayerId, const class FString& PlatformAccountId, bool bJoinCozmoParty)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.JoinPartyByLeaderId");
		
		USheikPartyManager_JoinPartyByLeaderId_Params params {};
		params.LeaderPlayerId = LeaderPlayerId;
		params.PlatformAccountId = PlatformAccountId;
		params.bJoinCozmoParty = bJoinCozmoParty;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.JoinPartyByGuid
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PartyGuid                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PlatformAccountId                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bJoinCozmoParty                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::JoinPartyByGuid(const class FString& PartyGuid, const class FString& PlatformAccountId, bool bJoinCozmoParty)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.JoinPartyByGuid");
		
		USheikPartyManager_JoinPartyByGuid_Params params {};
		params.PartyGuid = PartyGuid;
		params.PlatformAccountId = PlatformAccountId;
		params.bJoinCozmoParty = bJoinCozmoParty;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.JoinPartyByAccount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPlayerAccount                         Account                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::JoinPartyByAccount(const struct FSheikPlayerAccount& Account)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.JoinPartyByAccount");
		
		USheikPartyManager_JoinPartyByAccount_Params params {};
		params.Account = Account;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.IsVoiceChatMutedForPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikPartyManager::IsVoiceChatMutedForPlayer(const class FString& PlayerName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.IsVoiceChatMutedForPlayer");
		
		USheikPartyManager_IsVoiceChatMutedForPlayer_Params params {};
		params.PlayerName = PlayerName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.IsVoiceChatEnabled
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::IsVoiceChatEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.IsVoiceChatEnabled");
		
		USheikPartyManager_IsVoiceChatEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.IsPlayerInVOIPParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikVOIPPartyType                                VOIPParty                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikPartyManager::IsPlayerInVOIPParty(const class FString& PlayerName, ESheikVOIPPartyType VOIPParty)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.IsPlayerInVOIPParty");
		
		USheikPartyManager_IsPlayerInVOIPParty_Params params {};
		params.PlayerName = PlayerName;
		params.VOIPParty = VOIPParty;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.IsPlayerInMuteList
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikPartyManager::IsPlayerInMuteList(const class FString& PlayerName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.IsPlayerInMuteList");
		
		USheikPartyManager_IsPlayerInMuteList_Params params {};
		params.PlayerName = PlayerName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.IsPartyOnSameHotfixVersion
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bMemberIsOutOfDate                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bLocalIsOutOfDate                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikPartyManager::IsPartyOnSameHotfixVersion(bool* bMemberIsOutOfDate, bool* bLocalIsOutOfDate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.IsPartyOnSameHotfixVersion");
		
		USheikPartyManager_IsPartyOnSameHotfixVersion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (bMemberIsOutOfDate != nullptr)
			*bMemberIsOutOfDate = params.bMemberIsOutOfDate;
		if (bLocalIsOutOfDate != nullptr)
			*bLocalIsOutOfDate = params.bLocalIsOutOfDate;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.IsPartyFull
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::IsPartyFull()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.IsPartyFull");
		
		USheikPartyManager_IsPartyFull_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.IsPartyChatOnlyEnabled
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::IsPartyChatOnlyEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.IsPartyChatOnlyEnabled");
		
		USheikPartyManager_IsPartyChatOnlyEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.IsLocalPlayerVoiceChatMuted
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::IsLocalPlayerVoiceChatMuted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.IsLocalPlayerVoiceChatMuted");
		
		USheikPartyManager_IsLocalPlayerVoiceChatMuted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.IsLocalPlayerVoiceChatDeafened
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::IsLocalPlayerVoiceChatDeafened()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.IsLocalPlayerVoiceChatDeafened");
		
		USheikPartyManager_IsLocalPlayerVoiceChatDeafened_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.IsLocalPlayerPartyLeader
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::IsLocalPlayerPartyLeader()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.IsLocalPlayerPartyLeader");
		
		USheikPartyManager_IsLocalPlayerPartyLeader_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.IsLocalPlayerLobbyLeader
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::IsLocalPlayerLobbyLeader()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.IsLocalPlayerLobbyLeader");
		
		USheikPartyManager_IsLocalPlayerLobbyLeader_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.IsInEOSLobby
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::IsInEOSLobby()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.IsInEOSLobby");
		
		USheikPartyManager_IsInEOSLobby_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.IsAttemptingMatchmaking
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::IsAttemptingMatchmaking()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.IsAttemptingMatchmaking");
		
		USheikPartyManager_IsAttemptingMatchmaking_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.InviteToPlatformParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPlayerAccount                         PlayerAccount                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::InviteToPlatformParty(const struct FSheikPlayerAccount& PlayerAccount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.InviteToPlatformParty");
		
		USheikPartyManager_InviteToPlatformParty_Params params {};
		params.PlayerAccount = PlayerAccount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.InviteToCozmoParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerCozmoId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::InviteToCozmoParty(const class FString& PlayerCozmoId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.InviteToCozmoParty");
		
		USheikPartyManager_InviteToCozmoParty_Params params {};
		params.PlayerCozmoId = PlayerCozmoId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.InitializeVoiceChat
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::InitializeVoiceChat()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.InitializeVoiceChat");
		
		USheikPartyManager_InitializeVoiceChat_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.HasVoiceChatPrivilege
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::HasVoiceChatPrivilege()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.HasVoiceChatPrivilege");
		
		USheikPartyManager_HasVoiceChatPrivilege_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.HasPSNActivityIntent
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::HasPSNActivityIntent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.HasPSNActivityIntent");
		
		USheikPartyManager_HasPSNActivityIntent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.HasPlatformParty
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::HasPlatformParty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.HasPlatformParty");
		
		USheikPartyManager_HasPlatformParty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.HasEOSParty
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::HasEOSParty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.HasEOSParty");
		
		USheikPartyManager_HasEOSParty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.HasCozmoParty
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::HasCozmoParty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.HasCozmoParty");
		
		USheikPartyManager_HasCozmoParty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.HandleRestrictedMatchFound
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      InviteCode                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::HandleRestrictedMatchFound(const class FString& InviteCode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.HandleRestrictedMatchFound");
		
		USheikPartyManager_HandleRestrictedMatchFound_Params params {};
		params.InviteCode = InviteCode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetVoiceChatMuteStatusForPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikPartyManager::GetVoiceChatMuteStatusForPlayer(const class FString& PlayerName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetVoiceChatMuteStatusForPlayer");
		
		USheikPartyManager_GetVoiceChatMuteStatusForPlayer_Params params {};
		params.PlayerName = PlayerName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetVoiceChatActiveParty
	 * 		Flags  -> ()
	 */
	ESheikVOIPPartyType USheikPartyManager::GetVoiceChatActiveParty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetVoiceChatActiveParty");
		
		USheikPartyManager_GetVoiceChatActiveParty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetTimeElapsed
	 * 		Flags  -> ()
	 */
	struct FTimespan USheikPartyManager::GetTimeElapsed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetTimeElapsed");
		
		USheikPartyManager_GetTimeElapsed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetPlayersInVoiceChannel
	 * 		Flags  -> ()
	 */
	TArray<class FString> USheikPartyManager::GetPlayersInVoiceChannel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetPlayersInVoiceChannel");
		
		USheikPartyManager_GetPlayersInVoiceChannel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetPlatformPartyId
	 * 		Flags  -> ()
	 */
	class FString USheikPartyManager::GetPlatformPartyId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetPlatformPartyId");
		
		USheikPartyManager_GetPlatformPartyId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetPartyMemberNames
	 * 		Flags  -> ()
	 */
	TArray<class FString> USheikPartyManager::GetPartyMemberNames()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetPartyMemberNames");
		
		USheikPartyManager_GetPartyMemberNames_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetLocalProductUserId
	 * 		Flags  -> ()
	 */
	class FString USheikPartyManager::GetLocalProductUserId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetLocalProductUserId");
		
		USheikPartyManager_GetLocalProductUserId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetLocalPlayerAttributeData
	 * 		Flags  -> ()
	 */
	struct FPlayerPartyAttributesInfo USheikPartyManager::GetLocalPlayerAttributeData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetLocalPlayerAttributeData");
		
		USheikPartyManager_GetLocalPlayerAttributeData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetLoadoutFromAttributes
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FMatchmakerPlayerAttribute>          AttributeList                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FCharacterLoadout                           OutLoadout                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::GetLoadoutFromAttributes(TArray<struct FMatchmakerPlayerAttribute> AttributeList, struct FCharacterLoadout* OutLoadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetLoadoutFromAttributes");
		
		USheikPartyManager_GetLoadoutFromAttributes_Params params {};
		params.AttributeList = AttributeList;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutLoadout != nullptr)
			*OutLoadout = params.OutLoadout;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetEOSPartyId
	 * 		Flags  -> ()
	 */
	class FString USheikPartyManager::GetEOSPartyId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetEOSPartyId");
		
		USheikPartyManager_GetEOSPartyId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetEosAudioOutputDeviceMuted
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::GetEosAudioOutputDeviceMuted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetEosAudioOutputDeviceMuted");
		
		USheikPartyManager_GetEosAudioOutputDeviceMuted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetEosAudioInputDeviceMuted
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::GetEosAudioInputDeviceMuted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetEosAudioInputDeviceMuted");
		
		USheikPartyManager_GetEosAudioInputDeviceMuted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetDefaultAudioOutputDevice
	 * 		Flags  -> ()
	 */
	struct FEOSVoiceChatDeviceInfo USheikPartyManager::GetDefaultAudioOutputDevice()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetDefaultAudioOutputDevice");
		
		USheikPartyManager_GetDefaultAudioOutputDevice_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetDefaultAudioInputDevice
	 * 		Flags  -> ()
	 */
	struct FEOSVoiceChatDeviceInfo USheikPartyManager::GetDefaultAudioInputDevice()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetDefaultAudioInputDevice");
		
		USheikPartyManager_GetDefaultAudioInputDevice_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetCurrentAudioOutputDevice
	 * 		Flags  -> ()
	 */
	struct FEOSVoiceChatDeviceInfo USheikPartyManager::GetCurrentAudioOutputDevice()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetCurrentAudioOutputDevice");
		
		USheikPartyManager_GetCurrentAudioOutputDevice_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetCurrentAudioInputDevice
	 * 		Flags  -> ()
	 */
	struct FEOSVoiceChatDeviceInfo USheikPartyManager::GetCurrentAudioInputDevice()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetCurrentAudioInputDevice");
		
		USheikPartyManager_GetCurrentAudioInputDevice_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetCozmoPartyId
	 * 		Flags  -> ()
	 */
	class FString USheikPartyManager::GetCozmoPartyId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetCozmoPartyId");
		
		USheikPartyManager_GetCozmoPartyId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetAvailableAudioOutputDevices
	 * 		Flags  -> ()
	 */
	TArray<struct FEOSVoiceChatDeviceInfo> USheikPartyManager::GetAvailableAudioOutputDevices()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetAvailableAudioOutputDevices");
		
		USheikPartyManager_GetAvailableAudioOutputDevices_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.GetAvailableAudioInputDevices
	 * 		Flags  -> ()
	 */
	TArray<struct FEOSVoiceChatDeviceInfo> USheikPartyManager::GetAvailableAudioInputDevices()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.GetAvailableAudioInputDevices");
		
		USheikPartyManager_GetAvailableAudioInputDevices_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.DisplayPlatformInviteUI
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::DisplayPlatformInviteUI()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.DisplayPlatformInviteUI");
		
		USheikPartyManager_DisplayPlatformInviteUI_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.DisplayPartyInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AHUD*                                        HUD                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TextStartX                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TextStartY                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              TextVerticalOffset                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPartyManager::DisplayPartyInfo(class AHUD* HUD, float TextStartX, float TextStartY, float TextVerticalOffset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.DisplayPartyInfo");
		
		USheikPartyManager_DisplayPartyInfo_Params params {};
		params.HUD = HUD;
		params.TextStartX = TextStartX;
		params.TextStartY = TextStartY;
		params.TextVerticalOffset = TextVerticalOffset;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.CreateTeamPartyIfNotRunning
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::CreateTeamPartyIfNotRunning()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.CreateTeamPartyIfNotRunning");
		
		USheikPartyManager_CreateTeamPartyIfNotRunning_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.CreatePrivateParty
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::CreatePrivateParty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.CreatePrivateParty");
		
		USheikPartyManager_CreatePrivateParty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.ClearPSNActivityIntent
	 * 		Flags  -> ()
	 */
	void USheikPartyManager::ClearPSNActivityIntent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.ClearPSNActivityIntent");
		
		USheikPartyManager_ClearPSNActivityIntent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.CheckAvailableAudioDevicesForDeviceName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      AudioDeviceName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FEOSVoiceChatDeviceInfo>             AvailableAudioDevices                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikPartyManager::CheckAvailableAudioDevicesForDeviceName(const class FString& AudioDeviceName, TArray<struct FEOSVoiceChatDeviceInfo> AvailableAudioDevices)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.CheckAvailableAudioDevicesForDeviceName");
		
		USheikPartyManager_CheckAvailableAudioDevicesForDeviceName_Params params {};
		params.AudioDeviceName = AudioDeviceName;
		params.AvailableAudioDevices = AvailableAudioDevices;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.CheckActivityForMatchmakingConfig
	 * 		Flags  -> ()
	 */
	class FString USheikPartyManager::CheckActivityForMatchmakingConfig()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.CheckActivityForMatchmakingConfig");
		
		USheikPartyManager_CheckActivityForMatchmakingConfig_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.CanInviteToParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPlayerAccount                         Account                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikPartyManager::CanInviteToParty(const struct FSheikPlayerAccount& Account)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.CanInviteToParty");
		
		USheikPartyManager_CanInviteToParty_Params params {};
		params.Account = Account;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPartyManager.AreAllPlayersMuted
	 * 		Flags  -> ()
	 */
	bool USheikPartyManager::AreAllPlayersMuted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPartyManager.AreAllPlayersMuted");
		
		USheikPartyManager_AreAllPlayersMuted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikPartyManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikPartyManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikPartyManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.VictimMontageEnded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInterrupted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::VictimMontageEnded(class UAnimMontage* Montage, bool bInterrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.VictimMontageEnded");
		
		USheikPinComponent_VictimMontageEnded_Params params {};
		params.Montage = Montage;
		params.bInterrupted = bInterrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.ServerReportMinigameResultsForVictim
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::ServerReportMinigameResultsForVictim(bool bSuccess)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.ServerReportMinigameResultsForVictim");
		
		USheikPinComponent_ServerReportMinigameResultsForVictim_Params params {};
		params.bSuccess = bSuccess;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.ServerReportMinigameInputSuccess
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            SuccessfulInputs                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::ServerReportMinigameInputSuccess(int32_t SuccessfulInputs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.ServerReportMinigameInputSuccess");
		
		USheikPinComponent_ServerReportMinigameInputSuccess_Params params {};
		params.SuccessfulInputs = SuccessfulInputs;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.ServerReportMinigameHasBegun
	 * 		Flags  -> ()
	 */
	void USheikPinComponent::ServerReportMinigameHasBegun()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.ServerReportMinigameHasBegun");
		
		USheikPinComponent_ServerReportMinigameHasBegun_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.ServerReportMinigameAutoSuccessForVictim
	 * 		Flags  -> ()
	 */
	void USheikPinComponent::ServerReportMinigameAutoSuccessForVictim()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.ServerReportMinigameAutoSuccessForVictim");
		
		USheikPinComponent_ServerReportMinigameAutoSuccessForVictim_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.OnResInterrupted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGInstanceHitData                          HitData                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::OnResInterrupted(const struct FIGInstanceHitData& HitData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.OnResInterrupted");
		
		USheikPinComponent_OnResInterrupted_Params params {};
		params.HitData = HitData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.OnResAborted
	 * 		Flags  -> ()
	 */
	void USheikPinComponent::OnResAborted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.OnResAborted");
		
		USheikPinComponent_OnResAborted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.OnRep_PinStateInfo
	 * 		Flags  -> ()
	 */
	void USheikPinComponent::OnRep_PinStateInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.OnRep_PinStateInfo");
		
		USheikPinComponent_OnRep_PinStateInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.OnRep_PinningCollisionEnabled
	 * 		Flags  -> ()
	 */
	void USheikPinComponent::OnRep_PinningCollisionEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.OnRep_PinningCollisionEnabled");
		
		USheikPinComponent_OnRep_PinningCollisionEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.OnPinInterrupted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGInstanceHitData                          HitData                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::OnPinInterrupted(const struct FIGInstanceHitData& HitData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.OnPinInterrupted");
		
		USheikPinComponent_OnPinInterrupted_Params params {};
		params.HitData = HitData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.OnPinAborted
	 * 		Flags  -> ()
	 */
	void USheikPinComponent::OnPinAborted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.OnPinAborted");
		
		USheikPinComponent_OnPinAborted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.OnOwnerRecovered
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGCharacter*                                InRecovered                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::OnOwnerRecovered(class AIGCharacter* InRecovered)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.OnOwnerRecovered");
		
		USheikPinComponent_OnOwnerRecovered_Params params {};
		params.InRecovered = InRecovered;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.OnOwnerDowned
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGCharacter*                                InVictim                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::OnOwnerDowned(class AIGCharacter* InVictim)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.OnOwnerDowned");
		
		USheikPinComponent_OnOwnerDowned_Params params {};
		params.InVictim = InVictim;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.OnMinigameTargetHitTimerExpired
	 * 		Flags  -> ()
	 */
	void USheikPinComponent::OnMinigameTargetHitTimerExpired()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.OnMinigameTargetHitTimerExpired");
		
		USheikPinComponent_OnMinigameTargetHitTimerExpired_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.OnMinigameStarted
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikMinigameInfo                          MinigameInfo                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::OnMinigameStarted(const struct FSheikMinigameInfo& MinigameInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.OnMinigameStarted");
		
		USheikPinComponent_OnMinigameStarted_Params params {};
		params.MinigameInfo = MinigameInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.OnMinigamePenaltyTimerExpired
	 * 		Flags  -> ()
	 */
	void USheikPinComponent::OnMinigamePenaltyTimerExpired()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.OnMinigamePenaltyTimerExpired");
		
		USheikPinComponent_OnMinigamePenaltyTimerExpired_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.OnMinigameInput
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikMinigameResults                       MinigameResults                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::OnMinigameInput(const struct FSheikMinigameResults& MinigameResults)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.OnMinigameInput");
		
		USheikPinComponent_OnMinigameInput_Params params {};
		params.MinigameResults = MinigameResults;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.OnExitPinNotifyArea
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::OnExitPinNotifyArea(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.OnExitPinNotifyArea");
		
		USheikPinComponent_OnExitPinNotifyArea_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.OnExitPinArea
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::OnExitPinArea(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.OnExitPinArea");
		
		USheikPinComponent_OnExitPinArea_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.OnEnterPinNotifyArea
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  SweepResult                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::OnEnterPinNotifyArea(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.OnEnterPinNotifyArea");
		
		USheikPinComponent_OnEnterPinNotifyArea_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.SweepResult = SweepResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.OnEnterPinArea
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         OverlappedComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OtherBodyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bFromSweep                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  SweepResult                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::OnEnterPinArea(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.OnEnterPinArea");
		
		USheikPinComponent_OnEnterPinArea_Params params {};
		params.OverlappedComponent = OverlappedComponent;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.OtherBodyIndex = OtherBodyIndex;
		params.bFromSweep = bFromSweep;
		params.SweepResult = SweepResult;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.GetPinMinigameSettings
	 * 		Flags  -> ()
	 */
	TArray<struct FSheikPinMinigameSettings> USheikPinComponent::GetPinMinigameSettings()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.GetPinMinigameSettings");
		
		USheikPinComponent_GetPinMinigameSettings_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.GetPinMinigameHitsNeededForKickout
	 * 		Flags  -> ()
	 */
	int32_t USheikPinComponent::GetPinMinigameHitsNeededForKickout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.GetPinMinigameHitsNeededForKickout");
		
		USheikPinComponent_GetPinMinigameHitsNeededForKickout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.GetPinMinigameHitsForCurrentPin
	 * 		Flags  -> ()
	 */
	int32_t USheikPinComponent::GetPinMinigameHitsForCurrentPin()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.GetPinMinigameHitsForCurrentPin");
		
		USheikPinComponent_GetPinMinigameHitsForCurrentPin_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.GetPinMingameSettingsForCurrentKnockdown
	 * 		Flags  -> ()
	 */
	struct FSheikPinMinigameSettings USheikPinComponent::GetPinMingameSettingsForCurrentKnockdown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.GetPinMingameSettingsForCurrentKnockdown");
		
		USheikPinComponent_GetPinMingameSettingsForCurrentKnockdown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.ClientStartMinigameForVictim
	 * 		Flags  -> ()
	 */
	void USheikPinComponent::ClientStartMinigameForVictim()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.ClientStartMinigameForVictim");
		
		USheikPinComponent_ClientStartMinigameForVictim_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.ClientSetCharacterCollisionEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ASheikCharacter*                             Attacker                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ASheikCharacter*                             Victim                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::ClientSetCharacterCollisionEnabled(bool bEnabled, class ASheikCharacter* Attacker, class ASheikCharacter* Victim)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.ClientSetCharacterCollisionEnabled");
		
		USheikPinComponent_ClientSetCharacterCollisionEnabled_Params params {};
		params.bEnabled = bEnabled;
		params.Attacker = Attacker;
		params.Victim = Victim;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.ClientEndMinigameForVictim
	 * 		Flags  -> ()
	 */
	void USheikPinComponent::ClientEndMinigameForVictim()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.ClientEndMinigameForVictim");
		
		USheikPinComponent_ClientEndMinigameForVictim_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.ClientBroadcastPinMinigameInputSuccess
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikCharacter*                             Attacker                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ASheikCharacter*                             Victim                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            SuccessfulInputs                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::ClientBroadcastPinMinigameInputSuccess(class ASheikCharacter* Attacker, class ASheikCharacter* Victim, int32_t SuccessfulInputs)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.ClientBroadcastPinMinigameInputSuccess");
		
		USheikPinComponent_ClientBroadcastPinMinigameInputSuccess_Params params {};
		params.Attacker = Attacker;
		params.Victim = Victim;
		params.SuccessfulInputs = SuccessfulInputs;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.ClientBroadcastPinEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikPinEventType                                 InType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ASheikCharacter*                             Attacker                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ASheikCharacter*                             Victim                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::ClientBroadcastPinEvent(ESheikPinEventType InType, class ASheikCharacter* Attacker, class ASheikCharacter* Victim)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.ClientBroadcastPinEvent");
		
		USheikPinComponent_ClientBroadcastPinEvent_Params params {};
		params.InType = InType;
		params.Attacker = Attacker;
		params.Victim = Victim;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPinComponent.AttackerMontageEnded
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                Montage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bInterrupted                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPinComponent::AttackerMontageEnded(class UAnimMontage* Montage, bool bInterrupted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPinComponent.AttackerMontageEnded");
		
		USheikPinComponent_AttackerMontageEnded_Params params {};
		params.Montage = Montage;
		params.bInterrupted = bInterrupted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikPinComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikPinComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikPinComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPing.GetReflectedVectorWidgetLocation
	 * 		Flags  -> ()
	 */
	struct FVector2D USheikPing::GetReflectedVectorWidgetLocation()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPing.GetReflectedVectorWidgetLocation");
		
		USheikPing_GetReflectedVectorWidgetLocation_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPing.GetDesiredScreenLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector2D                                   InWidgetPosition                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bForceToTopOrBottomEdge                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FSheikPingScreenLocation USheikPing::GetDesiredScreenLocation(const struct FVector2D& InWidgetPosition, bool bForceToTopOrBottomEdge)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPing.GetDesiredScreenLocation");
		
		USheikPing_GetDesiredScreenLocation_Params params {};
		params.InWidgetPosition = InWidgetPosition;
		params.bForceToTopOrBottomEdge = bForceToTopOrBottomEdge;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikPing.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikPing::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikPing");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UISheikPinBoxComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UISheikPinBoxComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.ISheikPinBoxComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAbortPinNotify.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAbortPinNotify::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAbortPinNotify");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikOrientForPinState.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikOrientForPinState::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikOrientForPinState");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerAccountsManager.SetPresence
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikPresence                                     Presence                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerAccountsManager::SetPresence(ESheikPresence Presence)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerAccountsManager.SetPresence");
		
		USheikPlayerAccountsManager_SetPresence_Params params {};
		params.Presence = Presence;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerAccountsManager.SendFunnelTelemetry
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikFunnelLocation                               Location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerAccountsManager::SendFunnelTelemetry(ESheikFunnelLocation Location)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerAccountsManager.SendFunnelTelemetry");
		
		USheikPlayerAccountsManager_SendFunnelTelemetry_Params params {};
		params.Location = Location;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerAccountsManager.ResolveServiceToDisplay
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPlayerSocialEntry                     SocialEntry                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	ESheikPlatformService USheikPlayerAccountsManager::ResolveServiceToDisplay(const struct FSheikPlayerSocialEntry& SocialEntry)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerAccountsManager.ResolveServiceToDisplay");
		
		USheikPlayerAccountsManager_ResolveServiceToDisplay_Params params {};
		params.SocialEntry = SocialEntry;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerAccountsManager.ResolveDisplayName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPlayerSocialEntry                     SocialEntry                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	class FString USheikPlayerAccountsManager::ResolveDisplayName(const struct FSheikPlayerSocialEntry& SocialEntry)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerAccountsManager.ResolveDisplayName");
		
		USheikPlayerAccountsManager_ResolveDisplayName_Params params {};
		params.SocialEntry = SocialEntry;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerAccountsManager.QueryPartyMemberAccountData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPartyMemberInfo                            PartyMemberInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerAccountsManager::QueryPartyMemberAccountData(const struct FPartyMemberInfo& PartyMemberInfo, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerAccountsManager.QueryPartyMemberAccountData");
		
		USheikPlayerAccountsManager_QueryPartyMemberAccountData_Params params {};
		params.PartyMemberInfo = PartyMemberInfo;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPlayerAccountsManager.OnQueryPartyMemberAccountData__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPlayerAccount                         FoundAccount                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bWasSuccessful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerAccountsManager::OnQueryPartyMemberAccountData__DelegateSignature(const struct FSheikPlayerAccount& FoundAccount, bool bWasSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPlayerAccountsManager.OnQueryPartyMemberAccountData__DelegateSignature");
		
		USheikPlayerAccountsManager_OnQueryPartyMemberAccountData__DelegateSignature_Params params {};
		params.FoundAccount = FoundAccount;
		params.bWasSuccessful = bWasSuccessful;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPlayerAccountsManager.OnGetSocialData__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikPlayerSocialEntry>             SocialEntries                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bWasSuccessful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerAccountsManager::OnGetSocialData__DelegateSignature(TArray<struct FSheikPlayerSocialEntry> SocialEntries, bool bWasSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPlayerAccountsManager.OnGetSocialData__DelegateSignature");
		
		USheikPlayerAccountsManager_OnGetSocialData__DelegateSignature_Params params {};
		params.SocialEntries = SocialEntries;
		params.bWasSuccessful = bWasSuccessful;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPlayerAccountsManager.OnGetRecentPlayers__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikPlayerSocialEntry>             SocialEntries                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bWasSuccessful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerAccountsManager::OnGetRecentPlayers__DelegateSignature(TArray<struct FSheikPlayerSocialEntry> SocialEntries, bool bWasSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPlayerAccountsManager.OnGetRecentPlayers__DelegateSignature");
		
		USheikPlayerAccountsManager_OnGetRecentPlayers__DelegateSignature_Params params {};
		params.SocialEntries = SocialEntries;
		params.bWasSuccessful = bWasSuccessful;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerAccountsManager.IsValidPlayerSocialEntry
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPlayerSocialEntry                     PlayerSocialEntry                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikPlayerAccountsManager::IsValidPlayerSocialEntry(const struct FSheikPlayerSocialEntry& PlayerSocialEntry)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerAccountsManager.IsValidPlayerSocialEntry");
		
		USheikPlayerAccountsManager_IsValidPlayerSocialEntry_Params params {};
		params.PlayerSocialEntry = PlayerSocialEntry;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerAccountsManager.IsValidPlayerAccount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPlayerAccount                         Account                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikPlayerAccountsManager::IsValidPlayerAccount(const struct FSheikPlayerAccount& Account)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerAccountsManager.IsValidPlayerAccount");
		
		USheikPlayerAccountsManager_IsValidPlayerAccount_Params params {};
		params.Account = Account;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerAccountsManager.IsValidPartyMemberInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPartyMemberInfo                            PartyMemberInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikPlayerAccountsManager::IsValidPartyMemberInfo(const struct FPartyMemberInfo& PartyMemberInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerAccountsManager.IsValidPartyMemberInfo");
		
		USheikPlayerAccountsManager_IsValidPartyMemberInfo_Params params {};
		params.PartyMemberInfo = PartyMemberInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerAccountsManager.IsValidPartyInvitation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPartyInvitation                            PartyInvitation                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikPlayerAccountsManager::IsValidPartyInvitation(const struct FPartyInvitation& PartyInvitation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerAccountsManager.IsValidPartyInvitation");
		
		USheikPlayerAccountsManager_IsValidPartyInvitation_Params params {};
		params.PartyInvitation = PartyInvitation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerAccountsManager.GetRecentPlayers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerAccountsManager::GetRecentPlayers(const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerAccountsManager.GetRecentPlayers");
		
		USheikPlayerAccountsManager_GetRecentPlayers_Params params {};
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerAccountsManager.GetPlayerSocialData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerAccountsManager::GetPlayerSocialData(const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerAccountsManager.GetPlayerSocialData");
		
		USheikPlayerAccountsManager_GetPlayerSocialData_Params params {};
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerAccountsManager.GetMyPlatformsExternalAccount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPlayerAccount                         Account                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FSheikExternalAccount                       ExternalAccount                                            (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerAccountsManager::GetMyPlatformsExternalAccount(const struct FSheikPlayerAccount& Account, struct FSheikExternalAccount* ExternalAccount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerAccountsManager.GetMyPlatformsExternalAccount");
		
		USheikPlayerAccountsManager_GetMyPlatformsExternalAccount_Params params {};
		params.Account = Account;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (ExternalAccount != nullptr)
			*ExternalAccount = params.ExternalAccount;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerAccountsManager.GetLatestExternalAccount
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPlayerAccount                         SheikAccount                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	struct FSheikExternalAccount USheikPlayerAccountsManager::GetLatestExternalAccount(const struct FSheikPlayerAccount& SheikAccount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerAccountsManager.GetLatestExternalAccount");
		
		USheikPlayerAccountsManager_GetLatestExternalAccount_Params params {};
		params.SheikAccount = SheikAccount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerAccountsManager.GenerateRandomSocialEntry
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikPlayerSocialEntry                     Entry                                                      (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerAccountsManager::GenerateRandomSocialEntry(struct FSheikPlayerSocialEntry* Entry)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerAccountsManager.GenerateRandomSocialEntry");
		
		USheikPlayerAccountsManager_GenerateRandomSocialEntry_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Entry != nullptr)
			*Entry = params.Entry;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikPlayerAccountsManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikPlayerAccountsManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikPlayerAccountsManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.UseIntensiveAccessorySet
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::UseIntensiveAccessorySet()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.UseIntensiveAccessorySet");
		
		ASheikPlayerControllerCommon_UseIntensiveAccessorySet_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.UpdateTimePlayed
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::UpdateTimePlayed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.UpdateTimePlayed");
		
		ASheikPlayerControllerCommon_UpdateTimePlayed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.TriggerNearestEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              TimeTillEventStart                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              LengthOfEvent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::TriggerNearestEvent(float TimeTillEventStart, float LengthOfEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.TriggerNearestEvent");
		
		ASheikPlayerControllerCommon_TriggerNearestEvent_Params params {};
		params.TimeTillEventStart = TimeTillEventStart;
		params.LengthOfEvent = LengthOfEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.TriggerAISpawnersOfTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::TriggerAISpawnersOfTag(const class FName& Tag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.TriggerAISpawnersOfTag");
		
		ASheikPlayerControllerCommon_TriggerAISpawnersOfTag_Params params {};
		params.Tag = Tag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ToggleShowPerkXPMeter
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ToggleShowPerkXPMeter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ToggleShowPerkXPMeter");
		
		ASheikPlayerControllerCommon_ToggleShowPerkXPMeter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.SwapBodyType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            index                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::SwapBodyType(int32_t index)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.SwapBodyType");
		
		ASheikPlayerControllerCommon_SwapBodyType_Params params {};
		params.index = index;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.SkipWaitForPlayers
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::SkipWaitForPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.SkipWaitForPlayers");
		
		ASheikPlayerControllerCommon_SkipWaitForPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ShouldLeaveParty
	 * 		Flags  -> ()
	 */
	bool ASheikPlayerControllerCommon::ShouldLeaveParty()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ShouldLeaveParty");
		
		ASheikPlayerControllerCommon_ShouldLeaveParty_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.SetPlayerShouldMoveToSpectator
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::SetPlayerShouldMoveToSpectator()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.SetPlayerShouldMoveToSpectator");
		
		ASheikPlayerControllerCommon_SetPlayerShouldMoveToSpectator_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerTriggerAISpawnersOfTag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        Tag                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ServerTriggerAISpawnersOfTag(const class FName& Tag)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerTriggerAISpawnersOfTag");
		
		ASheikPlayerControllerCommon_ServerTriggerAISpawnersOfTag_Params params {};
		params.Tag = Tag;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerToggleBotVisualization
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ServerToggleBotVisualization(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerToggleBotVisualization");
		
		ASheikPlayerControllerCommon_ServerToggleBotVisualization_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerSwapBodyType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikSpawnParams                           NewSpawnParams                                             (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ServerSwapBodyType(const struct FSheikSpawnParams& NewSpawnParams)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerSwapBodyType");
		
		ASheikPlayerControllerCommon_ServerSwapBodyType_Params params {};
		params.NewSpawnParams = NewSpawnParams;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerStartHotfixCheck
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ServerStartHotfixCheck()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerStartHotfixCheck");
		
		ASheikPlayerControllerCommon_ServerStartHotfixCheck_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerSetEOSLobbyId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FGuid                                       TeamID                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      InEOSLobbyId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ServerSetEOSLobbyId(const struct FGuid& TeamID, const class FString& InEOSLobbyId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerSetEOSLobbyId");
		
		ASheikPlayerControllerCommon_ServerSetEOSLobbyId_Params params {};
		params.TeamID = TeamID;
		params.InEOSLobbyId = InEOSLobbyId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerSendPlayerSpawnInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikSpawnParams                           InSpawnParams                                              (Parm, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                InAccessoriesLoadoutIds                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FTitleCardLoadoutIds                        InTitleCardLoadoutsId                                      (Parm, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                InStatsToTrack                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                InSeasonalStatBaseNames                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                InSeasonalFields                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ServerSendPlayerSpawnInfo(const struct FSheikSpawnParams& InSpawnParams, TArray<class FName> InAccessoriesLoadoutIds, const struct FTitleCardLoadoutIds& InTitleCardLoadoutsId, TArray<class FName> InStatsToTrack, TArray<class FName> InSeasonalStatBaseNames, TArray<class FName> InSeasonalFields)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerSendPlayerSpawnInfo");
		
		ASheikPlayerControllerCommon_ServerSendPlayerSpawnInfo_Params params {};
		params.InSpawnParams = InSpawnParams;
		params.InAccessoriesLoadoutIds = InAccessoriesLoadoutIds;
		params.InTitleCardLoadoutsId = InTitleCardLoadoutsId;
		params.InStatsToTrack = InStatsToTrack;
		params.InSeasonalStatBaseNames = InSeasonalStatBaseNames;
		params.InSeasonalFields = InSeasonalFields;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerSendPlatformAccountInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      CozmoId                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikPlatform                                     Platform                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikPlatformService                              PlatformService                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PlatformId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PlatformName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      EOSId                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ProductId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ServerSendPlatformAccountInfo(const class FString& CozmoId, ESheikPlatform Platform, ESheikPlatformService PlatformService, const class FString& PlatformId, const class FString& PlatformName, const class FString& EOSId, const class FString& ProductId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerSendPlatformAccountInfo");
		
		ASheikPlayerControllerCommon_ServerSendPlatformAccountInfo_Params params {};
		params.CozmoId = CozmoId;
		params.Platform = Platform;
		params.PlatformService = PlatformService;
		params.PlatformId = PlatformId;
		params.PlatformName = PlatformName;
		params.EOSId = EOSId;
		params.ProductId = ProductId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerSendAntiCheatMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<unsigned char>                              Data                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ServerSendAntiCheatMessage(TArray<unsigned char> Data)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerSendAntiCheatMessage");
		
		ASheikPlayerControllerCommon_ServerSendAntiCheatMessage_Params params {};
		params.Data = Data;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerRequestTeleport
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ATeleportLocation*                           TeleportLocation                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ServerRequestTeleport(class ATeleportLocation* TeleportLocation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerRequestTeleport");
		
		ASheikPlayerControllerCommon_ServerRequestTeleport_Params params {};
		params.TeleportLocation = TeleportLocation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerRequestSimplePingType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EIGPingType                                        PingType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OriginLocation                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     OriginDirection                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ServerRequestSimplePingType(EIGPingType PingType, const struct FVector& OriginLocation, const struct FVector& OriginDirection)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerRequestSimplePingType");
		
		ASheikPlayerControllerCommon_ServerRequestSimplePingType_Params params {};
		params.PingType = PingType;
		params.OriginLocation = OriginLocation;
		params.OriginDirection = OriginDirection;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerRequestRespawn
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ServerRequestRespawn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerRequestRespawn");
		
		ASheikPlayerControllerCommon_ServerRequestRespawn_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerRequestMapChange
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      MapName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ServerRequestMapChange(const class FString& MapName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerRequestMapChange");
		
		ASheikPlayerControllerCommon_ServerRequestMapChange_Params params {};
		params.MapName = MapName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerRequestBRLaunch
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      LocationName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ServerRequestBRLaunch(const class FString& LocationName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerRequestBRLaunch");
		
		ASheikPlayerControllerCommon_ServerRequestBRLaunch_Params params {};
		params.LocationName = LocationName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerNotifyTeamOfPing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIncludeSelf                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EIGPingType                                        PingType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     PingLocation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     PingNormal                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     PingedObj                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ServerNotifyTeamOfPing(bool bIncludeSelf, EIGPingType PingType, const struct FVector& PingLocation, const struct FVector& PingNormal, class UObject* PingedObj)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerNotifyTeamOfPing");
		
		ASheikPlayerControllerCommon_ServerNotifyTeamOfPing_Params params {};
		params.bIncludeSelf = bIncludeSelf;
		params.PingType = PingType;
		params.PingLocation = PingLocation;
		params.PingNormal = PingNormal;
		params.PingedObj = PingedObj;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerControllerLeavingGameSession
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FString>                              PartyMemberIds                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ServerControllerLeavingGameSession(TArray<class FString> PartyMemberIds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerControllerLeavingGameSession");
		
		ASheikPlayerControllerCommon_ServerControllerLeavingGameSession_Params params {};
		params.PartyMemberIds = PartyMemberIds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerClearAllBots
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ServerClearAllBots()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerClearAllBots");
		
		ASheikPlayerControllerCommon_ServerClearAllBots_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ServerAcceptPlayerSession
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      PlayerSessionId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		uint32_t                                           PlayerUniqueID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ServerAcceptPlayerSession(const class FString& PlayerSessionId, uint32_t PlayerUniqueID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ServerAcceptPlayerSession");
		
		ASheikPlayerControllerCommon_ServerAcceptPlayerSession_Params params {};
		params.PlayerSessionId = PlayerSessionId;
		params.PlayerUniqueID = PlayerUniqueID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ReturnToFrontend
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ReturnToFrontend()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ReturnToFrontend");
		
		ASheikPlayerControllerCommon_ReturnToFrontend_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.RequestTriggerNearestEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              TimeTillEventStart                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              LengthOfEvent                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::RequestTriggerNearestEvent(float TimeTillEventStart, float LengthOfEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.RequestTriggerNearestEvent");
		
		ASheikPlayerControllerCommon_RequestTriggerNearestEvent_Params params {};
		params.TimeTillEventStart = TimeTillEventStart;
		params.LengthOfEvent = LengthOfEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.RequestSkipWaitForPlayers
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::RequestSkipWaitForPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.RequestSkipWaitForPlayers");
		
		ASheikPlayerControllerCommon_RequestSkipWaitForPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.RequestNewFinalRoundOverrideBeacon
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikFinalRoundBeacon*                      NewVal                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::RequestNewFinalRoundOverrideBeacon(class ASheikFinalRoundBeacon* NewVal)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.RequestNewFinalRoundOverrideBeacon");
		
		ASheikPlayerControllerCommon_RequestNewFinalRoundOverrideBeacon_Params params {};
		params.NewVal = NewVal;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.RequestChangeOnlyUseDemoRingsFlag
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               Val                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::RequestChangeOnlyUseDemoRingsFlag(bool Val)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.RequestChangeOnlyUseDemoRingsFlag");
		
		ASheikPlayerControllerCommon_RequestChangeOnlyUseDemoRingsFlag_Params params {};
		params.Val = Val;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.RecieveNewFinalRoundOverrideBeacon
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikFinalRoundBeacon*                      NewVal                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::RecieveNewFinalRoundOverrideBeacon(class ASheikFinalRoundBeacon* NewVal)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.RecieveNewFinalRoundOverrideBeacon");
		
		ASheikPlayerControllerCommon_RecieveNewFinalRoundOverrideBeacon_Params params {};
		params.NewVal = NewVal;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.PingContextReset
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::PingContextReset()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.PingContextReset");
		
		ASheikPlayerControllerCommon_PingContextReset_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPlayerControllerCommon.OnTeamInfoUpdated__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::OnTeamInfoUpdated__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPlayerControllerCommon.OnTeamInfoUpdated__DelegateSignature");
		
		ASheikPlayerControllerCommon_OnTeamInfoUpdated__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPlayerControllerCommon.OnRoundPlacementChanged__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewPlace                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::OnRoundPlacementChanged__DelegateSignature(int32_t NewPlace)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPlayerControllerCommon.OnRoundPlacementChanged__DelegateSignature");
		
		ASheikPlayerControllerCommon_OnRoundPlacementChanged__DelegateSignature_Params params {};
		params.NewPlace = NewPlace;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.OnRep_RoundPlacement
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::OnRep_RoundPlacement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.OnRep_RoundPlacement");
		
		ASheikPlayerControllerCommon_OnRep_RoundPlacement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.OnRep_MakeTeammatesVisible
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::OnRep_MakeTeammatesVisible()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.OnRep_MakeTeammatesVisible");
		
		ASheikPlayerControllerCommon_OnRep_MakeTeammatesVisible_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.OnPlayerSetAsTeamLeader
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsTeamLeader                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::OnPlayerSetAsTeamLeader(bool bIsTeamLeader)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.OnPlayerSetAsTeamLeader");
		
		ASheikPlayerControllerCommon_OnPlayerSetAsTeamLeader_Params params {};
		params.bIsTeamLeader = bIsTeamLeader;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPlayerControllerCommon.OnEnteredSpectatorMode__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::OnEnteredSpectatorMode__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPlayerControllerCommon.OnEnteredSpectatorMode__DelegateSignature");
		
		ASheikPlayerControllerCommon_OnEnteredSpectatorMode__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPlayerControllerCommon.OnCharacterPawnChanged__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikCharacter*                             SheikCharacter                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::OnCharacterPawnChanged__DelegateSignature(class ASheikCharacter* SheikCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPlayerControllerCommon.OnCharacterPawnChanged__DelegateSignature");
		
		ASheikPlayerControllerCommon_OnCharacterPawnChanged__DelegateSignature_Params params {};
		params.SheikCharacter = SheikCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPlayerControllerCommon.OnCharacterDied__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ECauseOfDeath                                      Cause                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::OnCharacterDied__DelegateSignature(ECauseOfDeath Cause)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPlayerControllerCommon.OnCharacterDied__DelegateSignature");
		
		ASheikPlayerControllerCommon_OnCharacterDied__DelegateSignature_Params params {};
		params.Cause = Cause;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPlayerControllerCommon.OnCharacterDamaged__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGInstanceHitData                          HitData                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::OnCharacterDamaged__DelegateSignature(const struct FIGInstanceHitData& HitData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPlayerControllerCommon.OnCharacterDamaged__DelegateSignature");
		
		ASheikPlayerControllerCommon_OnCharacterDamaged__DelegateSignature_Params params {};
		params.HitData = HitData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.LogServerStateInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FServerStateInfo                            StateInfo                                                  (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::LogServerStateInfo(const struct FServerStateInfo& StateInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.LogServerStateInfo");
		
		ASheikPlayerControllerCommon_LogServerStateInfo_Params params {};
		params.StateInfo = StateInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.IsPlayerInParty
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikPlayerStateCommon*                     InPlayerState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikPlayerControllerCommon::IsPlayerInParty(class ASheikPlayerStateCommon* InPlayerState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.IsPlayerInParty");
		
		ASheikPlayerControllerCommon_IsPlayerInParty_Params params {};
		params.InPlayerState = InPlayerState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.IsInTeam
	 * 		Flags  -> ()
	 */
	bool ASheikPlayerControllerCommon::IsInTeam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.IsInTeam");
		
		ASheikPlayerControllerCommon_IsInTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.IsCharacterMeshCached
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PlayerId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool ASheikPlayerControllerCommon::IsCharacterMeshCached(int32_t PlayerId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.IsCharacterMeshCached");
		
		ASheikPlayerControllerCommon_IsCharacterMeshCached_Params params {};
		params.PlayerId = PlayerId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.InformTeammateOfDeath
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ECauseOfDeath                                      Cause                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::InformTeammateOfDeath(ECauseOfDeath Cause)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.InformTeammateOfDeath");
		
		ASheikPlayerControllerCommon_InformTeammateOfDeath_Params params {};
		params.Cause = Cause;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.HasPlayerPlacementBeenProcessed
	 * 		Flags  -> ()
	 */
	bool ASheikPlayerControllerCommon::HasPlayerPlacementBeenProcessed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.HasPlayerPlacementBeenProcessed");
		
		ASheikPlayerControllerCommon_HasPlayerPlacementBeenProcessed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.HandleTeamInfoUpdatedWithoutLobby
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::HandleTeamInfoUpdatedWithoutLobby()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.HandleTeamInfoUpdatedWithoutLobby");
		
		ASheikPlayerControllerCommon_HandleTeamInfoUpdatedWithoutLobby_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.HandleTeamInfoUpdated
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::HandleTeamInfoUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.HandleTeamInfoUpdated");
		
		ASheikPlayerControllerCommon_HandleTeamInfoUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.HandleOnGameFlowStateChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EGameFlowState                                     GameFlowState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::HandleOnGameFlowStateChanged(EGameFlowState GameFlowState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.HandleOnGameFlowStateChanged");
		
		ASheikPlayerControllerCommon_HandleOnGameFlowStateChanged_Params params {};
		params.GameFlowState = GameFlowState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.HandleOnCharacterDied
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ECauseOfDeath                                      Cause                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::HandleOnCharacterDied(ECauseOfDeath Cause)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.HandleOnCharacterDied");
		
		ASheikPlayerControllerCommon_HandleOnCharacterDied_Params params {};
		params.Cause = Cause;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.GetTeammatesInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIncludeLocalPlayer                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<class AIGPlayerState*> ASheikPlayerControllerCommon::GetTeammatesInfo(bool bIncludeLocalPlayer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.GetTeammatesInfo");
		
		ASheikPlayerControllerCommon_GetTeammatesInfo_Params params {};
		params.bIncludeLocalPlayer = bIncludeLocalPlayer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.GetSheikXpSystem
	 * 		Flags  -> ()
	 */
	class USheikXpSystem* ASheikPlayerControllerCommon::GetSheikXpSystem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.GetSheikXpSystem");
		
		ASheikPlayerControllerCommon_GetSheikXpSystem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.GetSheikCharacter
	 * 		Flags  -> ()
	 */
	class ASheikCharacter* ASheikPlayerControllerCommon::GetSheikCharacter()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.GetSheikCharacter");
		
		ASheikPlayerControllerCommon_GetSheikCharacter_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.GetRoundPlacement
	 * 		Flags  -> ()
	 */
	int32_t ASheikPlayerControllerCommon::GetRoundPlacement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.GetRoundPlacement");
		
		ASheikPlayerControllerCommon_GetRoundPlacement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.GetNumTeammatesAlive
	 * 		Flags  -> ()
	 */
	int32_t ASheikPlayerControllerCommon::GetNumTeammatesAlive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.GetNumTeammatesAlive");
		
		ASheikPlayerControllerCommon_GetNumTeammatesAlive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.GetNumTeammates
	 * 		Flags  -> ()
	 */
	int32_t ASheikPlayerControllerCommon::GetNumTeammates()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.GetNumTeammates");
		
		ASheikPlayerControllerCommon_GetNumTeammates_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.GetLocalPlayerGameInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class USheikGameInfo* ASheikPlayerControllerCommon::GetLocalPlayerGameInfo(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.GetLocalPlayerGameInfo");
		
		ASheikPlayerControllerCommon_GetLocalPlayerGameInfo_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.GetAllowedPingVersion
	 * 		Flags  -> ()
	 */
	int32_t ASheikPlayerControllerCommon::GetAllowedPingVersion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.GetAllowedPingVersion");
		
		ASheikPlayerControllerCommon_GetAllowedPingVersion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ForceUserToMainMenu_BP
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ForceUserToMainMenu_BP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ForceUserToMainMenu_BP");
		
		ASheikPlayerControllerCommon_ForceUserToMainMenu_BP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.FlushKeys
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::FlushKeys()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.FlushKeys");
		
		ASheikPlayerControllerCommon_FlushKeys_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecUploadAllServerTrackedPlayerStats
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecUploadAllServerTrackedPlayerStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecUploadAllServerTrackedPlayerStats");
		
		ASheikPlayerControllerCommon_ExecUploadAllServerTrackedPlayerStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecToggleBotVisualization
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnable                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecToggleBotVisualization(bool bEnable)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecToggleBotVisualization");
		
		ASheikPlayerControllerCommon_ExecToggleBotVisualization_Params params {};
		params.bEnable = bEnable;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecToggleBotSpawnWithTreeOnPing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsEnabled                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ProfileToSpawn                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecToggleBotSpawnWithTreeOnPing(bool bIsEnabled, const class FString& ProfileToSpawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecToggleBotSpawnWithTreeOnPing");
		
		ASheikPlayerControllerCommon_ExecToggleBotSpawnWithTreeOnPing_Params params {};
		params.bIsEnabled = bIsEnabled;
		params.ProfileToSpawn = ProfileToSpawn;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecToggleBotSpawnOnPing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsEnabled                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ProfileToSpawn                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecToggleBotSpawnOnPing(bool bIsEnabled, const class FString& ProfileToSpawn)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecToggleBotSpawnOnPing");
		
		ASheikPlayerControllerCommon_ExecToggleBotSpawnOnPing_Params params {};
		params.bIsEnabled = bIsEnabled;
		params.ProfileToSpawn = ProfileToSpawn;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStoreXpInPlayerData
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecStoreXpInPlayerData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStoreXpInPlayerData");
		
		ASheikPlayerControllerCommon_ExecStoreXpInPlayerData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStopAllRepProgressOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               StopRepProgression                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecStopAllRepProgressOnServer(bool StopRepProgression)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStopAllRepProgressOnServer");
		
		ASheikPlayerControllerCommon_ExecStopAllRepProgressOnServer_Params params {};
		params.StopRepProgression = StopRepProgression;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStats_UploadSingle_Server
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecStats_UploadSingle_Server()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStats_UploadSingle_Server");
		
		ASheikPlayerControllerCommon_ExecStats_UploadSingle_Server_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStats_UnlockStatsForRead_Server
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecStats_UnlockStatsForRead_Server()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStats_UnlockStatsForRead_Server");
		
		ASheikPlayerControllerCommon_ExecStats_UnlockStatsForRead_Server_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStats_SetStatValue_Server
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        StatName                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecStats_SetStatValue_Server(const class FName& StatName, float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStats_SetStatValue_Server");
		
		ASheikPlayerControllerCommon_ExecStats_SetStatValue_Server_Params params {};
		params.StatName = StatName;
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStats_PrintStatsPlayerController_Server
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecStats_PrintStatsPlayerController_Server()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStats_PrintStatsPlayerController_Server");
		
		ASheikPlayerControllerCommon_ExecStats_PrintStatsPlayerController_Server_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStats_PrintStatsPlayerController_Client
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecStats_PrintStatsPlayerController_Client()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStats_PrintStatsPlayerController_Client");
		
		ASheikPlayerControllerCommon_ExecStats_PrintStatsPlayerController_Client_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStats_PrintComplexStats_Client
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecStats_PrintComplexStats_Client()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStats_PrintComplexStats_Client");
		
		ASheikPlayerControllerCommon_ExecStats_PrintComplexStats_Client_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStats_DownloadSingle_Server
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecStats_DownloadSingle_Server()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStats_DownloadSingle_Server");
		
		ASheikPlayerControllerCommon_ExecStats_DownloadSingle_Server_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStats_DownloadAll_Server
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecStats_DownloadAll_Server()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStats_DownloadAll_Server");
		
		ASheikPlayerControllerCommon_ExecStats_DownloadAll_Server_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStartServerHotfixCheck
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecStartServerHotfixCheck()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStartServerHotfixCheck");
		
		ASheikPlayerControllerCommon_ExecStartServerHotfixCheck_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStartPlayground
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecStartPlayground()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStartPlayground");
		
		ASheikPlayerControllerCommon_ExecStartPlayground_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStartFromMD_CurrentMap
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ModeDescriptor                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecStartFromMD_CurrentMap(const class FString& ModeDescriptor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStartFromMD_CurrentMap");
		
		ASheikPlayerControllerCommon_ExecStartFromMD_CurrentMap_Params params {};
		params.ModeDescriptor = ModeDescriptor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStartFromMD
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ModeDescriptor                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecStartFromMD(const class FString& ModeDescriptor)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStartFromMD");
		
		ASheikPlayerControllerCommon_ExecStartFromMD_Params params {};
		params.ModeDescriptor = ModeDescriptor;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStartCTF_NoMapTransition
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      NumPlayersPerTeam                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bKeepPartyID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bBackFillBots                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecStartCTF_NoMapTransition(unsigned char NumPlayersPerTeam, bool bKeepPartyID, bool bBackFillBots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStartCTF_NoMapTransition");
		
		ASheikPlayerControllerCommon_ExecStartCTF_NoMapTransition_Params params {};
		params.NumPlayersPerTeam = NumPlayersPerTeam;
		params.bKeepPartyID = bKeepPartyID;
		params.bBackFillBots = bBackFillBots;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStartBR_NoMapTransition
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      NumPlayersPerTeam                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bKeepPartyID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bBackFillBots                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecStartBR_NoMapTransition(unsigned char NumPlayersPerTeam, bool bKeepPartyID, bool bBackFillBots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStartBR_NoMapTransition");
		
		ASheikPlayerControllerCommon_ExecStartBR_NoMapTransition_Params params {};
		params.NumPlayersPerTeam = NumPlayersPerTeam;
		params.bKeepPartyID = bKeepPartyID;
		params.bBackFillBots = bBackFillBots;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecStartBR
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      NumPlayersPerTeam                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bKeepPartyID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecStartBR(unsigned char NumPlayersPerTeam, bool bKeepPartyID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecStartBR");
		
		ASheikPlayerControllerCommon_ExecStartBR_Params params {};
		params.NumPlayersPerTeam = NumPlayersPerTeam;
		params.bKeepPartyID = bKeepPartyID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecSkipCannons
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSkipCannons                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecSkipCannons(bool bSkipCannons)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecSkipCannons");
		
		ASheikPlayerControllerCommon_ExecSkipCannons_Params params {};
		params.bSkipCannons = bSkipCannons;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecSimulateLongTimeAway
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecSimulateLongTimeAway()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecSimulateLongTimeAway");
		
		ASheikPlayerControllerCommon_ExecSimulateLongTimeAway_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecSetTeammatesVisible
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bVisible                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecSetTeammatesVisible(bool bVisible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecSetTeammatesVisible");
		
		ASheikPlayerControllerCommon_ExecSetTeammatesVisible_Params params {};
		params.bVisible = bVisible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecSetNumBackfillBots
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NumBots                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecSetNumBackfillBots(int32_t NumBots)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecSetNumBackfillBots");
		
		ASheikPlayerControllerCommon_ExecSetNumBackfillBots_Params params {};
		params.NumBots = NumBots;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecSetNewPlayerPolicy
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bCanAcceptNewPlayers                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecSetNewPlayerPolicy(bool bCanAcceptNewPlayers)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecSetNewPlayerPolicy");
		
		ASheikPlayerControllerCommon_ExecSetNewPlayerPolicy_Params params {};
		params.bCanAcceptNewPlayers = bCanAcceptNewPlayers;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecSetNewFinalRoundBeacon
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      BeaconName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecSetNewFinalRoundBeacon(const class FString& BeaconName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecSetNewFinalRoundBeacon");
		
		ASheikPlayerControllerCommon_ExecSetNewFinalRoundBeacon_Params params {};
		params.BeaconName = BeaconName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecSetBRTeamMode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      TeamSize                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecSetBRTeamMode(unsigned char TeamSize)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecSetBRTeamMode");
		
		ASheikPlayerControllerCommon_ExecSetBRTeamMode_Params params {};
		params.TeamSize = TeamSize;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecSetAllowSpectateBots
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bAllow                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecSetAllowSpectateBots(bool bAllow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecSetAllowSpectateBots");
		
		ASheikPlayerControllerCommon_ExecSetAllowSpectateBots_Params params {};
		params.bAllow = bAllow;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecResetRingStateTimeline
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecResetRingStateTimeline()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecResetRingStateTimeline");
		
		ASheikPlayerControllerCommon_ExecResetRingStateTimeline_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecResetMatchXp
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecResetMatchXp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecResetMatchXp");
		
		ASheikPlayerControllerCommon_ExecResetMatchXp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecResetLifetimeXp
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecResetLifetimeXp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecResetLifetimeXp");
		
		ASheikPlayerControllerCommon_ExecResetLifetimeXp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecResetAdditionalXp
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecResetAdditionalXp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecResetAdditionalXp");
		
		ASheikPlayerControllerCommon_ExecResetAdditionalXp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecRep_SetRepProgress
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RepName                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            ProgressValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecRep_SetRepProgress(const class FName& RepName, int32_t ProgressValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecRep_SetRepProgress");
		
		ASheikPlayerControllerCommon_ExecRep_SetRepProgress_Params params {};
		params.RepName = RepName;
		params.ProgressValue = ProgressValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecRep_ResetAllRepProgressOnServer
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecRep_ResetAllRepProgressOnServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecRep_ResetAllRepProgressOnServer");
		
		ASheikPlayerControllerCommon_ExecRep_ResetAllRepProgressOnServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecRep_RemoveAllRepProgressOnServer
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecRep_RemoveAllRepProgressOnServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecRep_RemoveAllRepProgressOnServer");
		
		ASheikPlayerControllerCommon_ExecRep_RemoveAllRepProgressOnServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecRep_PrintRepProgressOnServer
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecRep_PrintRepProgressOnServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecRep_PrintRepProgressOnServer");
		
		ASheikPlayerControllerCommon_ExecRep_PrintRepProgressOnServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecRep_CompleteRepByNameOnServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RepName                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecRep_CompleteRepByNameOnServer(const class FName& RepName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecRep_CompleteRepByNameOnServer");
		
		ASheikPlayerControllerCommon_ExecRep_CompleteRepByNameOnServer_Params params {};
		params.RepName = RepName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecRep_CompleteAllRepsOnServer
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecRep_CompleteAllRepsOnServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecRep_CompleteAllRepsOnServer");
		
		ASheikPlayerControllerCommon_ExecRep_CompleteAllRepsOnServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecPinningEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecPinningEnabled(bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecPinningEnabled");
		
		ASheikPlayerControllerCommon_ExecPinningEnabled_Params params {};
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecLogServerHotfixVersion
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecLogServerHotfixVersion()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecLogServerHotfixVersion");
		
		ASheikPlayerControllerCommon_ExecLogServerHotfixVersion_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecLogPartyStatus
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecLogPartyStatus()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecLogPartyStatus");
		
		ASheikPlayerControllerCommon_ExecLogPartyStatus_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecLogCurrentXpValues
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecLogCurrentXpValues()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecLogCurrentXpValues");
		
		ASheikPlayerControllerCommon_ExecLogCurrentXpValues_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecLeaveTeam
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecLeaveTeam()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecLeaveTeam");
		
		ASheikPlayerControllerCommon_ExecLeaveTeam_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecGetServerStateInfo
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecGetServerStateInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecGetServerStateInfo");
		
		ASheikPlayerControllerCommon_ExecGetServerStateInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecForceResetRewards
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecForceResetRewards()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecForceResetRewards");
		
		ASheikPlayerControllerCommon_ExecForceResetRewards_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecFireRoundPlacementChangedDelegate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Placement                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecFireRoundPlacementChangedDelegate(int32_t Placement)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecFireRoundPlacementChangedDelegate");
		
		ASheikPlayerControllerCommon_ExecFireRoundPlacementChangedDelegate_Params params {};
		params.Placement = Placement;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecEnablePerkXP
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecEnablePerkXP(bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecEnablePerkXP");
		
		ASheikPlayerControllerCommon_ExecEnablePerkXP_Params params {};
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecDownloadAllServerTrackedPlayerStats
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecDownloadAllServerTrackedPlayerStats()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecDownloadAllServerTrackedPlayerStats");
		
		ASheikPlayerControllerCommon_ExecDownloadAllServerTrackedPlayerStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecDontGoToFreeRoamWhenRoundsEnds
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               NoFreeRoam                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecDontGoToFreeRoamWhenRoundsEnds(bool NoFreeRoam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecDontGoToFreeRoamWhenRoundsEnds");
		
		ASheikPlayerControllerCommon_ExecDontGoToFreeRoamWhenRoundsEnds_Params params {};
		params.NoFreeRoam = NoFreeRoam;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecDangerZoneEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecDangerZoneEnabled(bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecDangerZoneEnabled");
		
		ASheikPlayerControllerCommon_ExecDangerZoneEnabled_Params params {};
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecBotBackfillEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecBotBackfillEnabled(bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecBotBackfillEnabled");
		
		ASheikPlayerControllerCommon_ExecBotBackfillEnabled_Params params {};
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecAssignTeams
	 * 		Flags  -> ()
	 * Parameters:
	 * 		unsigned char                                      NumPlayersPerTeam                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecAssignTeams(unsigned char NumPlayersPerTeam)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecAssignTeams");
		
		ASheikPlayerControllerCommon_ExecAssignTeams_Params params {};
		params.NumPlayersPerTeam = NumPlayersPerTeam;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecAssignMeAsLeader
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ExecAssignMeAsLeader()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecAssignMeAsLeader");
		
		ASheikPlayerControllerCommon_ExecAssignMeAsLeader_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecAddRingStateToTimeline
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Radius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MorphTimeOffset                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              WaitTimeOffset                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              EventCountdownTimeOffset                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              EventTimeOffset                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              EventTimeEndOffset                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               WillRerollLoot                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecAddRingStateToTimeline(float Radius, float MorphTimeOffset, float WaitTimeOffset, float EventCountdownTimeOffset, float EventTimeOffset, float EventTimeEndOffset, bool WillRerollLoot)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecAddRingStateToTimeline");
		
		ASheikPlayerControllerCommon_ExecAddRingStateToTimeline_Params params {};
		params.Radius = Radius;
		params.MorphTimeOffset = MorphTimeOffset;
		params.WaitTimeOffset = WaitTimeOffset;
		params.EventCountdownTimeOffset = EventCountdownTimeOffset;
		params.EventTimeOffset = EventTimeOffset;
		params.EventTimeEndOffset = EventTimeEndOffset;
		params.WillRerollLoot = WillRerollLoot;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ExecAddAdditionalXp
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Value                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ExecAddAdditionalXp(float Value)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ExecAddAdditionalXp");
		
		ASheikPlayerControllerCommon_ExecAddAdditionalXp_Params params {};
		params.Value = Value;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.DebugTriggerRepAnnouncement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            CurrProgress                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            Target                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::DebugTriggerRepAnnouncement(int32_t CurrProgress, int32_t Target)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.DebugTriggerRepAnnouncement");
		
		ASheikPlayerControllerCommon_DebugTriggerRepAnnouncement_Params params {};
		params.CurrProgress = CurrProgress;
		params.Target = Target;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.DebugRequestBRTimelineString
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::DebugRequestBRTimelineString()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.DebugRequestBRTimelineString");
		
		ASheikPlayerControllerCommon_DebugRequestBRTimelineString_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.DebugReceiveBRTimelineString
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      TimelineString                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::DebugReceiveBRTimelineString(const class FString& TimelineString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.DebugReceiveBRTimelineString");
		
		ASheikPlayerControllerCommon_DebugReceiveBRTimelineString_Params params {};
		params.TimelineString = TimelineString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ClientTeammateKOInsuranceActivated
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ClientTeammateKOInsuranceActivated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ClientTeammateKOInsuranceActivated");
		
		ASheikPlayerControllerCommon_ClientTeammateKOInsuranceActivated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ClientStartAntiCheatSession
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ClientStartAntiCheatSession()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ClientStartAntiCheatSession");
		
		ASheikPlayerControllerCommon_ClientStartAntiCheatSession_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ClientRequestPlayerSpawnInfo
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ClientRequestPlayerSpawnInfo()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ClientRequestPlayerSpawnInfo");
		
		ASheikPlayerControllerCommon_ClientRequestPlayerSpawnInfo_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ClientReceiveAntiCheatMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<unsigned char>                              Data                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ClientReceiveAntiCheatMessage(TArray<unsigned char> Data)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ClientReceiveAntiCheatMessage");
		
		ASheikPlayerControllerCommon_ClientReceiveAntiCheatMessage_Params params {};
		params.Data = Data;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ClientProcessPingTypeAtLocation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EIGPingType                                        PingType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class ASheikPlayerStateCommon*                     OriginPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     PingLocation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     PingNormal                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UObject*                                     PingedObj                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ClientProcessPingTypeAtLocation(EIGPingType PingType, class ASheikPlayerStateCommon* OriginPlayerState, const struct FVector& PingLocation, const struct FVector& PingNormal, class UObject* PingedObj)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ClientProcessPingTypeAtLocation");
		
		ASheikPlayerControllerCommon_ClientProcessPingTypeAtLocation_Params params {};
		params.PingType = PingType;
		params.OriginPlayerState = OriginPlayerState;
		params.PingLocation = PingLocation;
		params.PingNormal = PingNormal;
		params.PingedObj = PingedObj;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ClientLogStatTransferSummary
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      SummaryString                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      GameSessionId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PlayerSessionId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ClientLogStatTransferSummary(const class FString& Filename, const class FString& SummaryString, const class FString& GameSessionId, const class FString& PlayerSessionId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ClientLogStatTransferSummary");
		
		ASheikPlayerControllerCommon_ClientLogStatTransferSummary_Params params {};
		params.Filename = Filename;
		params.SummaryString = SummaryString;
		params.GameSessionId = GameSessionId;
		params.PlayerSessionId = PlayerSessionId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ClientLogServerHotfixVersion
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            ServerVersion                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ClientLogServerHotfixVersion(int32_t ServerVersion)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ClientLogServerHotfixVersion");
		
		ASheikPlayerControllerCommon_ClientLogServerHotfixVersion_Params params {};
		params.ServerVersion = ServerVersion;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ClientLeavingGameSession
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ClientLeavingGameSession()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ClientLeavingGameSession");
		
		ASheikPlayerControllerCommon_ClientLeavingGameSession_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ClientForceUserToMainMenu
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ClientForceUserToMainMenu()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ClientForceUserToMainMenu");
		
		ASheikPlayerControllerCommon_ClientForceUserToMainMenu_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ClientAddFans
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              FansToGive                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EReasonFansAwarded                                 Reason                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ClientAddFans(float FansToGive, EReasonFansAwarded Reason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ClientAddFans");
		
		ASheikPlayerControllerCommon_ClientAddFans_Params params {};
		params.FansToGive = FansToGive;
		params.Reason = Reason;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ClientAcceptPlayerSessionPostLogin
	 * 		Flags  -> ()
	 * Parameters:
	 * 		uint32_t                                           PlayerUniqueID                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::ClientAcceptPlayerSessionPostLogin(uint32_t PlayerUniqueID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ClientAcceptPlayerSessionPostLogin");
		
		ASheikPlayerControllerCommon_ClientAcceptPlayerSessionPostLogin_Params params {};
		params.PlayerUniqueID = PlayerUniqueID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.ClearAllBots
	 * 		Flags  -> ()
	 */
	void ASheikPlayerControllerCommon::ClearAllBots()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.ClearAllBots");
		
		ASheikPlayerControllerCommon_ClearAllBots_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.BroadcastOnCharacterDied
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ECauseOfDeath                                      Cause                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::BroadcastOnCharacterDied(ECauseOfDeath Cause)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.BroadcastOnCharacterDied");
		
		ASheikPlayerControllerCommon_BroadcastOnCharacterDied_Params params {};
		params.Cause = Cause;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.BroadcastOnCharacterDamaged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGInstanceHitData                          HitData                                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::BroadcastOnCharacterDamaged(const struct FIGInstanceHitData& HitData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.BroadcastOnCharacterDamaged");
		
		ASheikPlayerControllerCommon_BroadcastOnCharacterDamaged_Params params {};
		params.HitData = HitData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.BRLaunchAllPlayers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      LocationName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerControllerCommon::BRLaunchAllPlayers(const class FString& LocationName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.BRLaunchAllPlayers");
		
		ASheikPlayerControllerCommon_BRLaunchAllPlayers_Params params {};
		params.LocationName = LocationName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerControllerCommon.AreAnyTeammatesAlive
	 * 		Flags  -> ()
	 */
	bool ASheikPlayerControllerCommon::AreAnyTeammatesAlive()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerControllerCommon.AreAnyTeammatesAlive");
		
		ASheikPlayerControllerCommon_AreAnyTeammatesAlive_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikPlayerControllerCommon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikPlayerControllerCommon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikPlayerControllerCommon");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.UpdateWalletAssetSeen
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        InWalletAssetId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bUploadData                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikPlayerData::UpdateWalletAssetSeen(const class FName& InWalletAssetId, bool bUploadData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.UpdateWalletAssetSeen");
		
		USheikPlayerData_UpdateWalletAssetSeen_Params params {};
		params.InWalletAssetId = InWalletAssetId;
		params.bUploadData = bUploadData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.UpdateCreatorCode
	 * 		Flags  -> ()
	 */
	void USheikPlayerData::UpdateCreatorCode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.UpdateCreatorCode");
		
		USheikPlayerData_UpdateCreatorCode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.SetCreatorCode
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      CreatorCode                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikPlayerData::SetCreatorCode(const class FString& CreatorCode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.SetCreatorCode");
		
		USheikPlayerData_SetCreatorCode_Params params {};
		params.CreatorCode = CreatorCode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.SetActiveCharacterLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            InActiveLoadout                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerData::SetActiveCharacterLoadout(int32_t InActiveLoadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.SetActiveCharacterLoadout");
		
		USheikPlayerData_SetActiveCharacterLoadout_Params params {};
		params.InActiveLoadout = InActiveLoadout;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.SaveStoreSeenItems
	 * 		Flags  -> ()
	 */
	void USheikPlayerData::SaveStoreSeenItems()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.SaveStoreSeenItems");
		
		USheikPlayerData_SaveStoreSeenItems_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.SaveEmoteIdList
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FName>                                EmoteIdList                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerData::SaveEmoteIdList(TArray<class FName> EmoteIdList)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.SaveEmoteIdList");
		
		USheikPlayerData_SaveEmoteIdList_Params params {};
		params.EmoteIdList = EmoteIdList;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.ResetCharacterProfileToDefault
	 * 		Flags  -> ()
	 */
	void USheikPlayerData::ResetCharacterProfileToDefault()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.ResetCharacterProfileToDefault");
		
		USheikPlayerData_ResetCharacterProfileToDefault_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.RemoveCharacterLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            SavedLoadoutIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerData::RemoveCharacterLoadout(int32_t SavedLoadoutIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.RemoveCharacterLoadout");
		
		USheikPlayerData_RemoveCharacterLoadout_Params params {};
		params.SavedLoadoutIndex = SavedLoadoutIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.OnPurchaseMultipleOffersComplete
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FName>                                WalletIds                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerData::OnPurchaseMultipleOffersComplete(TArray<class FName> WalletIds, bool bSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.OnPurchaseMultipleOffersComplete");
		
		USheikPlayerData_OnPurchaseMultipleOffersComplete_Params params {};
		params.WalletIds = WalletIds;
		params.bSuccessful = bSuccessful;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.OnEntitlementsOwnedRefreshedScrubLoadout
	 * 		Flags  -> ()
	 */
	void USheikPlayerData::OnEntitlementsOwnedRefreshedScrubLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.OnEntitlementsOwnedRefreshedScrubLoadout");
		
		USheikPlayerData_OnEntitlementsOwnedRefreshedScrubLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.HasWalletAssetBeenSeen
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        InWalletAssetId                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikPlayerData::HasWalletAssetBeenSeen(const class FName& InWalletAssetId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.HasWalletAssetBeenSeen");
		
		USheikPlayerData_HasWalletAssetBeenSeen_Params params {};
		params.InWalletAssetId = InWalletAssetId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.HandlePresetsWithInvalidIndex
	 * 		Flags  -> ()
	 */
	void USheikPlayerData::HandlePresetsWithInvalidIndex()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.HandlePresetsWithInvalidIndex");
		
		USheikPlayerData_HandlePresetsWithInvalidIndex_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.HandleOnGameFlowStateChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EGameFlowState                                     NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerData::HandleOnGameFlowStateChanged(EGameFlowState NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.HandleOnGameFlowStateChanged");
		
		USheikPlayerData_HandleOnGameFlowStateChanged_Params params {};
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetUnseenItemIds
	 * 		Flags  -> ()
	 */
	void USheikPlayerData::GetUnseenItemIds()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetUnseenItemIds");
		
		USheikPlayerData_GetUnseenItemIds_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetTitleCardLoadoutIds
	 * 		Flags  -> ()
	 */
	struct FTitleCardLoadoutIds USheikPlayerData::GetTitleCardLoadoutIds()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetTitleCardLoadoutIds");
		
		USheikPlayerData_GetTitleCardLoadoutIds_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetTimeTillNextReroll
	 * 		Flags  -> ()
	 */
	struct FTimespan USheikPlayerData::GetTimeTillNextReroll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetTimeTillNextReroll");
		
		USheikPlayerData_GetTimeTillNextReroll_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetTimeTillNextRepAllowance
	 * 		Flags  -> ()
	 */
	struct FTimespan USheikPlayerData::GetTimeTillNextRepAllowance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetTimeTillNextRepAllowance");
		
		USheikPlayerData_GetTimeTillNextRepAllowance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetRerollAllowance
	 * 		Flags  -> ()
	 */
	int32_t USheikPlayerData::GetRerollAllowance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetRerollAllowance");
		
		USheikPlayerData_GetRerollAllowance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetRepsQueued
	 * 		Flags  -> ()
	 */
	int32_t USheikPlayerData::GetRepsQueued()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetRepsQueued");
		
		USheikPlayerData_GetRepsQueued_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetRecentPlayers
	 * 		Flags  -> ()
	 */
	struct FRecentPlayers USheikPlayerData::GetRecentPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetRecentPlayers");
		
		USheikPlayerData_GetRecentPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetNumCharacterLoadouts
	 * 		Flags  -> ()
	 */
	int32_t USheikPlayerData::GetNumCharacterLoadouts()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetNumCharacterLoadouts");
		
		USheikPlayerData_GetNumCharacterLoadouts_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetNeedsFirstTimeReps
	 * 		Flags  -> ()
	 */
	bool USheikPlayerData::GetNeedsFirstTimeReps()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetNeedsFirstTimeReps");
		
		USheikPlayerData_GetNeedsFirstTimeReps_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetMaxRerollAllowance
	 * 		Flags  -> ()
	 */
	int32_t USheikPlayerData::GetMaxRerollAllowance()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetMaxRerollAllowance");
		
		USheikPlayerData_GetMaxRerollAllowance_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetMaxNumberOfRepsAllowedToTrack
	 * 		Flags  -> ()
	 */
	int32_t USheikPlayerData::GetMaxNumberOfRepsAllowedToTrack()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetMaxNumberOfRepsAllowedToTrack");
		
		USheikPlayerData_GetMaxNumberOfRepsAllowedToTrack_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetLastTimeRepAllowanceUpdated
	 * 		Flags  -> ()
	 */
	struct FDateTime USheikPlayerData::GetLastTimeRepAllowanceUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetLastTimeRepAllowanceUpdated");
		
		USheikPlayerData_GetLastTimeRepAllowanceUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetLastTimeGainedReroll
	 * 		Flags  -> ()
	 */
	struct FDateTime USheikPlayerData::GetLastTimeGainedReroll()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetLastTimeGainedReroll");
		
		USheikPlayerData_GetLastTimeGainedReroll_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetEmoteIdList
	 * 		Flags  -> ()
	 */
	TArray<class FName> USheikPlayerData::GetEmoteIdList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetEmoteIdList");
		
		USheikPlayerData_GetEmoteIdList_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetCreatorCode
	 * 		Flags  -> ()
	 */
	class FString USheikPlayerData::GetCreatorCode()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetCreatorCode");
		
		USheikPlayerData_GetCreatorCode_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetCharacterProfile
	 * 		Flags  -> ()
	 */
	struct FCharacterProfile USheikPlayerData::GetCharacterProfile()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetCharacterProfile");
		
		USheikPlayerData_GetCharacterProfile_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.GetActiveCharacterLoadoutBP
	 * 		Flags  -> ()
	 */
	struct FCharacterLoadout USheikPlayerData::GetActiveCharacterLoadoutBP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.GetActiveCharacterLoadoutBP");
		
		USheikPlayerData_GetActiveCharacterLoadoutBP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.DoesLoadoutExist
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      InLoadoutName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikPlayerData::DoesLoadoutExist(const class FString& InLoadoutName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.DoesLoadoutExist");
		
		USheikPlayerData_DoesLoadoutExist_Params params {};
		params.InLoadoutName = InLoadoutName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.bHasMaxRerolls
	 * 		Flags  -> ()
	 */
	bool USheikPlayerData::bHasMaxRerolls()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.bHasMaxRerolls");
		
		USheikPlayerData_bHasMaxRerolls_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerData.AddNewCharacterLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bMakeActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bUpload                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t USheikPlayerData::AddNewCharacterLoadout(bool bMakeActive, bool bUpload)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerData.AddNewCharacterLoadout");
		
		USheikPlayerData_AddNewCharacterLoadout_Params params {};
		params.bMakeActive = bMakeActive;
		params.bUpload = bUpload;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikPlayerData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikPlayerData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikPlayerData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.UploadServerTrackedStatsSinglePlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikPlayerDataManager::UploadServerTrackedStatsSinglePlayer(class APlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.UploadServerTrackedStatsSinglePlayer");
		
		USheikPlayerDataManager_UploadServerTrackedStatsSinglePlayer_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.UploadServerTrackedStatsAllPlayers
	 * 		Flags  -> ()
	 */
	bool USheikPlayerDataManager::UploadServerTrackedStatsAllPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.UploadServerTrackedStatsAllPlayers");
		
		USheikPlayerDataManager_UploadServerTrackedStatsAllPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.UploadPlayerData
	 * 		Flags  -> ()
	 */
	bool USheikPlayerDataManager::UploadPlayerData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.UploadPlayerData");
		
		USheikPlayerDataManager_UploadPlayerData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.UploadClientTrackedStatsAllPlayers
	 * 		Flags  -> ()
	 */
	bool USheikPlayerDataManager::UploadClientTrackedStatsAllPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.UploadClientTrackedStatsAllPlayers");
		
		USheikPlayerDataManager_UploadClientTrackedStatsAllPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.UploadCharacterProfileData
	 * 		Flags  -> ()
	 */
	bool USheikPlayerDataManager::UploadCharacterProfileData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.UploadCharacterProfileData");
		
		USheikPlayerDataManager_UploadCharacterProfileData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.OnUploadStatsSingle_Server_Completed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ErrorString                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerDataManager::OnUploadStatsSingle_Server_Completed(bool bSuccess, const class FString& ErrorString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.OnUploadStatsSingle_Server_Completed");
		
		USheikPlayerDataManager_OnUploadStatsSingle_Server_Completed_Params params {};
		params.bSuccess = bSuccess;
		params.ErrorString = ErrorString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.OnUploadStatsSingle_Client_Completed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ErrorString                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerDataManager::OnUploadStatsSingle_Client_Completed(bool bSuccess, const class FString& ErrorString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.OnUploadStatsSingle_Client_Completed");
		
		USheikPlayerDataManager_OnUploadStatsSingle_Client_Completed_Params params {};
		params.bSuccess = bSuccess;
		params.ErrorString = ErrorString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.OnDownloadStatsSingle_Server_Completed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ErrorString                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerDataManager::OnDownloadStatsSingle_Server_Completed(bool bSuccess, const class FString& ErrorString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.OnDownloadStatsSingle_Server_Completed");
		
		USheikPlayerDataManager_OnDownloadStatsSingle_Server_Completed_Params params {};
		params.bSuccess = bSuccess;
		params.ErrorString = ErrorString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.OnDownloadStatsSingle_Client_Completed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ErrorString                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerDataManager::OnDownloadStatsSingle_Client_Completed(bool bSuccess, const class FString& ErrorString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.OnDownloadStatsSingle_Client_Completed");
		
		USheikPlayerDataManager_OnDownloadStatsSingle_Client_Completed_Params params {};
		params.bSuccess = bSuccess;
		params.ErrorString = ErrorString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.OnDownloadStatsAll_Server_Completed
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccess                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      ErrorString                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPlayerDataManager::OnDownloadStatsAll_Server_Completed(bool bSuccess, const class FString& ErrorString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.OnDownloadStatsAll_Server_Completed");
		
		USheikPlayerDataManager_OnDownloadStatsAll_Server_Completed_Params params {};
		params.bSuccess = bSuccess;
		params.ErrorString = ErrorString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.HasPlayerDataDownloadedAtLeastOnce
	 * 		Flags  -> ()
	 */
	bool USheikPlayerDataManager::HasPlayerDataDownloadedAtLeastOnce()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.HasPlayerDataDownloadedAtLeastOnce");
		
		USheikPlayerDataManager_HasPlayerDataDownloadedAtLeastOnce_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.DownloadSkillDataSinglePlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikPlayerDataManager::DownloadSkillDataSinglePlayer(class APlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.DownloadSkillDataSinglePlayer");
		
		USheikPlayerDataManager_DownloadSkillDataSinglePlayer_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.DownloadSkillDataForLoginUpdate
	 * 		Flags  -> ()
	 */
	bool USheikPlayerDataManager::DownloadSkillDataForLoginUpdate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.DownloadSkillDataForLoginUpdate");
		
		USheikPlayerDataManager_DownloadSkillDataForLoginUpdate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.DownloadSkillDataAllPlayers
	 * 		Flags  -> ()
	 */
	bool USheikPlayerDataManager::DownloadSkillDataAllPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.DownloadSkillDataAllPlayers");
		
		USheikPlayerDataManager_DownloadSkillDataAllPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.DownloadServerTrackedStatsSinglePlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerController*                           PlayerController                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikPlayerDataManager::DownloadServerTrackedStatsSinglePlayer(class APlayerController* PlayerController)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.DownloadServerTrackedStatsSinglePlayer");
		
		USheikPlayerDataManager_DownloadServerTrackedStatsSinglePlayer_Params params {};
		params.PlayerController = PlayerController;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.DownloadServerTrackedStatsDirectlyToClient
	 * 		Flags  -> ()
	 */
	bool USheikPlayerDataManager::DownloadServerTrackedStatsDirectlyToClient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.DownloadServerTrackedStatsDirectlyToClient");
		
		USheikPlayerDataManager_DownloadServerTrackedStatsDirectlyToClient_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.DownloadServerTrackedStatsAllPlayers
	 * 		Flags  -> ()
	 */
	bool USheikPlayerDataManager::DownloadServerTrackedStatsAllPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.DownloadServerTrackedStatsAllPlayers");
		
		USheikPlayerDataManager_DownloadServerTrackedStatsAllPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.DownloadPlayerRepDataToTheServer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FString>                              PlayerIds                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool USheikPlayerDataManager::DownloadPlayerRepDataToTheServer(TArray<class FString>* PlayerIds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.DownloadPlayerRepDataToTheServer");
		
		USheikPlayerDataManager_DownloadPlayerRepDataToTheServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (PlayerIds != nullptr)
			*PlayerIds = params.PlayerIds;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.DownloadPlayerDataDirectlyToTheClient
	 * 		Flags  -> ()
	 */
	bool USheikPlayerDataManager::DownloadPlayerDataDirectlyToTheClient()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.DownloadPlayerDataDirectlyToTheClient");
		
		USheikPlayerDataManager_DownloadPlayerDataDirectlyToTheClient_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.DownloadClientTrackedStatsSinglePlayer
	 * 		Flags  -> ()
	 */
	bool USheikPlayerDataManager::DownloadClientTrackedStatsSinglePlayer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.DownloadClientTrackedStatsSinglePlayer");
		
		USheikPlayerDataManager_DownloadClientTrackedStatsSinglePlayer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerDataManager.DownloadClientTrackedStatsAllPlayers
	 * 		Flags  -> ()
	 */
	bool USheikPlayerDataManager::DownloadClientTrackedStatsAllPlayers()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerDataManager.DownloadClientTrackedStatsAllPlayers");
		
		USheikPlayerDataManager_DownloadClientTrackedStatsAllPlayers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikPlayerDataManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikPlayerDataManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikPlayerDataManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikPlayerInput.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikPlayerInput::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikPlayerInput");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikSkillCalculationSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikSkillCalculationSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikSkillCalculationSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikMatchmakingSkillData.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikMatchmakingSkillData::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikMatchmakingSkillData");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerSkillManager.OnRep_SkillData
	 * 		Flags  -> ()
	 */
	void USheikPlayerSkillManager::OnRep_SkillData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerSkillManager.OnRep_SkillData");
		
		USheikPlayerSkillManager_OnRep_SkillData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerSkillManager.OnRep_IsUploadingDataFromServer
	 * 		Flags  -> ()
	 */
	void USheikPlayerSkillManager::OnRep_IsUploadingDataFromServer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerSkillManager.OnRep_IsUploadingDataFromServer");
		
		USheikPlayerSkillManager_OnRep_IsUploadingDataFromServer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikPlayerSkillManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikPlayerSkillManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikPlayerSkillManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.UpdateWithDeath
	 * 		Flags  -> ()
	 */
	void ASheikPlayerStateCommon::UpdateWithDeath()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.UpdateWithDeath");
		
		ASheikPlayerStateCommon_UpdateWithDeath_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.UpdatePlatformAccountInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      CozmoId                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikPlatform                                     Platform                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikPlatformService                              PlatformService                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PlatformId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      PlatformName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      InEosId                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      InProductId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::UpdatePlatformAccountInfo(const class FString& CozmoId, ESheikPlatform Platform, ESheikPlatformService PlatformService, const class FString& PlatformId, const class FString& PlatformName, const class FString& InEosId, const class FString& InProductId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.UpdatePlatformAccountInfo");
		
		ASheikPlayerStateCommon_UpdatePlatformAccountInfo_Params params {};
		params.CozmoId = CozmoId;
		params.Platform = Platform;
		params.PlatformService = PlatformService;
		params.PlatformId = PlatformId;
		params.PlatformName = PlatformName;
		params.InEosId = InEosId;
		params.InProductId = InProductId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.UpdatePawnLocationAndRotation
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     PawnLocation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FRotator                                    PawnRotation                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::UpdatePawnLocationAndRotation(const struct FVector& PawnLocation, const struct FRotator& PawnRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.UpdatePawnLocationAndRotation");
		
		ASheikPlayerStateCommon_UpdatePawnLocationAndRotation_Params params {};
		params.PawnLocation = PawnLocation;
		params.PawnRotation = PawnRotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.UpdateModValues
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              ArmValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              CoreValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              LegsValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              MaxModValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::UpdateModValues(float ArmValue, float CoreValue, float LegsValue, float MaxModValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.UpdateModValues");
		
		ASheikPlayerStateCommon_UpdateModValues_Params params {};
		params.ArmValue = ArmValue;
		params.CoreValue = CoreValue;
		params.LegsValue = LegsValue;
		params.MaxModValue = MaxModValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.UpdateHealth
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              HealthPercetange                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              HealthMax                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::UpdateHealth(float HealthPercetange, float HealthMax)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.UpdateHealth");
		
		ASheikPlayerStateCommon_UpdateHealth_Params params {};
		params.HealthPercetange = HealthPercetange;
		params.HealthMax = HealthMax;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.UpdateDownedInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsDBNO                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              DownedTimeLeft                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::UpdateDownedInfo(bool bIsDBNO, float DownedTimeLeft)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.UpdateDownedInfo");
		
		ASheikPlayerStateCommon_UpdateDownedInfo_Params params {};
		params.bIsDBNO = bIsDBNO;
		params.DownedTimeLeft = DownedTimeLeft;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.SetTitleCardLoadOutIds
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTitleCardLoadoutIds                        InTitleCardLoadoutIds                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                InStatsToTrack                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                InSeasonalStatBaseNames                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                InSeasonalFields                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::SetTitleCardLoadOutIds(const struct FTitleCardLoadoutIds& InTitleCardLoadoutIds, TArray<class FName> InStatsToTrack, TArray<class FName> InSeasonalStatBaseNames, TArray<class FName> InSeasonalFields)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.SetTitleCardLoadOutIds");
		
		ASheikPlayerStateCommon_SetTitleCardLoadOutIds_Params params {};
		params.InTitleCardLoadoutIds = InTitleCardLoadoutIds;
		params.InStatsToTrack = InStatsToTrack;
		params.InSeasonalStatBaseNames = InSeasonalStatBaseNames;
		params.InSeasonalFields = InSeasonalFields;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.SetShowSpectatorWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bShow                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::SetShowSpectatorWidget(bool bShow)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.SetShowSpectatorWidget");
		
		ASheikPlayerStateCommon_SetShowSpectatorWidget_Params params {};
		params.bShow = bShow;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.ServerUpdateAllowRepProgression
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               InAllowRepProgression                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::ServerUpdateAllowRepProgression(bool InAllowRepProgression)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.ServerUpdateAllowRepProgression");
		
		ASheikPlayerStateCommon_ServerUpdateAllowRepProgression_Params params {};
		params.InAllowRepProgression = InAllowRepProgression;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.ServerUpdateAllowAchievementToUpdate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bCanUpdateAchievements                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::ServerUpdateAllowAchievementToUpdate(bool bCanUpdateAchievements)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.ServerUpdateAllowAchievementToUpdate");
		
		ASheikPlayerStateCommon_ServerUpdateAllowAchievementToUpdate_Params params {};
		params.bCanUpdateAchievements = bCanUpdateAchievements;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.ServerSpectator_UpdateIsOnConsole
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               IsOnConsole                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::ServerSpectator_UpdateIsOnConsole(bool IsOnConsole)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.ServerSpectator_UpdateIsOnConsole");
		
		ASheikPlayerStateCommon_ServerSpectator_UpdateIsOnConsole_Params params {};
		params.IsOnConsole = IsOnConsole;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.ServerSetEOSLobbyStatus
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EEOSLobbyStatus                                    InStatus                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::ServerSetEOSLobbyStatus(EEOSLobbyStatus InStatus)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.ServerSetEOSLobbyStatus");
		
		ASheikPlayerStateCommon_ServerSetEOSLobbyStatus_Params params {};
		params.InStatus = InStatus;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPlayerStateCommon.OnSpectatorInfoUpdated__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikSpectatorInfo                         NewSpectatorInfo                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::OnSpectatorInfoUpdated__DelegateSignature(const struct FSheikSpectatorInfo& NewSpectatorInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPlayerStateCommon.OnSpectatorInfoUpdated__DelegateSignature");
		
		ASheikPlayerStateCommon_OnSpectatorInfoUpdated__DelegateSignature_Params params {};
		params.NewSpectatorInfo = NewSpectatorInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.OnRep_RepSystem
	 * 		Flags  -> ()
	 */
	void ASheikPlayerStateCommon::OnRep_RepSystem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.OnRep_RepSystem");
		
		ASheikPlayerStateCommon_OnRep_RepSystem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.OnRep_OnSpectatorInfoUpdated
	 * 		Flags  -> ()
	 */
	void ASheikPlayerStateCommon::OnRep_OnSpectatorInfoUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.OnRep_OnSpectatorInfoUpdated");
		
		ASheikPlayerStateCommon_OnRep_OnSpectatorInfoUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.OnRep_OnLobbyStatusUpdated
	 * 		Flags  -> ()
	 */
	void ASheikPlayerStateCommon::OnRep_OnLobbyStatusUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.OnRep_OnLobbyStatusUpdated");
		
		ASheikPlayerStateCommon_OnRep_OnLobbyStatusUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.OnRep_OnLaunchControlUpdated
	 * 		Flags  -> ()
	 */
	void ASheikPlayerStateCommon::OnRep_OnLaunchControlUpdated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.OnRep_OnLaunchControlUpdated");
		
		ASheikPlayerStateCommon_OnRep_OnLaunchControlUpdated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.OnRep_AllTeammatesID
	 * 		Flags  -> ()
	 */
	void ASheikPlayerStateCommon::OnRep_AllTeammatesID()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.OnRep_AllTeammatesID");
		
		ASheikPlayerStateCommon_OnRep_AllTeammatesID_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPlayerStateCommon.OnPlayerDied__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikPlayerStateCommon::OnPlayerDied__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPlayerStateCommon.OnPlayerDied__DelegateSignature");
		
		ASheikPlayerStateCommon_OnPlayerDied__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPlayerStateCommon.OnNameUpdated__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikPlayerStateCommon::OnNameUpdated__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPlayerStateCommon.OnNameUpdated__DelegateSignature");
		
		ASheikPlayerStateCommon_OnNameUpdated__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPlayerStateCommon.OnLobbyStatusUpdated__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikPlayerStateCommon::OnLobbyStatusUpdated__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPlayerStateCommon.OnLobbyStatusUpdated__DelegateSignature");
		
		ASheikPlayerStateCommon_OnLobbyStatusUpdated__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPlayerStateCommon.OnLaunchControlUpdated__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bNewLaunchControlValue                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::OnLaunchControlUpdated__DelegateSignature(bool bNewLaunchControlValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPlayerStateCommon.OnLaunchControlUpdated__DelegateSignature");
		
		ASheikPlayerStateCommon_OnLaunchControlUpdated__DelegateSignature_Params params {};
		params.bNewLaunchControlValue = bNewLaunchControlValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.MulticastPlayerStateDeath
	 * 		Flags  -> ()
	 */
	void ASheikPlayerStateCommon::MulticastPlayerStateDeath()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.MulticastPlayerStateDeath");
		
		ASheikPlayerStateCommon_MulticastPlayerStateDeath_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.GetSkillManager
	 * 		Flags  -> ()
	 */
	class USheikPlayerSkillManager* ASheikPlayerStateCommon::GetSkillManager()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.GetSkillManager");
		
		ASheikPlayerStateCommon_GetSkillManager_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.GetRepSystem
	 * 		Flags  -> ()
	 */
	class USheikRepSystem* ASheikPlayerStateCommon::GetRepSystem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.GetRepSystem");
		
		ASheikPlayerStateCommon_GetRepSystem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.GetPlayerStatePawn
	 * 		Flags  -> ()
	 */
	class APawn* ASheikPlayerStateCommon::GetPlayerStatePawn()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.GetPlayerStatePawn");
		
		ASheikPlayerStateCommon_GetPlayerStatePawn_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.ClientTriggerPlayerSkillDataUpdate
	 * 		Flags  -> ()
	 */
	void ASheikPlayerStateCommon::ClientTriggerPlayerSkillDataUpdate()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.ClientTriggerPlayerSkillDataUpdate");
		
		ASheikPlayerStateCommon_ClientTriggerPlayerSkillDataUpdate_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.ClientSetAllowAchievementToUpdate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bCanUpdateAchievements                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::ClientSetAllowAchievementToUpdate(bool bCanUpdateAchievements)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.ClientSetAllowAchievementToUpdate");
		
		ASheikPlayerStateCommon_ClientSetAllowAchievementToUpdate_Params params {};
		params.bCanUpdateAchievements = bCanUpdateAchievements;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.ClientRepThresholdMetNotify
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FRepUIData>                          NotificationReps                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::ClientRepThresholdMetNotify(TArray<struct FRepUIData> NotificationReps)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.ClientRepThresholdMetNotify");
		
		ASheikPlayerStateCommon_ClientRepThresholdMetNotify_Params params {};
		params.NotificationReps = NotificationReps;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.ClientOnConsoleCheck
	 * 		Flags  -> ()
	 */
	void ASheikPlayerStateCommon::ClientOnConsoleCheck()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.ClientOnConsoleCheck");
		
		ASheikPlayerStateCommon_ClientOnConsoleCheck_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.ClientCheckAllowRepProgression
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               InAllowRepProgression                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::ClientCheckAllowRepProgression(bool InAllowRepProgression)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.ClientCheckAllowRepProgression");
		
		ASheikPlayerStateCommon_ClientCheckAllowRepProgression_Params params {};
		params.InAllowRepProgression = InAllowRepProgression;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.ClientCheckAllowAchievementToUpdate
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bCanUpdateAchievements                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikPlayerStateCommon::ClientCheckAllowAchievementToUpdate(bool bCanUpdateAchievements)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.ClientCheckAllowAchievementToUpdate");
		
		ASheikPlayerStateCommon_ClientCheckAllowAchievementToUpdate_Params params {};
		params.bCanUpdateAchievements = bCanUpdateAchievements;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.Client_LoadRepData
	 * 		Flags  -> ()
	 */
	void ASheikPlayerStateCommon::Client_LoadRepData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.Client_LoadRepData");
		
		ASheikPlayerStateCommon_Client_LoadRepData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlayerStateCommon.AreCharacterMeshesValidForCapture
	 * 		Flags  -> ()
	 */
	bool ASheikPlayerStateCommon::AreCharacterMeshesValidForCapture()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlayerStateCommon.AreCharacterMeshesValidForCapture");
		
		ASheikPlayerStateCommon_AreCharacterMeshesValidForCapture_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikPlayerStateCommon.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikPlayerStateCommon::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikPlayerStateCommon");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlaygroundPopupScreen.UnbindCharacterDelegates
	 * 		Flags  -> ()
	 */
	void USheikPlaygroundPopupScreen::UnbindCharacterDelegates()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlaygroundPopupScreen.UnbindCharacterDelegates");
		
		USheikPlaygroundPopupScreen_UnbindCharacterDelegates_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlaygroundPopupScreen.ShowNewPlaygroundPopup
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDataTableRowHandle                         InPopupRowHandle                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikPlaygroundPopupScreen::ShowNewPlaygroundPopup(const struct FDataTableRowHandle& InPopupRowHandle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlaygroundPopupScreen.ShowNewPlaygroundPopup");
		
		USheikPlaygroundPopupScreen_ShowNewPlaygroundPopup_Params params {};
		params.InPopupRowHandle = InPopupRowHandle;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlaygroundPopupScreen.OnLoadFailed
	 * 		Flags  -> ()
	 */
	void USheikPlaygroundPopupScreen::OnLoadFailed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlaygroundPopupScreen.OnLoadFailed");
		
		USheikPlaygroundPopupScreen_OnLoadFailed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlaygroundPopupScreen.LogStatusMessage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      InMessage                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPlaygroundPopupScreen::LogStatusMessage(const class FString& InMessage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlaygroundPopupScreen.LogStatusMessage");
		
		USheikPlaygroundPopupScreen_LogStatusMessage_Params params {};
		params.InMessage = InMessage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlaygroundPopupScreen.LoadPopupMovie
	 * 		Flags  -> ()
	 */
	void USheikPlaygroundPopupScreen::LoadPopupMovie()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlaygroundPopupScreen.LoadPopupMovie");
		
		USheikPlaygroundPopupScreen_LoadPopupMovie_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlaygroundPopupScreen.LoadPopupImage
	 * 		Flags  -> ()
	 */
	void USheikPlaygroundPopupScreen::LoadPopupImage()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlaygroundPopupScreen.LoadPopupImage");
		
		USheikPlaygroundPopupScreen_LoadPopupImage_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlaygroundPopupScreen.HandleOnLoadComplete
	 * 		Flags  -> ()
	 */
	void USheikPlaygroundPopupScreen::HandleOnLoadComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlaygroundPopupScreen.HandleOnLoadComplete");
		
		USheikPlaygroundPopupScreen_HandleOnLoadComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlaygroundPopupScreen.HandleOnCharacterDied
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ECauseOfDeath                                      CauseOfDeath                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPlaygroundPopupScreen::HandleOnCharacterDied(ECauseOfDeath CauseOfDeath)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlaygroundPopupScreen.HandleOnCharacterDied");
		
		USheikPlaygroundPopupScreen_HandleOnCharacterDied_Params params {};
		params.CauseOfDeath = CauseOfDeath;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlaygroundPopupScreen.Dismiss
	 * 		Flags  -> ()
	 */
	void USheikPlaygroundPopupScreen::Dismiss()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlaygroundPopupScreen.Dismiss");
		
		USheikPlaygroundPopupScreen_Dismiss_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlaygroundPopupScreen.ClosePlaygroundPopupScreen
	 * 		Flags  -> ()
	 */
	void USheikPlaygroundPopupScreen::ClosePlaygroundPopupScreen()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlaygroundPopupScreen.ClosePlaygroundPopupScreen");
		
		USheikPlaygroundPopupScreen_ClosePlaygroundPopupScreen_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlaygroundPopupScreen.CloseFullscreenPopup
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FDataTableRowHandle                         InPopupRowHandle                                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikPlaygroundPopupScreen::CloseFullscreenPopup(const struct FDataTableRowHandle& InPopupRowHandle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlaygroundPopupScreen.CloseFullscreenPopup");
		
		USheikPlaygroundPopupScreen_CloseFullscreenPopup_Params params {};
		params.InPopupRowHandle = InPopupRowHandle;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPlaygroundPopupScreen.BindToCharacterDelegates
	 * 		Flags  -> ()
	 */
	void USheikPlaygroundPopupScreen::BindToCharacterDelegates()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPlaygroundPopupScreen.BindToCharacterDelegates");
		
		USheikPlaygroundPopupScreen_BindToCharacterDelegates_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikPlaygroundPopupScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikPlaygroundPopupScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikPlaygroundPopupScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.ShowPopup
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FPopupQueueData                             PopupData                                                  (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USheikPopupSystem::ShowPopup(const struct FPopupQueueData& PopupData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.ShowPopup");
		
		USheikPopupSystem_ShowPopup_Params params {};
		params.PopupData = PopupData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.ShowNextPopup
	 * 		Flags  -> ()
	 */
	void USheikPopupSystem::ShowNextPopup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.ShowNextPopup");
		
		USheikPopupSystem_ShowNextPopup_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.SetUpLegendInput
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPopupSystem::SetUpLegendInput(int32_t ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.SetUpLegendInput");
		
		USheikPopupSystem_SetUpLegendInput_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.SetPopupWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PopupId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UIGUI_WidgetBase*                            PopupWidget                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPopupSystem::SetPopupWidget(int32_t PopupId, class UIGUI_WidgetBase* PopupWidget)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.SetPopupWidget");
		
		USheikPopupSystem_SetPopupWidget_Params params {};
		params.PopupId = PopupId;
		params.PopupWidget = PopupWidget;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.SetHeaderText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PopupId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        HeaderText                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void USheikPopupSystem::SetHeaderText(int32_t PopupId, const class FText& HeaderText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.SetHeaderText");
		
		USheikPopupSystem_SetHeaderText_Params params {};
		params.PopupId = PopupId;
		params.HeaderText = HeaderText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.SetDimBackground
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PopupId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               DimBackground                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPopupSystem::SetDimBackground(int32_t PopupId, bool DimBackground)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.SetDimBackground");
		
		USheikPopupSystem_SetDimBackground_Params params {};
		params.PopupId = PopupId;
		params.DimBackground = DimBackground;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.SetBodyText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PopupId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        BodyText                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	void USheikPopupSystem::SetBodyText(int32_t PopupId, const class FText& BodyText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.SetBodyText");
		
		USheikPopupSystem_SetBodyText_Params params {};
		params.PopupId = PopupId;
		params.BodyText = BodyText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.RemoveLegendPrompts
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PopupId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPopupSystem::RemoveLegendPrompts(int32_t PopupId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.RemoveLegendPrompts");
		
		USheikPopupSystem_RemoveLegendPrompts_Params params {};
		params.PopupId = PopupId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikPopupSystem.OnPopupInfoUpdated__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PopupId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPopupSystem::OnPopupInfoUpdated__DelegateSignature(int32_t PopupId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikPopupSystem.OnPopupInfoUpdated__DelegateSignature");
		
		USheikPopupSystem_OnPopupInfoUpdated__DelegateSignature_Params params {};
		params.PopupId = PopupId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.IsPopupBeingShown
	 * 		Flags  -> ()
	 */
	bool USheikPopupSystem::IsPopupBeingShown()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.IsPopupBeingShown");
		
		USheikPopupSystem_IsPopupBeingShown_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.IsPopupActive
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PopupId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikPopupSystem::IsPopupActive(int32_t PopupId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.IsPopupActive");
		
		USheikPopupSystem_IsPopupActive_Params params {};
		params.PopupId = PopupId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.HandleInput
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FInputEventData                             InputEvent                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void USheikPopupSystem::HandleInput(const struct FInputEventData& InputEvent)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.HandleInput");
		
		USheikPopupSystem_HandleInput_Params params {};
		params.InputEvent = InputEvent;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.GetSheikPopupSystem
	 * 		Flags  -> ()
	 */
	class USheikPopupSystem* USheikPopupSystem::GetSheikPopupSystem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.GetSheikPopupSystem");
		
		USheikPopupSystem_GetSheikPopupSystem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.GetPopupWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PopupId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class UIGUI_WidgetBase* USheikPopupSystem::GetPopupWidget(int32_t PopupId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.GetPopupWidget");
		
		USheikPopupSystem_GetPopupWidget_Params params {};
		params.PopupId = PopupId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.GetPopupQueueData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PopupId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	struct FPopupQueueData USheikPopupSystem::GetPopupQueueData(int32_t PopupId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.GetPopupQueueData");
		
		USheikPopupSystem_GetPopupQueueData_Params params {};
		params.PopupId = PopupId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.GetCurrentlyActivePopup
	 * 		Flags  -> ()
	 */
	int32_t USheikPopupSystem::GetCurrentlyActivePopup()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.GetCurrentlyActivePopup");
		
		USheikPopupSystem_GetCurrentlyActivePopup_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.GenericCloseCallback
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        BindingName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPopupSystem::GenericCloseCallback(int32_t ID, const class FName& BindingName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.GenericCloseCallback");
		
		USheikPopupSystem_GenericCloseCallback_Params params {};
		params.ID = ID;
		params.BindingName = BindingName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.DoesPopupWithIdExist
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PopupId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikPopupSystem::DoesPopupWithIdExist(int32_t PopupId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.DoesPopupWithIdExist");
		
		USheikPopupSystem_DoesPopupWithIdExist_Params params {};
		params.PopupId = PopupId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.CreatePopup
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPopupType                                         PopupType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EPopupPriority                                     PopupPriority                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FText                                        HeaderText                                                 (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        BodyText                                                   (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        ErrorCodeText                                              (Parm, NativeAccessSpecifierPublic)
	 * 		bool                                               DimBackground                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FLegendData>                         LegendPrompts                                              (Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 * 		bool                                               bUseDefaultFormatting                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t USheikPopupSystem::CreatePopup(EPopupType PopupType, EPopupPriority PopupPriority, const class FText& HeaderText, const class FText& BodyText, const class FText& ErrorCodeText, bool DimBackground, TArray<struct FLegendData> LegendPrompts, bool bUseDefaultFormatting)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.CreatePopup");
		
		USheikPopupSystem_CreatePopup_Params params {};
		params.PopupType = PopupType;
		params.PopupPriority = PopupPriority;
		params.HeaderText = HeaderText;
		params.BodyText = BodyText;
		params.ErrorCodeText = ErrorCodeText;
		params.DimBackground = DimBackground;
		params.LegendPrompts = LegendPrompts;
		params.bUseDefaultFormatting = bUseDefaultFormatting;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.CreateGenericError
	 * 		Flags  -> ()
	 */
	int32_t USheikPopupSystem::CreateGenericError()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.CreateGenericError");
		
		USheikPopupSystem_CreateGenericError_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.CreateErrorWithCallback
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        HeaderText                                                 (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        BodyText                                                   (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        ErrorCode                                                  (Parm, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              ConfirmCallback                                            (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 */
	int32_t USheikPopupSystem::CreateErrorWithCallback(const class FText& HeaderText, const class FText& BodyText, const class FText& ErrorCode, const class FScriptDelegate& ConfirmCallback)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.CreateErrorWithCallback");
		
		USheikPopupSystem_CreateErrorWithCallback_Params params {};
		params.HeaderText = HeaderText;
		params.BodyText = BodyText;
		params.ErrorCode = ErrorCode;
		params.ConfirmCallback = ConfirmCallback;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.CreateError
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        HeaderText                                                 (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        BodyText                                                   (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        ErrorCode                                                  (Parm, NativeAccessSpecifierPublic)
	 */
	int32_t USheikPopupSystem::CreateError(const class FText& HeaderText, const class FText& BodyText, const class FText& ErrorCode)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.CreateError");
		
		USheikPopupSystem_CreateError_Params params {};
		params.HeaderText = HeaderText;
		params.BodyText = BodyText;
		params.ErrorCode = ErrorCode;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.CreateConfirmPopupWithCallback
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        HeaderText                                                 (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        BodyText                                                   (Parm, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              ConfirmCallback                                            (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 */
	int32_t USheikPopupSystem::CreateConfirmPopupWithCallback(const class FText& HeaderText, const class FText& BodyText, const class FScriptDelegate& ConfirmCallback)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.CreateConfirmPopupWithCallback");
		
		USheikPopupSystem_CreateConfirmPopupWithCallback_Params params {};
		params.HeaderText = HeaderText;
		params.BodyText = BodyText;
		params.ConfirmCallback = ConfirmCallback;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.CreateConfirmPopup
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        HeaderText                                                 (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        BodyText                                                   (Parm, NativeAccessSpecifierPublic)
	 */
	int32_t USheikPopupSystem::CreateConfirmPopup(const class FText& HeaderText, const class FText& BodyText)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.CreateConfirmPopup");
		
		USheikPopupSystem_CreateConfirmPopup_Params params {};
		params.HeaderText = HeaderText;
		params.BodyText = BodyText;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.CreateConfirmCancelPopup
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        HeaderText                                                 (Parm, NativeAccessSpecifierPublic)
	 * 		class FText                                        BodyText                                                   (Parm, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              ConfirmCallback                                            (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              CancelCallback                                             (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	 */
	int32_t USheikPopupSystem::CreateConfirmCancelPopup(const class FText& HeaderText, const class FText& BodyText, const class FScriptDelegate& ConfirmCallback, const class FScriptDelegate& CancelCallback)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.CreateConfirmCancelPopup");
		
		USheikPopupSystem_CreateConfirmCancelPopup_Params params {};
		params.HeaderText = HeaderText;
		params.BodyText = BodyText;
		params.ConfirmCallback = ConfirmCallback;
		params.CancelCallback = CancelCallback;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.ClosePopup_BP
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPopupSystem::ClosePopup_BP(int32_t ID)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.ClosePopup_BP");
		
		USheikPopupSystem_ClosePopup_BP_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.ClosePopup
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PopupId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPopupSystem::ClosePopup(int32_t PopupId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.ClosePopup");
		
		USheikPopupSystem_ClosePopup_Params params {};
		params.PopupId = PopupId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.CloseAllPopups
	 * 		Flags  -> ()
	 */
	void USheikPopupSystem::CloseAllPopups()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.CloseAllPopups");
		
		USheikPopupSystem_CloseAllPopups_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.ClearPopupWidget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PopupId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikPopupSystem::ClearPopupWidget(int32_t PopupId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.ClearPopupWidget");
		
		USheikPopupSystem_ClearPopupWidget_Params params {};
		params.PopupId = PopupId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.AddMultipleLegendPrompts
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PopupId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FLegendData>                         LegendPrompts                                              (Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USheikPopupSystem::AddMultipleLegendPrompts(int32_t PopupId, TArray<struct FLegendData> LegendPrompts)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.AddMultipleLegendPrompts");
		
		USheikPopupSystem_AddMultipleLegendPrompts_Params params {};
		params.PopupId = PopupId;
		params.LegendPrompts = LegendPrompts;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.AddLegendPrompt
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            PopupId                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FLegendData                                 LegendPrompt                                               (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USheikPopupSystem::AddLegendPrompt(int32_t PopupId, const struct FLegendData& LegendPrompt)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.AddLegendPrompt");
		
		USheikPopupSystem_AddLegendPrompt_Params params {};
		params.PopupId = PopupId;
		params.LegendPrompt = LegendPrompt;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikPopupSystem.AddCustomPopup
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EPopupPriority                                     PopupPriority                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UIGUI_WidgetBase*                            PopupWidget                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FLegendData>                         LegendPrompts                                              (Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	int32_t USheikPopupSystem::AddCustomPopup(EPopupPriority PopupPriority, class UIGUI_WidgetBase* PopupWidget, TArray<struct FLegendData> LegendPrompts)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikPopupSystem.AddCustomPopup");
		
		USheikPopupSystem_AddCustomPopup_Params params {};
		params.PopupPriority = PopupPriority;
		params.PopupWidget = PopupWidget;
		params.LegendPrompts = LegendPrompts;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikPopupSystem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikPopupSystem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikPopupSystem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikPoseSpotActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikPoseSpotActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikPoseSpotActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.UpdateLastBattlePassCelebrationToCurrent
	 * 		Flags  -> ()
	 */
	void USheikProgressionSystem::UpdateLastBattlePassCelebrationToCurrent()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.UpdateLastBattlePassCelebrationToCurrent");
		
		USheikProgressionSystem_UpdateLastBattlePassCelebrationToCurrent_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.SetWalletSystem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USheikWalletSystem*                          InWalletSystem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikProgressionSystem::SetWalletSystem(class USheikWalletSystem* InWalletSystem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.SetWalletSystem");
		
		USheikProgressionSystem_SetWalletSystem_Params params {};
		params.InWalletSystem = InWalletSystem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.SetStoreSystem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USheikStoreSystem*                           InStoreSystem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikProgressionSystem::SetStoreSystem(class USheikStoreSystem* InStoreSystem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.SetStoreSystem");
		
		USheikProgressionSystem_SetStoreSystem_Params params {};
		params.InStoreSystem = InStoreSystem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.RefreshCloutLevel
	 * 		Flags  -> ()
	 */
	void USheikProgressionSystem::RefreshCloutLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.RefreshCloutLevel");
		
		USheikProgressionSystem_RefreshCloutLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.PurchaseBattlePassTiers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NumOfTiersToPurchase                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::PurchaseBattlePassTiers(int32_t NumOfTiersToPurchase)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.PurchaseBattlePassTiers");
		
		USheikProgressionSystem_PurchaseBattlePassTiers_Params params {};
		params.NumOfTiersToPurchase = NumOfTiersToPurchase;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.PurchaseBattlePass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikStoreItem                             Offer                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::PurchaseBattlePass(const struct FSheikStoreItem& Offer, struct FSheikError* Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.PurchaseBattlePass");
		
		USheikProgressionSystem_PurchaseBattlePass_Params params {};
		params.Offer = Offer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Error != nullptr)
			*Error = params.Error;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.OpenFanMail
	 * 		Flags  -> ()
	 */
	bool USheikProgressionSystem::OpenFanMail()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.OpenFanMail");
		
		USheikProgressionSystem_OpenFanMail_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.OpenAllFanMail
	 * 		Flags  -> ()
	 */
	bool USheikProgressionSystem::OpenAllFanMail()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.OpenAllFanMail");
		
		USheikProgressionSystem_OpenAllFanMail_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikProgressionSystem.OnDataRetrieved__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikProgressionSystem::OnDataRetrieved__DelegateSignature(bool bSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikProgressionSystem.OnDataRetrieved__DelegateSignature");
		
		USheikProgressionSystem_OnDataRetrieved__DelegateSignature_Params params {};
		params.bSuccessful = bSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.IsTodayWithinEndingPeriodOfActiveSeason
	 * 		Flags  -> ()
	 */
	bool USheikProgressionSystem::IsTodayWithinEndingPeriodOfActiveSeason()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.IsTodayWithinEndingPeriodOfActiveSeason");
		
		USheikProgressionSystem_IsTodayWithinEndingPeriodOfActiveSeason_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.IsTodayWithinActiveSeason
	 * 		Flags  -> ()
	 */
	bool USheikProgressionSystem::IsTodayWithinActiveSeason()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.IsTodayWithinActiveSeason");
		
		USheikProgressionSystem_IsTodayWithinActiveSeason_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.IsTodayWithinActiveBattlePassSeason
	 * 		Flags  -> ()
	 */
	bool USheikProgressionSystem::IsTodayWithinActiveBattlePassSeason()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.IsTodayWithinActiveBattlePassSeason");
		
		USheikProgressionSystem_IsTodayWithinActiveBattlePassSeason_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.IsTodayOutsideSeasonDateRange
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EIGSeasonIdentifier                                InSeason                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::IsTodayOutsideSeasonDateRange(EIGSeasonIdentifier InSeason)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.IsTodayOutsideSeasonDateRange");
		
		USheikProgressionSystem_IsTodayOutsideSeasonDateRange_Params params {};
		params.InSeason = InSeason;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.IsDebugAnnouncementDataEnabled
	 * 		Flags  -> ()
	 */
	bool USheikProgressionSystem::IsDebugAnnouncementDataEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.IsDebugAnnouncementDataEnabled");
		
		USheikProgressionSystem_IsDebugAnnouncementDataEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.IsDateWithinRange
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGDateRange                                DateRange                                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		struct FDateTime                                   Date                                                       (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::IsDateWithinRange(const struct FIGDateRange& DateRange, const struct FDateTime& Date)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.IsDateWithinRange");
		
		USheikProgressionSystem_IsDateWithinRange_Params params {};
		params.DateRange = DateRange;
		params.Date = Date;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.IsBattlePassTierComplete
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            TierId                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::IsBattlePassTierComplete(int32_t TierId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.IsBattlePassTierComplete");
		
		USheikProgressionSystem_IsBattlePassTierComplete_Params params {};
		params.TierId = TierId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.IsBattlePassOwned
	 * 		Flags  -> ()
	 */
	bool USheikProgressionSystem::IsBattlePassOwned()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.IsBattlePassOwned");
		
		USheikProgressionSystem_IsBattlePassOwned_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.IsAccountProgressionDataDownloaded
	 * 		Flags  -> ()
	 */
	bool USheikProgressionSystem::IsAccountProgressionDataDownloaded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.IsAccountProgressionDataDownloaded");
		
		USheikProgressionSystem_IsAccountProgressionDataDownloaded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.InitializeCustomizableActor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      UIActorClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     ActorLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FQuat                                       ActorDefaultRotation                                       (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikProgressionSystem::InitializeCustomizableActor(class UClass* UIActorClass, const struct FVector& ActorLocation, const struct FQuat& ActorDefaultRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.InitializeCustomizableActor");
		
		USheikProgressionSystem_InitializeCustomizableActor_Params params {};
		params.UIActorClass = UIActorClass;
		params.ActorLocation = ActorLocation;
		params.ActorDefaultRotation = ActorDefaultRotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.HasAnyXpBoosters
	 * 		Flags  -> ()
	 */
	bool USheikProgressionSystem::HasAnyXpBoosters()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.HasAnyXpBoosters");
		
		USheikProgressionSystem_HasAnyXpBoosters_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.HandleOnPlayerWon
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class AIGPlayerState*>                      WinningPlayers                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               isLocalPlayer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               isSpectator                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikProgressionSystem::HandleOnPlayerWon(TArray<class AIGPlayerState*> WinningPlayers, bool isLocalPlayer, bool isSpectator)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.HandleOnPlayerWon");
		
		USheikProgressionSystem_HandleOnPlayerWon_Params params {};
		params.WinningPlayers = WinningPlayers;
		params.isLocalPlayer = isLocalPlayer;
		params.isSpectator = isSpectator;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.HandleOnPlayerDied
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ECauseOfDeath                                      Cause                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikProgressionSystem::HandleOnPlayerDied(ECauseOfDeath Cause)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.HandleOnPlayerDied");
		
		USheikProgressionSystem_HandleOnPlayerDied_Params params {};
		params.Cause = Cause;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.HandleOnPlacementChanged
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Placement                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikProgressionSystem::HandleOnPlacementChanged(int32_t Placement)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.HandleOnPlacementChanged");
		
		USheikProgressionSystem_HandleOnPlacementChanged_Params params {};
		params.Placement = Placement;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.HandleOnNonFinalRingFinishedClosing
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Time                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikProgressionSystem::HandleOnNonFinalRingFinishedClosing(int32_t Time)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.HandleOnNonFinalRingFinishedClosing");
		
		USheikProgressionSystem_HandleOnNonFinalRingFinishedClosing_Params params {};
		params.Time = Time;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.HandleOnFinalRingSurvivedUntil
	 * 		Flags  -> ()
	 */
	void USheikProgressionSystem::HandleOnFinalRingSurvivedUntil()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.HandleOnFinalRingSurvivedUntil");
		
		USheikProgressionSystem_HandleOnFinalRingSurvivedUntil_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.HadAtLeastOneXpBoosterActiveDuringSession
	 * 		Flags  -> ()
	 */
	bool USheikProgressionSystem::HadAtLeastOneXpBoosterActiveDuringSession()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.HadAtLeastOneXpBoosterActiveDuringSession");
		
		USheikProgressionSystem_HadAtLeastOneXpBoosterActiveDuringSession_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetTotalXpBoosterTime
	 * 		Flags  -> ()
	 */
	int32_t USheikProgressionSystem::GetTotalXpBoosterTime()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetTotalXpBoosterTime");
		
		USheikProgressionSystem_GetTotalXpBoosterTime_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetTimeLeftInCurrentSeason
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTimespan                                   OutDaysAndHoursLeft                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::GetTimeLeftInCurrentSeason(struct FTimespan* OutDaysAndHoursLeft)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetTimeLeftInCurrentSeason");
		
		USheikProgressionSystem_GetTimeLeftInCurrentSeason_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutDaysAndHoursLeft != nullptr)
			*OutDaysAndHoursLeft = params.OutDaysAndHoursLeft;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetTimeLeftInCurrentBattlePassSeason
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTimespan                                   OutDaysAndHoursLeft                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::GetTimeLeftInCurrentBattlePassSeason(struct FTimespan* OutDaysAndHoursLeft)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetTimeLeftInCurrentBattlePassSeason");
		
		USheikProgressionSystem_GetTimeLeftInCurrentBattlePassSeason_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutDaysAndHoursLeft != nullptr)
			*OutDaysAndHoursLeft = params.OutDaysAndHoursLeft;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetTiersToCelebrateOnBattlePassPurchase
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<int32_t>                                    OutTierIds                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	EBattlePassCelebrationReason USheikProgressionSystem::GetTiersToCelebrateOnBattlePassPurchase(TArray<int32_t>* OutTierIds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetTiersToCelebrateOnBattlePassPurchase");
		
		USheikProgressionSystem_GetTiersToCelebrateOnBattlePassPurchase_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutTierIds != nullptr)
			*OutTierIds = params.OutTierIds;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetSingleBattlePassTierPrice
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            OutPrice                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::GetSingleBattlePassTierPrice(int32_t* OutPrice)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetSingleBattlePassTierPrice");
		
		USheikProgressionSystem_GetSingleBattlePassTierPrice_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPrice != nullptr)
			*OutPrice = params.OutPrice;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetNextCloutLevelForDisplayOnly
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FProgressionLevel                           OutNextCloutLevel                                          (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::GetNextCloutLevelForDisplayOnly(struct FProgressionLevel* OutNextCloutLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetNextCloutLevelForDisplayOnly");
		
		USheikProgressionSystem_GetNextCloutLevelForDisplayOnly_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutNextCloutLevel != nullptr)
			*OutNextCloutLevel = params.OutNextCloutLevel;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetNewFansAnnouncements
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikPayload>                       OutAnnouncements                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikProgressionSystem::GetNewFansAnnouncements(TArray<struct FSheikPayload>* OutAnnouncements)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetNewFansAnnouncements");
		
		USheikProgressionSystem_GetNewFansAnnouncements_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutAnnouncements != nullptr)
			*OutAnnouncements = params.OutAnnouncements;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetMaxCloutLevel
	 * 		Flags  -> ()
	 */
	int32_t USheikProgressionSystem::GetMaxCloutLevel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetMaxCloutLevel");
		
		USheikProgressionSystem_GetMaxCloutLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetFanMailCount
	 * 		Flags  -> ()
	 */
	int32_t USheikProgressionSystem::GetFanMailCount()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetFanMailCount");
		
		USheikProgressionSystem_GetFanMailCount_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetCurrentSeasonDefinition
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGSeasonDefinition                         OutCurrentSeasonDef                                        (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::GetCurrentSeasonDefinition(struct FIGSeasonDefinition* OutCurrentSeasonDef)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetCurrentSeasonDefinition");
		
		USheikProgressionSystem_GetCurrentSeasonDefinition_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutCurrentSeasonDef != nullptr)
			*OutCurrentSeasonDef = params.OutCurrentSeasonDef;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetCurrentNumCloutFans
	 * 		Flags  -> ()
	 */
	int32_t USheikProgressionSystem::GetCurrentNumCloutFans()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetCurrentNumCloutFans");
		
		USheikProgressionSystem_GetCurrentNumCloutFans_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetCurrentNumBattlePassFans
	 * 		Flags  -> ()
	 */
	int32_t USheikProgressionSystem::GetCurrentNumBattlePassFans()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetCurrentNumBattlePassFans");
		
		USheikProgressionSystem_GetCurrentNumBattlePassFans_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetCurrentBattlePassTierId
	 * 		Flags  -> ()
	 */
	int32_t USheikProgressionSystem::GetCurrentBattlePassTierId()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetCurrentBattlePassTierId");
		
		USheikProgressionSystem_GetCurrentBattlePassTierId_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetCurrentBattlePassTier
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FBattlePassTier                             OutCurrentTier                                             (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::GetCurrentBattlePassTier(struct FBattlePassTier* OutCurrentTier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetCurrentBattlePassTier");
		
		USheikProgressionSystem_GetCurrentBattlePassTier_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutCurrentTier != nullptr)
			*OutCurrentTier = params.OutCurrentTier;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetCurrentBattlePassSeasonDefinition
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGSeasonDefinition                         OutCurrentSeasonDef                                        (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::GetCurrentBattlePassSeasonDefinition(struct FIGSeasonDefinition* OutCurrentSeasonDef)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetCurrentBattlePassSeasonDefinition");
		
		USheikProgressionSystem_GetCurrentBattlePassSeasonDefinition_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutCurrentSeasonDef != nullptr)
			*OutCurrentSeasonDef = params.OutCurrentSeasonDef;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetCompletedBattlePassTierIdsNeedingCelebration
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<int32_t>                                    OutTierIds                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	EBattlePassCelebrationReason USheikProgressionSystem::GetCompletedBattlePassTierIdsNeedingCelebration(TArray<int32_t>* OutTierIds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetCompletedBattlePassTierIdsNeedingCelebration");
		
		USheikProgressionSystem_GetCompletedBattlePassTierIdsNeedingCelebration_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutTierIds != nullptr)
			*OutTierIds = params.OutTierIds;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetCloutLevel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FProgressionLevel                           OutProgressionLevel                                        (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::GetCloutLevel(struct FProgressionLevel* OutProgressionLevel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetCloutLevel");
		
		USheikProgressionSystem_GetCloutLevel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutProgressionLevel != nullptr)
			*OutProgressionLevel = params.OutProgressionLevel;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetBattlePassTiers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FBattlePassTier>                     BattlePassTiers                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::GetBattlePassTiers(TArray<struct FBattlePassTier>* BattlePassTiers)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetBattlePassTiers");
		
		USheikProgressionSystem_GetBattlePassTiers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (BattlePassTiers != nullptr)
			*BattlePassTiers = params.BattlePassTiers;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetBattlePassTierById
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            InTierId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FBattlePassTier                             OutBattlePassTier                                          (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::GetBattlePassTierById(int32_t InTierId, struct FBattlePassTier* OutBattlePassTier)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetBattlePassTierById");
		
		USheikProgressionSystem_GetBattlePassTierById_Params params {};
		params.InTierId = InTierId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBattlePassTier != nullptr)
			*OutBattlePassTier = params.OutBattlePassTier;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetBattlePassRewardTypeLocTextByEnum
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EBattlePassRewardType                              RewardType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText USheikProgressionSystem::GetBattlePassRewardTypeLocTextByEnum(EBattlePassRewardType RewardType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetBattlePassRewardTypeLocTextByEnum");
		
		USheikProgressionSystem_GetBattlePassRewardTypeLocTextByEnum_Params params {};
		params.RewardType = RewardType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetBattlePassOffers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikStoreItem>                     OutBattlePassOffers                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::GetBattlePassOffers(TArray<struct FSheikStoreItem>* OutBattlePassOffers)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetBattlePassOffers");
		
		USheikProgressionSystem_GetBattlePassOffers_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBattlePassOffers != nullptr)
			*OutBattlePassOffers = params.OutBattlePassOffers;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.GetBattlePassMatchAccumulationData
	 * 		Flags  -> ()
	 */
	struct FBattlePassMatchAccumulationData USheikProgressionSystem::GetBattlePassMatchAccumulationData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.GetBattlePassMatchAccumulationData");
		
		USheikProgressionSystem_GetBattlePassMatchAccumulationData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.FanMailRollComplete
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FName>                                WalletIds                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                FailedCodes                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bRedeemed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikProgressionSystem::FanMailRollComplete(TArray<class FName> WalletIds, TArray<class FName> FailedCodes, bool bRedeemed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.FanMailRollComplete");
		
		USheikProgressionSystem_FanMailRollComplete_Params params {};
		params.WalletIds = WalletIds;
		params.FailedCodes = FailedCodes;
		params.bRedeemed = bRedeemed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.ClearCustomizer
	 * 		Flags  -> ()
	 */
	void USheikProgressionSystem::ClearCustomizer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.ClearCustomizer");
		
		USheikProgressionSystem_ClearCustomizer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.CheckWillCloutLevelUpGivenCurrentFans
	 * 		Flags  -> ()
	 */
	bool USheikProgressionSystem::CheckWillCloutLevelUpGivenCurrentFans()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.CheckWillCloutLevelUpGivenCurrentFans");
		
		USheikProgressionSystem_CheckWillCloutLevelUpGivenCurrentFans_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.CheckForGameFlowState
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EGameFlowState                                     NewState                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikProgressionSystem::CheckForGameFlowState(EGameFlowState NewState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.CheckForGameFlowState");
		
		USheikProgressionSystem_CheckForGameFlowState_Params params {};
		params.NewState = NewState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.CanPurchaseNumTiers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NumTiersToPurchase                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::CanPurchaseNumTiers(int32_t NumTiersToPurchase)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.CanPurchaseNumTiers");
		
		USheikProgressionSystem_CanPurchaseNumTiers_Params params {};
		params.NumTiersToPurchase = NumTiersToPurchase;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.CanPurchaseBattlePass
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikStoreItem                             Offer                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikProgressionSystem::CanPurchaseBattlePass(const struct FSheikStoreItem& Offer)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.CanPurchaseBattlePass");
		
		USheikProgressionSystem_CanPurchaseBattlePass_Params params {};
		params.Offer = Offer;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikProgressionSystem.CalculateAllProgressionAndUpload
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              NewFans                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EReasonFansAwarded                                 ReasonForAddingFans                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikProgressionSystem::CalculateAllProgressionAndUpload(float NewFans, EReasonFansAwarded ReasonForAddingFans)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikProgressionSystem.CalculateAllProgressionAndUpload");
		
		USheikProgressionSystem_CalculateAllProgressionAndUpload_Params params {};
		params.NewFans = NewFans;
		params.ReasonForAddingFans = ReasonForAddingFans;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikProgressionSystem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikProgressionSystem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikProgressionSystem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikRedemptionCodeDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikRedemptionCodeDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikRedemptionCodeDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikRedemptionCodeManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikRedemptionCodeManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikRedemptionCodeManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikReleaseTeammatesNotify.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikReleaseTeammatesNotify::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikReleaseTeammatesNotify");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikRepSystem.OnRepTitleStorageDownloadCompleted
	 * 		Flags  -> ()
	 */
	void USheikRepSystem::OnRepTitleStorageDownloadCompleted()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikRepSystem.OnRepTitleStorageDownloadCompleted");
		
		USheikRepSystem_OnRepTitleStorageDownloadCompleted_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikRepSystem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikRepSystem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikRepSystem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikRepTitleStorageInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikRepTitleStorageInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikRepTitleStorageInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikRepTypeStrategy.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikRepTypeStrategy::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikRepTypeStrategy");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikResurrectionNotify.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikResurrectionNotify::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikResurrectionNotify");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikResTeammateNotify.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikResTeammateNotify::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikResTeammateNotify");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikAbortResNotify.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikAbortResNotify::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikAbortResNotify");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikRingActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikRingActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikRingActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikSavedLoginToken.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikSavedLoginToken::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikSavedLoginToken");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSavedSettingBlueprintLibrary.SetHudRegionVisibility
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikHudRegion                                    HudRegion                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bVisible                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikSavedSettingBlueprintLibrary::SetHudRegionVisibility(class UObject* WorldContextObject, ESheikHudRegion HudRegion, bool bVisible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSavedSettingBlueprintLibrary.SetHudRegionVisibility");
		
		USheikSavedSettingBlueprintLibrary_SetHudRegionVisibility_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.HudRegion = HudRegion;
		params.bVisible = bVisible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSavedSettingBlueprintLibrary.SetGameBrightness
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InBrightness                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikSavedSettingBlueprintLibrary::SetGameBrightness(class UObject* WorldContextObject, float InBrightness)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSavedSettingBlueprintLibrary.SetGameBrightness");
		
		USheikSavedSettingBlueprintLibrary_SetGameBrightness_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.InBrightness = InBrightness;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSavedSettingBlueprintLibrary.SetDamageNumberVisibility
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bVisible                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikSavedSettingBlueprintLibrary::SetDamageNumberVisibility(class UObject* WorldContextObject, bool bVisible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSavedSettingBlueprintLibrary.SetDamageNumberVisibility");
		
		USheikSavedSettingBlueprintLibrary_SetDamageNumberVisibility_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.bVisible = bVisible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSavedSettingBlueprintLibrary.RefreshControlMappingsFromSavedSettings
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPlayerInput*                                InPlayerInput                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikSavedSettingBlueprintLibrary::RefreshControlMappingsFromSavedSettings(class UObject* WorldContextObject, class UPlayerInput* InPlayerInput)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSavedSettingBlueprintLibrary.RefreshControlMappingsFromSavedSettings");
		
		USheikSavedSettingBlueprintLibrary_RefreshControlMappingsFromSavedSettings_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.InPlayerInput = InPlayerInput;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSavedSettingBlueprintLibrary.GetHudRegionVisibility
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikHudRegion                                    HudRegion                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikSavedSettingBlueprintLibrary::GetHudRegionVisibility(class UObject* WorldContextObject, ESheikHudRegion HudRegion)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSavedSettingBlueprintLibrary.GetHudRegionVisibility");
		
		USheikSavedSettingBlueprintLibrary_GetHudRegionVisibility_Params params {};
		params.WorldContextObject = WorldContextObject;
		params.HudRegion = HudRegion;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSavedSettingBlueprintLibrary.GetGameBrightness
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	float USheikSavedSettingBlueprintLibrary::GetGameBrightness(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSavedSettingBlueprintLibrary.GetGameBrightness");
		
		USheikSavedSettingBlueprintLibrary_GetGameBrightness_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSavedSettingBlueprintLibrary.GetDamageNumberVisibility
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UObject*                                     WorldContextObject                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikSavedSettingBlueprintLibrary::GetDamageNumberVisibility(class UObject* WorldContextObject)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSavedSettingBlueprintLibrary.GetDamageNumberVisibility");
		
		USheikSavedSettingBlueprintLibrary_GetDamageNumberVisibility_Params params {};
		params.WorldContextObject = WorldContextObject;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikSavedSettingBlueprintLibrary.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikSavedSettingBlueprintLibrary::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikSavedSettingBlueprintLibrary");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSavedSettings.SetDataForPreset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      InPresetName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<unsigned char>                              InData                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikSavedSettings::SetDataForPreset(const class FString& InPresetName, TArray<unsigned char> InData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSavedSettings.SetDataForPreset");
		
		USheikSavedSettings_SetDataForPreset_Params params {};
		params.InPresetName = InPresetName;
		params.InData = InData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSavedSettings.RemoveDataForPreset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      InPresetName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikSavedSettings::RemoveDataForPreset(const class FString& InPresetName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSavedSettings.RemoveDataForPreset");
		
		USheikSavedSettings_RemoveDataForPreset_Params params {};
		params.InPresetName = InPresetName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSavedSettings.GetDataForPreset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      InPresetName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	TArray<unsigned char> USheikSavedSettings::GetDataForPreset(const class FString& InPresetName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSavedSettings.GetDataForPreset");
		
		USheikSavedSettings_GetDataForPreset_Params params {};
		params.InPresetName = InPresetName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSavedSettings.DoesPresetExist
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      InPresetName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikSavedSettings::DoesPresetExist(const class FString& InPresetName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSavedSettings.DoesPresetExist");
		
		USheikSavedSettings_DoesPresetExist_Params params {};
		params.InPresetName = InPresetName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikSavedSettings.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikSavedSettings::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikSavedSettings");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikScriptedActorComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikScriptedActorComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikScriptedActorComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikScriptTargetingVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikScriptTargetingVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikScriptTargetingVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikScriptTargetingWaypoint.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikScriptTargetingWaypoint::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikScriptTargetingWaypoint");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSeasonalStatsManager.OnUploadPastSeasonsStats
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ErrorString                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikSeasonalStatsManager::OnUploadPastSeasonsStats(const class FString& ErrorString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSeasonalStatsManager.OnUploadPastSeasonsStats");
		
		USheikSeasonalStatsManager_OnUploadPastSeasonsStats_Params params {};
		params.ErrorString = ErrorString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSeasonalStatsManager.OnDownloadSeasonalStats
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FGetCozmoStatsResult                        Result                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FString                                      ErrorString                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikSeasonalStatsManager::OnDownloadSeasonalStats(const struct FGetCozmoStatsResult& Result, const class FString& ErrorString)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSeasonalStatsManager.OnDownloadSeasonalStats");
		
		USheikSeasonalStatsManager_OnDownloadSeasonalStats_Params params {};
		params.Result = Result;
		params.ErrorString = ErrorString;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSeasonalStatsManager.IsPreviousSeason
	 * 		Flags  -> ()
	 * Parameters:
	 * 		EIGSeasonIdentifier                                Season                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikSeasonalStatsManager::IsPreviousSeason(EIGSeasonIdentifier Season)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSeasonalStatsManager.IsPreviousSeason");
		
		USheikSeasonalStatsManager_IsPreviousSeason_Params params {};
		params.Season = Season;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSeasonalStatsManager.GetCurrentSeason
	 * 		Flags  -> ()
	 */
	EIGSeasonIdentifier USheikSeasonalStatsManager::GetCurrentSeason()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSeasonalStatsManager.GetCurrentSeason");
		
		USheikSeasonalStatsManager_GetCurrentSeason_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikSeasonalStatsManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikSeasonalStatsManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikSeasonalStatsManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikSkeletalMeshComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikSkeletalMeshComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikSkeletalMeshComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikSmokeBattleRoyaleMatch.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikSmokeBattleRoyaleMatch::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikSmokeBattleRoyaleMatch");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikSmokeCannonCaptureTask.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikSmokeCannonCaptureTask::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikSmokeCannonCaptureTask");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikSmokeTaskManagerActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikSmokeTaskManagerActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikSmokeTaskManagerActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UIGAccessorySetLists.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIGAccessorySetLists::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.IGAccessorySetLists");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UIGSpawnDefaultDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UIGSpawnDefaultDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.IGSpawnDefaultDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikSpecialMoveConsumable.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikSpecialMoveConsumable::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikSpecialMoveConsumable");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSpectatorHUDScreen.SetSpectatorsPawnInfoVisibility
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikCharacter*                             SheikCharacter                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIsVisible                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikSpectatorHUDScreen::SetSpectatorsPawnInfoVisibility(class ASheikCharacter* SheikCharacter, bool bIsVisible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSpectatorHUDScreen.SetSpectatorsPawnInfoVisibility");
		
		USheikSpectatorHUDScreen_SetSpectatorsPawnInfoVisibility_Params params {};
		params.SheikCharacter = SheikCharacter;
		params.bIsVisible = bIsVisible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSpectatorHUDScreen.SetOtherSpectatorsPawnInfoVisibility
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsVisible                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikSpectatorHUDScreen::SetOtherSpectatorsPawnInfoVisibility(bool bIsVisible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSpectatorHUDScreen.SetOtherSpectatorsPawnInfoVisibility");
		
		USheikSpectatorHUDScreen_SetOtherSpectatorsPawnInfoVisibility_Params params {};
		params.bIsVisible = bIsVisible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikSpectatorHUDScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikSpectatorHUDScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikSpectatorHUDScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikSpectatorPawn.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikSpectatorPawn::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikSpectatorPawn");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikSpringArmComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikSpringArmComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikSpringArmComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSpringboardComponent.UpdateArrowTransform
	 * 		Flags  -> ()
	 */
	void USheikSpringboardComponent::UpdateArrowTransform()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSpringboardComponent.UpdateArrowTransform");
		
		USheikSpringboardComponent_UpdateArrowTransform_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikSpringboardComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikSpringboardComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikSpringboardComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSpringboardInterface.OnSpringboardHitCallback
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UPrimitiveComponent*                         HitComp                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class AActor*                                      OtherActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UPrimitiveComponent*                         OtherComp                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     NormalImpulse                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FHitResult                                  Hit                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	 */
	void USheikSpringboardInterface::OnSpringboardHitCallback(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSpringboardInterface.OnSpringboardHitCallback");
		
		USheikSpringboardInterface_OnSpringboardHitCallback_Params params {};
		params.HitComp = HitComp;
		params.OtherActor = OtherActor;
		params.OtherComp = OtherComp;
		params.NormalImpulse = NormalImpulse;
		params.Hit = Hit;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikSpringboardInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikSpringboardInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikSpringboardInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikSpringboardStaticMeshComp.UpdateArrowTransform
	 * 		Flags  -> ()
	 */
	void USheikSpringboardStaticMeshComp::UpdateArrowTransform()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikSpringboardStaticMeshComp.UpdateArrowTransform");
		
		USheikSpringboardStaticMeshComp_UpdateArrowTransform_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikSpringboardStaticMeshComp.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikSpringboardStaticMeshComp::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikSpringboardStaticMeshComp");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikStartRestrictedMatchScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikStartRestrictedMatchScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikStartRestrictedMatchScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikStaticNavInvokerActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikStaticNavInvokerActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikStaticNavInvokerActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStatsAdapter.IsComplexStat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGStatsSystem*                              StatsSystem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ComplexStatName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikStatsAdapter::IsComplexStat(class UIGStatsSystem* StatsSystem, const class FName& ComplexStatName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStatsAdapter.IsComplexStat");
		
		USheikStatsAdapter_IsComplexStat_Params params {};
		params.StatsSystem = StatsSystem;
		params.ComplexStatName = ComplexStatName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStatsAdapter.GetTranslatedStatWithSeasonalData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGStatsSystem*                              StatsSystem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class USheikSeasonalStatsManager*                  SeasonalStatsManager                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Name                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		EIGSeasonIdentifier                                StatSeason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikPlayerDataStat                        OutStat                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		struct FSheikSeasonalStatFieldsData                OutRequestedSeasonData                                     (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		bool                                               OutHasSeasonalData                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikStatsAdapter::GetTranslatedStatWithSeasonalData(class UIGStatsSystem* StatsSystem, class USheikSeasonalStatsManager* SeasonalStatsManager, const class FName& Name, EIGSeasonIdentifier StatSeason, struct FSheikPlayerDataStat* OutStat, struct FSheikSeasonalStatFieldsData* OutRequestedSeasonData, bool* OutHasSeasonalData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStatsAdapter.GetTranslatedStatWithSeasonalData");
		
		USheikStatsAdapter_GetTranslatedStatWithSeasonalData_Params params {};
		params.StatsSystem = StatsSystem;
		params.SeasonalStatsManager = SeasonalStatsManager;
		params.Name = Name;
		params.StatSeason = StatSeason;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutStat != nullptr)
			*OutStat = params.OutStat;
		if (OutRequestedSeasonData != nullptr)
			*OutRequestedSeasonData = params.OutRequestedSeasonData;
		if (OutHasSeasonalData != nullptr)
			*OutHasSeasonalData = params.OutHasSeasonalData;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStatsAdapter.GetTranslatedStat
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGStatsSystem*                              StatsSystem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        Name                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikPlayerDataStat                        OutStat                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikStatsAdapter::GetTranslatedStat(class UIGStatsSystem* StatsSystem, const class FName& Name, struct FSheikPlayerDataStat* OutStat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStatsAdapter.GetTranslatedStat");
		
		USheikStatsAdapter_GetTranslatedStat_Params params {};
		params.StatsSystem = StatsSystem;
		params.Name = Name;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutStat != nullptr)
			*OutStat = params.OutStat;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStatsAdapter.GetFormattedStatValueText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGStatsSystem*                              StatsSystem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikPlayerDataStat                        InStat                                                     (Parm, NativeAccessSpecifierPublic)
	 * 		EIGSeasonIdentifier                                StatSeason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              InStatValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText USheikStatsAdapter::GetFormattedStatValueText(class UIGStatsSystem* StatsSystem, const struct FSheikPlayerDataStat& InStat, EIGSeasonIdentifier StatSeason, float InStatValue)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStatsAdapter.GetFormattedStatValueText");
		
		USheikStatsAdapter_GetFormattedStatValueText_Params params {};
		params.StatsSystem = StatsSystem;
		params.InStat = InStat;
		params.StatSeason = StatSeason;
		params.InStatValue = InStatValue;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStatsAdapter.GetAllTranslatedStats
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGStatsSystem*                              StatsSystem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FSheikPlayerDataStat>                OutStatsArray                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		bool                                               ShowHiddenStats                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikStatsAdapter::GetAllTranslatedStats(class UIGStatsSystem* StatsSystem, TArray<struct FSheikPlayerDataStat>* OutStatsArray, bool ShowHiddenStats)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStatsAdapter.GetAllTranslatedStats");
		
		USheikStatsAdapter_GetAllTranslatedStats_Params params {};
		params.StatsSystem = StatsSystem;
		params.ShowHiddenStats = ShowHiddenStats;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutStatsArray != nullptr)
			*OutStatsArray = params.OutStatsArray;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStatsAdapter.CalculateComplexStatFromGivenValues
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGStatsSystem*                              StatsSystem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FName                                        ComplexStatName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<float>                                      TrackedTitleCardStatValues                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	class FText USheikStatsAdapter::CalculateComplexStatFromGivenValues(class UIGStatsSystem* StatsSystem, const class FName& ComplexStatName, TArray<float> TrackedTitleCardStatValues)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStatsAdapter.CalculateComplexStatFromGivenValues");
		
		USheikStatsAdapter_CalculateComplexStatFromGivenValues_Params params {};
		params.StatsSystem = StatsSystem;
		params.ComplexStatName = ComplexStatName;
		params.TrackedTitleCardStatValues = TrackedTitleCardStatValues;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikStatsAdapter.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikStatsAdapter::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikStatsAdapter");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikStatsDataAsset.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikStatsDataAsset::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikStatsDataAsset");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikStatsDeleteRepProgressManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikStatsDeleteRepProgressManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikStatsDeleteRepProgressManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikStatsTransferRequest.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikStatsTransferRequest::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikStatsTransferRequest");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikStatsDownloadAllRequest.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikStatsDownloadAllRequest::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikStatsDownloadAllRequest");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStatsDownloadManager.TransferRequestTimedOut
	 * 		Flags  -> ()
	 */
	void USheikStatsDownloadManager::TransferRequestTimedOut()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStatsDownloadManager.TransferRequestTimedOut");
		
		USheikStatsDownloadManager_TransferRequestTimedOut_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikStatsDownloadManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikStatsDownloadManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikStatsDownloadManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikStatsDownloadRequest.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikStatsDownloadRequest::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikStatsDownloadRequest");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikStatsSystem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikStatsSystem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikStatsSystem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStatsUploadManager.TransferRequestTimedOut
	 * 		Flags  -> ()
	 */
	void USheikStatsUploadManager::TransferRequestTimedOut()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStatsUploadManager.TransferRequestTimedOut");
		
		USheikStatsUploadManager_TransferRequestTimedOut_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikStatsUploadManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikStatsUploadManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikStatsUploadManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikStatsUploadRequest.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikStatsUploadRequest::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikStatsUploadRequest");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreScreen.SetDeepLinkArguments
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TMap<class FName, class FString>                   InDeepLinkArguments                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikStoreScreen::SetDeepLinkArguments(TMap<class FName, class FString> InDeepLinkArguments)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreScreen.SetDeepLinkArguments");
		
		USheikStoreScreen_SetDeepLinkArguments_Params params {};
		params.InDeepLinkArguments = InDeepLinkArguments;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreScreen.ClearDeepLinkArguments
	 * 		Flags  -> ()
	 */
	void USheikStoreScreen::ClearDeepLinkArguments()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreScreen.ClearDeepLinkArguments");
		
		USheikStoreScreen_ClearDeepLinkArguments_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikStoreScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikStoreScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikStoreScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.TogglePlatformInStoreUi
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bEnabled                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::TogglePlatformInStoreUi(bool bEnabled)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.TogglePlatformInStoreUi");
		
		USheikStoreSystem_TogglePlatformInStoreUi_Params params {};
		params.bEnabled = bEnabled;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.SortItemsForDisplay
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikStoreItem>                     StoreItems                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<struct FSheikStoreItem>                     SortedStoreItems                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::SortItemsForDisplay(TArray<struct FSheikStoreItem> StoreItems, TArray<struct FSheikStoreItem>* SortedStoreItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.SortItemsForDisplay");
		
		USheikStoreSystem_SortItemsForDisplay_Params params {};
		params.StoreItems = StoreItems;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (SortedStoreItems != nullptr)
			*SortedStoreItems = params.SortedStoreItems;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.SortCategoriesForDisplay
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikStoreCategory>                 Categories                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::SortCategoriesForDisplay(TArray<struct FSheikStoreCategory>* Categories)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.SortCategoriesForDisplay");
		
		USheikStoreSystem_SortCategoriesForDisplay_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Categories != nullptr)
			*Categories = params.Categories;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.SaveCharacterLoadout
	 * 		Flags  -> ()
	 */
	void USheikStoreSystem::SaveCharacterLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.SaveCharacterLoadout");
		
		USheikStoreSystem_SaveCharacterLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.QueryPlatformStoreData
	 * 		Flags  -> ()
	 */
	void USheikStoreSystem::QueryPlatformStoreData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.QueryPlatformStoreData");
		
		USheikStoreSystem_QueryPlatformStoreData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.PurchaseItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikStoreItem                             StoreItem                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::PurchaseItem(const struct FSheikStoreItem& StoreItem, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.PurchaseItem");
		
		USheikStoreSystem_PurchaseItem_Params params {};
		params.StoreItem = StoreItem;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.PostStoreTelemetryEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Location                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      EventType                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::PostStoreTelemetryEvent(const class FString& Location, const class FString& EventType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.PostStoreTelemetryEvent");
		
		USheikStoreSystem_PostStoreTelemetryEvent_Params params {};
		params.Location = Location;
		params.EventType = EventType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.PostStoreItemVCTelemetryEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikStoreItem                             StoreItem                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FSheikStoreItem                             VCPackage                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FString                                      Location                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      EventType                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::PostStoreItemVCTelemetryEvent(const struct FSheikStoreItem& StoreItem, const struct FSheikStoreItem& VCPackage, const class FString& Location, const class FString& EventType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.PostStoreItemVCTelemetryEvent");
		
		USheikStoreSystem_PostStoreItemVCTelemetryEvent_Params params {};
		params.StoreItem = StoreItem;
		params.VCPackage = VCPackage;
		params.Location = Location;
		params.EventType = EventType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.PostStoreItemTelemetryEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikStoreItem                             StoreItem                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		class FString                                      Location                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      EventType                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::PostStoreItemTelemetryEvent(const struct FSheikStoreItem& StoreItem, const class FString& Location, const class FString& EventType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.PostStoreItemTelemetryEvent");
		
		USheikStoreSystem_PostStoreItemTelemetryEvent_Params params {};
		params.StoreItem = StoreItem;
		params.Location = Location;
		params.EventType = EventType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.OnWalletIdRevocationOccurred
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FName>                                RevokedWalledIds                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::OnWalletIdRevocationOccurred(TArray<class FName> RevokedWalledIds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.OnWalletIdRevocationOccurred");
		
		USheikStoreSystem_OnWalletIdRevocationOccurred_Params params {};
		params.RevokedWalledIds = RevokedWalledIds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikStoreSystem.OnVirtualCurrencyUpdated__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NewAmount                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            OldAmount                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikStoreErrorType                               Error                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::OnVirtualCurrencyUpdated__DelegateSignature(int32_t NewAmount, int32_t OldAmount, ESheikStoreErrorType Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikStoreSystem.OnVirtualCurrencyUpdated__DelegateSignature");
		
		USheikStoreSystem_OnVirtualCurrencyUpdated__DelegateSignature_Params params {};
		params.NewAmount = NewAmount;
		params.OldAmount = OldAmount;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikStoreSystem.OnUnlockMultipleWalletIdsComplete__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FName>                                WalletIds                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::OnUnlockMultipleWalletIdsComplete__DelegateSignature(TArray<class FName> WalletIds, bool bSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikStoreSystem.OnUnlockMultipleWalletIdsComplete__DelegateSignature");
		
		USheikStoreSystem_OnUnlockMultipleWalletIdsComplete__DelegateSignature_Params params {};
		params.WalletIds = WalletIds;
		params.bSuccessful = bSuccessful;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikStoreSystem.OnRefreshStoreForItems__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikStoreItem>                     StoreItems                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::OnRefreshStoreForItems__DelegateSignature(TArray<struct FSheikStoreItem> StoreItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikStoreSystem.OnRefreshStoreForItems__DelegateSignature");
		
		USheikStoreSystem_OnRefreshStoreForItems__DelegateSignature_Params params {};
		params.StoreItems = StoreItems;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikStoreSystem.OnPurchaseItem__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::OnPurchaseItem__DelegateSignature(bool bSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikStoreSystem.OnPurchaseItem__DelegateSignature");
		
		USheikStoreSystem_OnPurchaseItem__DelegateSignature_Params params {};
		params.bSuccessful = bSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikStoreSystem.OnPurchaseComplete__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikStoreItem                             StoreItem                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::OnPurchaseComplete__DelegateSignature(const struct FSheikStoreItem& StoreItem, bool bSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikStoreSystem.OnPurchaseComplete__DelegateSignature");
		
		USheikStoreSystem_OnPurchaseComplete__DelegateSignature_Params params {};
		params.StoreItem = StoreItem;
		params.bSuccessful = bSuccessful;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikStoreSystem.OnPlatformOffersRetrieved__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikStoreSystem::OnPlatformOffersRetrieved__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikStoreSystem.OnPlatformOffersRetrieved__DelegateSignature");
		
		USheikStoreSystem_OnPlatformOffersRetrieved__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikStoreSystem.OnInitialStoreDataRetrieved__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikStoreSystem::OnInitialStoreDataRetrieved__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikStoreSystem.OnInitialStoreDataRetrieved__DelegateSignature");
		
		USheikStoreSystem_OnInitialStoreDataRetrieved__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.OnEnteredFrontendHandleSyncOfflinePurchasesError
	 * 		Flags  -> ()
	 */
	void USheikStoreSystem::OnEnteredFrontendHandleSyncOfflinePurchasesError()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.OnEnteredFrontendHandleSyncOfflinePurchasesError");
		
		USheikStoreSystem_OnEnteredFrontendHandleSyncOfflinePurchasesError_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.OnApplicationReactivated
	 * 		Flags  -> ()
	 */
	void USheikStoreSystem::OnApplicationReactivated()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.OnApplicationReactivated");
		
		USheikStoreSystem_OnApplicationReactivated_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.LogStorePurchaseEvent
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class APlayerState*                                OwningPlayerState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FSheikStoreItem>                     StoreItems                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::LogStorePurchaseEvent(class APlayerState* OwningPlayerState, TArray<struct FSheikStoreItem> StoreItems, bool bSuccessful)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.LogStorePurchaseEvent");
		
		USheikStoreSystem_LogStorePurchaseEvent_Params params {};
		params.OwningPlayerState = OwningPlayerState;
		params.StoreItems = StoreItems;
		params.bSuccessful = bSuccessful;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.IsPlatformStoreCommunicationEnabled
	 * 		Flags  -> ()
	 */
	bool USheikStoreSystem::IsPlatformStoreCommunicationEnabled()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.IsPlatformStoreCommunicationEnabled");
		
		USheikStoreSystem_IsPlatformStoreCommunicationEnabled_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.IsDataDownloaded
	 * 		Flags  -> ()
	 */
	bool USheikStoreSystem::IsDataDownloaded()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.IsDataDownloaded");
		
		USheikStoreSystem_IsDataDownloaded_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.IsBattlePassStoreCategory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikStoreCategory                         InCategory                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikStoreSystem::IsBattlePassStoreCategory(const struct FSheikStoreCategory& InCategory)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.IsBattlePassStoreCategory");
		
		USheikStoreSystem_IsBattlePassStoreCategory_Params params {};
		params.InCategory = InCategory;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.InitializeCustomizableActor
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UClass*                                      UIActorClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FVector                                     ActorLocation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FQuat                                       ActorDefaultRotation                                       (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::InitializeCustomizableActor(class UClass* UIActorClass, const struct FVector& ActorLocation, const struct FQuat& ActorDefaultRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.InitializeCustomizableActor");
		
		USheikStoreSystem_InitializeCustomizableActor_Params params {};
		params.UIActorClass = UIActorClass;
		params.ActorLocation = ActorLocation;
		params.ActorDefaultRotation = ActorDefaultRotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.Initialize
	 * 		Flags  -> ()
	 */
	void USheikStoreSystem::Initialize()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.Initialize");
		
		USheikStoreSystem_Initialize_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.HasPlatformStoreCategory
	 * 		Flags  -> ()
	 */
	bool USheikStoreSystem::HasPlatformStoreCategory()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.HasPlatformStoreCategory");
		
		USheikStoreSystem_HasPlatformStoreCategory_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.GetWalletSystem
	 * 		Flags  -> ()
	 */
	class USheikWalletSystem* USheikStoreSystem::GetWalletSystem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.GetWalletSystem");
		
		USheikStoreSystem_GetWalletSystem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.GetVirtualCurrency
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikStoreErrorType                               Error                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	int32_t USheikStoreSystem::GetVirtualCurrency(ESheikStoreErrorType* Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.GetVirtualCurrency");
		
		USheikStoreSystem_GetVirtualCurrency_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Error != nullptr)
			*Error = params.Error;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.GetStoreItems
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikStoreItem>                     OutItems                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		ESheikStoreErrorType                               Error                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ESheikStoreItemType                                TypeFilter                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::GetStoreItems(TArray<struct FSheikStoreItem>* OutItems, ESheikStoreErrorType* Error, ESheikStoreItemType TypeFilter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.GetStoreItems");
		
		USheikStoreSystem_GetStoreItems_Params params {};
		params.TypeFilter = TypeFilter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutItems != nullptr)
			*OutItems = params.OutItems;
		if (Error != nullptr)
			*Error = params.Error;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.GetStoreCategory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      ID                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikStoreCategory                         Category                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bFound                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::GetStoreCategory(const class FString& ID, struct FSheikStoreCategory* Category, bool* bFound)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.GetStoreCategory");
		
		USheikStoreSystem_GetStoreCategory_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Category != nullptr)
			*Category = params.Category;
		if (bFound != nullptr)
			*bFound = params.bFound;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.GetStoreCategories
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikStoreCategory>                 Categories                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		ESheikStoreErrorType                               Error                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludeBattlePassCategories                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bIncludePlatformRmtCategories                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::GetStoreCategories(TArray<struct FSheikStoreCategory>* Categories, ESheikStoreErrorType* Error, bool bIncludeBattlePassCategories, bool bIncludePlatformRmtCategories)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.GetStoreCategories");
		
		USheikStoreSystem_GetStoreCategories_Params params {};
		params.bIncludeBattlePassCategories = bIncludeBattlePassCategories;
		params.bIncludePlatformRmtCategories = bIncludePlatformRmtCategories;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Categories != nullptr)
			*Categories = params.Categories;
		if (Error != nullptr)
			*Error = params.Error;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.GetRMTCategoryDefinition
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        InCategoryName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikRMTCategoryDefinition                 OutCategory                                                (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikStoreSystem::GetRMTCategoryDefinition(const class FName& InCategoryName, struct FSheikRMTCategoryDefinition* OutCategory)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.GetRMTCategoryDefinition");
		
		USheikStoreSystem_GetRMTCategoryDefinition_Params params {};
		params.InCategoryName = InCategoryName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutCategory != nullptr)
			*OutCategory = params.OutCategory;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.GetPlatformStoreRmtCategoryByName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        InName                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikStoreCategory                         OutCategory                                                (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikStoreSystem::GetPlatformStoreRmtCategoryByName(const class FName& InName, struct FSheikStoreCategory* OutCategory)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.GetPlatformStoreRmtCategoryByName");
		
		USheikStoreSystem_GetPlatformStoreRmtCategoryByName_Params params {};
		params.InName = InName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutCategory != nullptr)
			*OutCategory = params.OutCategory;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.GetPlatformStoreCategoryNames
	 * 		Flags  -> ()
	 */
	TArray<class FName> USheikStoreSystem::GetPlatformStoreCategoryNames()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.GetPlatformStoreCategoryNames");
		
		USheikStoreSystem_GetPlatformStoreCategoryNames_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.GetPlatformStoreCategory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikStoreCategory                         Category                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bSorted                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::GetPlatformStoreCategory(struct FSheikStoreCategory* Category, bool bSorted)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.GetPlatformStoreCategory");
		
		USheikStoreSystem_GetPlatformStoreCategory_Params params {};
		params.bSorted = bSorted;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Category != nullptr)
			*Category = params.Category;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.GetPlatformRmtCategoryStoreItems
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikRMTCategoryDefinition                 CategoryDefinition                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<struct FSheikStoreItem>                     OutItems                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool USheikStoreSystem::GetPlatformRmtCategoryStoreItems(const struct FSheikRMTCategoryDefinition& CategoryDefinition, TArray<struct FSheikStoreItem>* OutItems)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.GetPlatformRmtCategoryStoreItems");
		
		USheikStoreSystem_GetPlatformRmtCategoryStoreItems_Params params {};
		params.CategoryDefinition = CategoryDefinition;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutItems != nullptr)
			*OutItems = params.OutItems;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.GetPlatformOffersQueryError
	 * 		Flags  -> ()
	 */
	ESheikStoreErrorType USheikStoreSystem::GetPlatformOffersQueryError()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.GetPlatformOffersQueryError");
		
		USheikStoreSystem_GetPlatformOffersQueryError_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.GetCategoryForStoreItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      InStoreItemOfferId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikStoreCategory                         OutCategory                                                (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		ESheikStoreErrorType                               Error                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikStoreSystem::GetCategoryForStoreItem(const class FString& InStoreItemOfferId, struct FSheikStoreCategory* OutCategory, ESheikStoreErrorType* Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.GetCategoryForStoreItem");
		
		USheikStoreSystem_GetCategoryForStoreItem_Params params {};
		params.InStoreItemOfferId = InStoreItemOfferId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutCategory != nullptr)
			*OutCategory = params.OutCategory;
		if (Error != nullptr)
			*Error = params.Error;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.GetBattlePassStoreCategory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikStoreCategory                         Category                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::GetBattlePassStoreCategory(struct FSheikStoreCategory* Category)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.GetBattlePassStoreCategory");
		
		USheikStoreSystem_GetBattlePassStoreCategory_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Category != nullptr)
			*Category = params.Category;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.GenerateRandomStoreItem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikStoreItem                             StoreItem                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::GenerateRandomStoreItem(struct FSheikStoreItem* StoreItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.GenerateRandomStoreItem");
		
		USheikStoreSystem_GenerateRandomStoreItem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (StoreItem != nullptr)
			*StoreItem = params.StoreItem;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.DebugPurchasePlatformStoreOffer
	 * 		Flags  -> ()
	 */
	void USheikStoreSystem::DebugPurchasePlatformStoreOffer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.DebugPurchasePlatformStoreOffer");
		
		USheikStoreSystem_DebugPurchasePlatformStoreOffer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.DebugGiftRandomEntitlement
	 * 		Flags  -> ()
	 */
	void USheikStoreSystem::DebugGiftRandomEntitlement()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.DebugGiftRandomEntitlement");
		
		USheikStoreSystem_DebugGiftRandomEntitlement_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.DebugGetRandomEntitlement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NumToGet                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FName USheikStoreSystem::DebugGetRandomEntitlement(int32_t NumToGet)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.DebugGetRandomEntitlement");
		
		USheikStoreSystem_DebugGetRandomEntitlement_Params params {};
		params.NumToGet = NumToGet;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.DebugGetAllEntitlements
	 * 		Flags  -> ()
	 */
	void USheikStoreSystem::DebugGetAllEntitlements()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.DebugGetAllEntitlements");
		
		USheikStoreSystem_DebugGetAllEntitlements_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.DebugClearAllEntitlements
	 * 		Flags  -> ()
	 */
	void USheikStoreSystem::DebugClearAllEntitlements()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.DebugClearAllEntitlements");
		
		USheikStoreSystem_DebugClearAllEntitlements_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikStoreSystem.DebugAddVirtualCurrency
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Amount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikStoreSystem::DebugAddVirtualCurrency(int32_t Amount)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikStoreSystem.DebugAddVirtualCurrency");
		
		USheikStoreSystem_DebugAddVirtualCurrency_Params params {};
		params.Amount = Amount;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikStoreSystem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikStoreSystem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikStoreSystem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTabBase.SetTabImage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UTexture2D*                                  InTexture                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               bMatchTextureSize                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikTabBase::SetTabImage(class UTexture2D* InTexture, bool bMatchTextureSize)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTabBase.SetTabImage");
		
		USheikTabBase_SetTabImage_Params params {};
		params.InTexture = InTexture;
		params.bMatchTextureSize = bMatchTextureSize;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTabBase.SetLabel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        InLabel                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikTabBase::SetLabel(const class FText& InLabel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTabBase.SetLabel");
		
		USheikTabBase_SetLabel_Params params {};
		params.InLabel = InLabel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTabBase.SelectTab
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               IsSelected                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               SkipAnimation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikTabBase::SelectTab(bool IsSelected, bool SkipAnimation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTabBase.SelectTab");
		
		USheikTabBase_SelectTab_Params params {};
		params.IsSelected = IsSelected;
		params.SkipAnimation = SkipAnimation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTabBase.OnTabUnfocused
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGUI_WidgetBase*                            InWidget                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UserIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikTabBase::OnTabUnfocused(class UIGUI_WidgetBase* InWidget, int32_t UserIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTabBase.OnTabUnfocused");
		
		USheikTabBase_OnTabUnfocused_Params params {};
		params.InWidget = InWidget;
		params.UserIndex = UserIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTabBase.OnTabSelected
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGUI_WidgetBase*                            InWidget                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UserIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikTabBase::OnTabSelected(class UIGUI_WidgetBase* InWidget, int32_t UserIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTabBase.OnTabSelected");
		
		USheikTabBase_OnTabSelected_Params params {};
		params.InWidget = InWidget;
		params.UserIndex = UserIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTabBase.OnTabFocused
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGUI_WidgetBase*                            InWidget                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            UserIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikTabBase::OnTabFocused(class UIGUI_WidgetBase* InWidget, int32_t UserIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTabBase.OnTabFocused");
		
		USheikTabBase_OnTabFocused_Params params {};
		params.InWidget = InWidget;
		params.UserIndex = UserIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTabBase.GetLabel
	 * 		Flags  -> ()
	 */
	class FText USheikTabBase::GetLabel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTabBase.GetLabel");
		
		USheikTabBase_GetLabel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTabBase.GetIsSelected
	 * 		Flags  -> ()
	 */
	bool USheikTabBase::GetIsSelected()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTabBase.GetIsSelected");
		
		USheikTabBase_GetIsSelected_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTabBase.FocusTab
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bFocused                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikTabBase::FocusTab(bool bFocused)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTabBase.FocusTab");
		
		USheikTabBase_FocusTab_Params params {};
		params.bFocused = bFocused;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTabBase.ApplyContentOnPreConstruct
	 * 		Flags  -> ()
	 */
	void USheikTabBase::ApplyContentOnPreConstruct()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTabBase.ApplyContentOnPreConstruct");
		
		USheikTabBase_ApplyContentOnPreConstruct_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikTabBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikTabBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikTabBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTeammateLocationPrompt.UpdateTeammateNameVisibilityOnTeamSize
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            NumAliveTeammates                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikTeammateLocationPrompt::UpdateTeammateNameVisibilityOnTeamSize(int32_t NumAliveTeammates)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTeammateLocationPrompt.UpdateTeammateNameVisibilityOnTeamSize");
		
		USheikTeammateLocationPrompt_UpdateTeammateNameVisibilityOnTeamSize_Params params {};
		params.NumAliveTeammates = NumAliveTeammates;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTeammateLocationPrompt.UpdateTeammateNameVisibility
	 * 		Flags  -> ()
	 */
	void USheikTeammateLocationPrompt::UpdateTeammateNameVisibility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTeammateLocationPrompt.UpdateTeammateNameVisibility");
		
		USheikTeammateLocationPrompt_UpdateTeammateNameVisibility_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTeammateLocationPrompt.UpdatePromptVisibility
	 * 		Flags  -> ()
	 */
	void USheikTeammateLocationPrompt::UpdatePromptVisibility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTeammateLocationPrompt.UpdatePromptVisibility");
		
		USheikTeammateLocationPrompt_UpdatePromptVisibility_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTeammateLocationPrompt.UpdatePromptTimer
	 * 		Flags  -> ()
	 */
	void USheikTeammateLocationPrompt::UpdatePromptTimer()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTeammateLocationPrompt.UpdatePromptTimer");
		
		USheikTeammateLocationPrompt_UpdatePromptTimer_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTeammateLocationPrompt.UpdatePromptPosition
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              DeltaTime                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikTeammateLocationPrompt::UpdatePromptPosition(float DeltaTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTeammateLocationPrompt.UpdatePromptPosition");
		
		USheikTeammateLocationPrompt_UpdatePromptPosition_Params params {};
		params.DeltaTime = DeltaTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikTeammateLocationPrompt.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikTeammateLocationPrompt::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikTeammateLocationPrompt");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikThrownItemIndicator.SetForPlayer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class ASheikPlayerStateCommon*                     SpectatorState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikThrownItemIndicator::SetForPlayer(class ASheikPlayerStateCommon* SpectatorState)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikThrownItemIndicator.SetForPlayer");
		
		USheikThrownItemIndicator_SetForPlayer_Params params {};
		params.SpectatorState = SpectatorState;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikThrownItemIndicator.HideWidget_BP
	 * 		Flags  -> ()
	 */
	void USheikThrownItemIndicator::HideWidget_BP()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikThrownItemIndicator.HideWidget_BP");
		
		USheikThrownItemIndicator_HideWidget_BP_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikThrownItemIndicator.HandleOnThrownItemTargetingPlayer_BP
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGInteractablePickup*                       ThrownItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikThrownItemIndicator::HandleOnThrownItemTargetingPlayer_BP(class AIGInteractablePickup* ThrownItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikThrownItemIndicator.HandleOnThrownItemTargetingPlayer_BP");
		
		USheikThrownItemIndicator_HandleOnThrownItemTargetingPlayer_BP_Params params {};
		params.ThrownItem = ThrownItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikThrownItemIndicator.HandleOnThrownItemNoLongerTargetingPlayer_BP
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class AIGInteractablePickup*                       ThrownItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikThrownItemIndicator::HandleOnThrownItemNoLongerTargetingPlayer_BP(class AIGInteractablePickup* ThrownItem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikThrownItemIndicator.HandleOnThrownItemNoLongerTargetingPlayer_BP");
		
		USheikThrownItemIndicator_HandleOnThrownItemNoLongerTargetingPlayer_BP_Params params {};
		params.ThrownItem = ThrownItem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikThrownItemIndicator.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikThrownItemIndicator::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikThrownItemIndicator");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardBase.TryGetStatByName
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        RawStatName                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikPlayerDataStat                        OutStat                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
	 * 		class USheikGameInstance*                          GameInstanceRef                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikTitleCardBase::TryGetStatByName(const class FName& RawStatName, struct FSheikPlayerDataStat* OutStat, class USheikGameInstance* GameInstanceRef)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardBase.TryGetStatByName");
		
		USheikTitleCardBase_TryGetStatByName_Params params {};
		params.RawStatName = RawStatName;
		params.GameInstanceRef = GameInstanceRef;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutStat != nullptr)
			*OutStat = params.OutStat;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardBase.SetEnemyStatInfo
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGStatsSystem*                              StatsSystem                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FIGTitleCardStat>                    TitleCardStats                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<float>                                      TitleCardStatValues                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikTitleCardBase::SetEnemyStatInfo(class UIGStatsSystem* StatsSystem, TArray<struct FIGTitleCardStat> TitleCardStats, TArray<float> TitleCardStatValues)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardBase.SetEnemyStatInfo");
		
		USheikTitleCardBase_SetEnemyStatInfo_Params params {};
		params.StatsSystem = StatsSystem;
		params.TitleCardStats = TitleCardStats;
		params.TitleCardStatValues = TitleCardStatValues;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardBase.SetCurrentTitleCard
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTitleCardLoadout                           TitleCardLoadout                                           (Parm, NativeAccessSpecifierPublic)
	 * 		class FString                                      UserName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<float>                                      StatArray                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bPlayerIsDead                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikTitleCardBase::SetCurrentTitleCard(const struct FTitleCardLoadout& TitleCardLoadout, const class FString& UserName, TArray<float> StatArray, bool bPlayerIsDead)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardBase.SetCurrentTitleCard");
		
		USheikTitleCardBase_SetCurrentTitleCard_Params params {};
		params.TitleCardLoadout = TitleCardLoadout;
		params.UserName = UserName;
		params.StatArray = StatArray;
		params.bPlayerIsDead = bPlayerIsDead;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardBase.SetBackgroundVisible
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               BackgroundVisible                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikTitleCardBase::SetBackgroundVisible(bool BackgroundVisible)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardBase.SetBackgroundVisible");
		
		USheikTitleCardBase_SetBackgroundVisible_Params params {};
		params.BackgroundVisible = BackgroundVisible;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardBase.ReleaseLoadedTitleCardData
	 * 		Flags  -> ()
	 */
	void USheikTitleCardBase::ReleaseLoadedTitleCardData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardBase.ReleaseLoadedTitleCardData");
		
		USheikTitleCardBase_ReleaseLoadedTitleCardData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardBase.OnVariableImageLoadFailed
	 * 		Flags  -> ()
	 */
	void USheikTitleCardBase::OnVariableImageLoadFailed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardBase.OnVariableImageLoadFailed");
		
		USheikTitleCardBase_OnVariableImageLoadFailed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikTitleCardBase.OnVariableImageDataReady__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikTitleCardBase::OnVariableImageDataReady__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikTitleCardBase.OnVariableImageDataReady__DelegateSignature");
		
		USheikTitleCardBase_OnVariableImageDataReady__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikTitleCardBase.OnLoadoutSoftPointersLoadSucceeded__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikTitleCardBase::OnLoadoutSoftPointersLoadSucceeded__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikTitleCardBase.OnLoadoutSoftPointersLoadSucceeded__DelegateSignature");
		
		USheikTitleCardBase_OnLoadoutSoftPointersLoadSucceeded__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikTitleCardBase.OnLoadoutSoftPointersLoadFailed__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikTitleCardBase::OnLoadoutSoftPointersLoadFailed__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikTitleCardBase.OnLoadoutSoftPointersLoadFailed__DelegateSignature");
		
		USheikTitleCardBase_OnLoadoutSoftPointersLoadFailed__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardBase.LoadVariableImageData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGVariableImageData                        InImageData                                                (Parm, NativeAccessSpecifierPublic)
	 */
	void USheikTitleCardBase::LoadVariableImageData(const struct FIGVariableImageData& InImageData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardBase.LoadVariableImageData");
		
		USheikTitleCardBase_LoadVariableImageData_Params params {};
		params.InImageData = InImageData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardBase.LoadAllLoadoutSoftPointers
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTitleCardLoadout                           InTitleCardLoadout                                         (Parm, NativeAccessSpecifierPublic)
	 */
	void USheikTitleCardBase::LoadAllLoadoutSoftPointers(const struct FTitleCardLoadout& InTitleCardLoadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardBase.LoadAllLoadoutSoftPointers");
		
		USheikTitleCardBase_LoadAllLoadoutSoftPointers_Params params {};
		params.InTitleCardLoadout = InTitleCardLoadout;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardBase.HandleOnVariableImageDataLoadComplete
	 * 		Flags  -> ()
	 */
	void USheikTitleCardBase::HandleOnVariableImageDataLoadComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardBase.HandleOnVariableImageDataLoadComplete");
		
		USheikTitleCardBase_HandleOnVariableImageDataLoadComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardBase.HandleOnLoadoutSoftPointersLoadComplete
	 * 		Flags  -> ()
	 */
	void USheikTitleCardBase::HandleOnLoadoutSoftPointersLoadComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardBase.HandleOnLoadoutSoftPointersLoadComplete");
		
		USheikTitleCardBase_HandleOnLoadoutSoftPointersLoadComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardBase.GetSoftObjectPathsFromLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTitleCardLoadout                           InTitleCardLoadout                                         (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	TArray<struct FSoftObjectPath> USheikTitleCardBase::GetSoftObjectPathsFromLoadout(struct FTitleCardLoadout* InTitleCardLoadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardBase.GetSoftObjectPathsFromLoadout");
		
		USheikTitleCardBase_GetSoftObjectPathsFromLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (InTitleCardLoadout != nullptr)
			*InTitleCardLoadout = params.InTitleCardLoadout;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikTitleCardBase.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikTitleCardBase::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikTitleCardBase");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardDataManager.TranslateFromIdsToLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FTitleCardLoadoutIds                        InLoadoutIds                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FTitleCardLoadout                           OutLoadoutData                                             (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikTitleCardDataManager::TranslateFromIdsToLoadout(const struct FTitleCardLoadoutIds& InLoadoutIds, struct FTitleCardLoadout* OutLoadoutData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardDataManager.TranslateFromIdsToLoadout");
		
		USheikTitleCardDataManager_TranslateFromIdsToLoadout_Params params {};
		params.InLoadoutIds = InLoadoutIds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutLoadoutData != nullptr)
			*OutLoadoutData = params.OutLoadoutData;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardDataManager.HandleOnWalletAssetUnlocked
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FName>                                WalletIds                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<class FName>                                FailedCodes                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikTitleCardDataManager::HandleOnWalletAssetUnlocked(TArray<class FName> WalletIds, TArray<class FName> FailedCodes)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardDataManager.HandleOnWalletAssetUnlocked");
		
		USheikTitleCardDataManager_HandleOnWalletAssetUnlocked_Params params {};
		params.WalletIds = WalletIds;
		params.FailedCodes = FailedCodes;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikTitleCardDataManager.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikTitleCardDataManager::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikTitleCardDataManager");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.UnequipRewardFromSlot
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikTitleCardDataType                            RewardType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		ETitleCardStackOrder                               SlotToUse                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikTitleCardFrontendUtility::UnequipRewardFromSlot(ESheikTitleCardDataType RewardType, ETitleCardStackOrder SlotToUse)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.UnequipRewardFromSlot");
		
		ASheikTitleCardFrontendUtility_UnequipRewardFromSlot_Params params {};
		params.RewardType = RewardType;
		params.SlotToUse = SlotToUse;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.UnequipReward
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikTitleCardDataType                            RewardType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikTitleCardFrontendUtility::UnequipReward(ESheikTitleCardDataType RewardType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.UnequipReward");
		
		ASheikTitleCardFrontendUtility_UnequipReward_Params params {};
		params.RewardType = RewardType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.SpawnCharacterPreview
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::SpawnCharacterPreview()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.SpawnCharacterPreview");
		
		ASheikTitleCardFrontendUtility_SpawnCharacterPreview_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.SetupUtility
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::SetupUtility()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.SetupUtility");
		
		ASheikTitleCardFrontendUtility_SetupUtility_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.SetupTitleCardLoadout
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::SetupTitleCardLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.SetupTitleCardLoadout");
		
		ASheikTitleCardFrontendUtility_SetupTitleCardLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.SetSheikAccessorySystem
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class USheikAccessorySystem*                       InAccessorySystem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikTitleCardFrontendUtility::SetSheikAccessorySystem(class USheikAccessorySystem* InAccessorySystem)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.SetSheikAccessorySystem");
		
		ASheikTitleCardFrontendUtility_SetSheikAccessorySystem_Params params {};
		params.InAccessorySystem = InAccessorySystem;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.SaveNewLoadout
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::SaveNewLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.SaveNewLoadout");
		
		ASheikTitleCardFrontendUtility_SaveNewLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.ReleaseLoadedPoseMontages
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::ReleaseLoadedPoseMontages()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.ReleaseLoadedPoseMontages");
		
		ASheikTitleCardFrontendUtility_ReleaseLoadedPoseMontages_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.RandomizeReward
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikTitleCardDataType                            RewardType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikTitleCardFrontendUtility::RandomizeReward(ESheikTitleCardDataType RewardType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.RandomizeReward");
		
		ASheikTitleCardFrontendUtility_RandomizeReward_Params params {};
		params.RewardType = RewardType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.RandomizeAllTitleCardRewards
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::RandomizeAllTitleCardRewards()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.RandomizeAllTitleCardRewards");
		
		ASheikTitleCardFrontendUtility_RandomizeAllTitleCardRewards_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.PreviewTitleCardBackground
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGTitleCardBackground                      NewBackground                                              (Parm, NativeAccessSpecifierPublic)
	 */
	void ASheikTitleCardFrontendUtility::PreviewTitleCardBackground(const struct FIGTitleCardBackground& NewBackground)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.PreviewTitleCardBackground");
		
		ASheikTitleCardFrontendUtility_PreviewTitleCardBackground_Params params {};
		params.NewBackground = NewBackground;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.PreviewStatInSlot
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGTitleCardStat                            NewStat                                                    (Parm, NativeAccessSpecifierPublic)
	 * 		ETitleCardStackOrder                               SlotToUse                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikTitleCardFrontendUtility::PreviewStatInSlot(const struct FIGTitleCardStat& NewStat, ETitleCardStackOrder SlotToUse)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.PreviewStatInSlot");
		
		ASheikTitleCardFrontendUtility_PreviewStatInSlot_Params params {};
		params.NewStat = NewStat;
		params.SlotToUse = SlotToUse;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.PreviewPlayerTitle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGTitleCardPlayerTitle                     NewPlayerTitle                                             (Parm, NativeAccessSpecifierPublic)
	 */
	void ASheikTitleCardFrontendUtility::PreviewPlayerTitle(const struct FIGTitleCardPlayerTitle& NewPlayerTitle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.PreviewPlayerTitle");
		
		ASheikTitleCardFrontendUtility_PreviewPlayerTitle_Params params {};
		params.NewPlayerTitle = NewPlayerTitle;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.PreviewPlayerPose
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGTitleCardPlayerPose                      NewPose                                                    (Parm, NativeAccessSpecifierPublic)
	 */
	void ASheikTitleCardFrontendUtility::PreviewPlayerPose(const struct FIGTitleCardPlayerPose& NewPose)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.PreviewPlayerPose");
		
		ASheikTitleCardFrontendUtility_PreviewPlayerPose_Params params {};
		params.NewPose = NewPose;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.PreviewMedalInSlot
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGTitleCardMedal                           NewMedal                                                   (Parm, NativeAccessSpecifierPublic)
	 * 		ETitleCardStackOrder                               SlotToUse                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikTitleCardFrontendUtility::PreviewMedalInSlot(const struct FIGTitleCardMedal& NewMedal, ETitleCardStackOrder SlotToUse)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.PreviewMedalInSlot");
		
		ASheikTitleCardFrontendUtility_PreviewMedalInSlot_Params params {};
		params.NewMedal = NewMedal;
		params.SlotToUse = SlotToUse;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.PreviewBorder
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGTitleCardBorder                          NewBorder                                                  (Parm, NativeAccessSpecifierPublic)
	 */
	void ASheikTitleCardFrontendUtility::PreviewBorder(const struct FIGTitleCardBorder& NewBorder)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.PreviewBorder");
		
		ASheikTitleCardFrontendUtility_PreviewBorder_Params params {};
		params.NewBorder = NewBorder;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.PoseCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGTitleCardPlayerPose                      PoseToUse                                                  (Parm, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::PoseCharacter(const struct FIGTitleCardPlayerPose& PoseToUse)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.PoseCharacter");
		
		ASheikTitleCardFrontendUtility_PoseCharacter_Params params {};
		params.PoseToUse = PoseToUse;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikTitleCardFrontendUtility.OnUnsavedTitleCardChangesDetected__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::OnUnsavedTitleCardChangesDetected__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikTitleCardFrontendUtility.OnUnsavedTitleCardChangesDetected__DelegateSignature");
		
		ASheikTitleCardFrontendUtility_OnUnsavedTitleCardChangesDetected__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikTitleCardFrontendUtility.OnTitleCardChangesSaved__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::OnTitleCardChangesSaved__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikTitleCardFrontendUtility.OnTitleCardChangesSaved__DelegateSignature");
		
		ASheikTitleCardFrontendUtility_OnTitleCardChangesSaved__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.OnPoseMontageLoadFailed
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::OnPoseMontageLoadFailed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.OnPoseMontageLoadFailed");
		
		ASheikTitleCardFrontendUtility_OnPoseMontageLoadFailed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.OnPoseMontageLoadComplete
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UIGMoveMontage*                              LoadedMontage                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikTitleCardFrontendUtility::OnPoseMontageLoadComplete(class UIGMoveMontage* LoadedMontage)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.OnPoseMontageLoadComplete");
		
		ASheikTitleCardFrontendUtility_OnPoseMontageLoadComplete_Params params {};
		params.LoadedMontage = LoadedMontage;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikTitleCardFrontendUtility.OnCharacterPreviewReady__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::OnCharacterPreviewReady__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikTitleCardFrontendUtility.OnCharacterPreviewReady__DelegateSignature");
		
		ASheikTitleCardFrontendUtility_OnCharacterPreviewReady__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikTitleCardFrontendUtility.OnCharacterPoseReady__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::OnCharacterPoseReady__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikTitleCardFrontendUtility.OnCharacterPoseReady__DelegateSignature");
		
		ASheikTitleCardFrontendUtility_OnCharacterPoseReady__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.LoadPoseMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGTitleCardPlayerPose                      InPoseData                                                 (Parm, NativeAccessSpecifierPublic)
	 */
	void ASheikTitleCardFrontendUtility::LoadPoseMontage(const struct FIGTitleCardPlayerPose& InPoseData)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.LoadPoseMontage");
		
		ASheikTitleCardFrontendUtility_LoadPoseMontage_Params params {};
		params.InPoseData = InPoseData;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.LoadCurrentTitleCardLoadout
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::LoadCurrentTitleCardLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.LoadCurrentTitleCardLoadout");
		
		ASheikTitleCardFrontendUtility_LoadCurrentTitleCardLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.Init
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::Init()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.Init");
		
		ASheikTitleCardFrontendUtility_Init_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.HandleOnPoseMontageLoadComplete
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::HandleOnPoseMontageLoadComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.HandleOnPoseMontageLoadComplete");
		
		ASheikTitleCardFrontendUtility_HandleOnPoseMontageLoadComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetWalletSystem
	 * 		Flags  -> ()
	 */
	class USheikWalletSystem* ASheikTitleCardFrontendUtility::GetWalletSystem()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetWalletSystem");
		
		ASheikTitleCardFrontendUtility_GetWalletSystem_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetTitleCardRewardsByType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		ESheikTitleCardDataType                            RewardType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		TArray<struct FIGTitleCardBase>                    OutRewards                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetTitleCardRewardsByType(ESheikTitleCardDataType RewardType, TArray<struct FIGTitleCardBase>* OutRewards)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetTitleCardRewardsByType");
		
		ASheikTitleCardFrontendUtility_GetTitleCardRewardsByType_Params params {};
		params.RewardType = RewardType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutRewards != nullptr)
			*OutRewards = params.OutRewards;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetStats
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FIGTitleCardStat>                    OutStats                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetStats(TArray<struct FIGTitleCardStat>* OutStats)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetStats");
		
		ASheikTitleCardFrontendUtility_GetStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutStats != nullptr)
			*OutStats = params.OutStats;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetStatById
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FIGTitleCardStat                            OutStat                                                    (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetStatById(const class FName& ID, struct FIGTitleCardStat* OutStat)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetStatById");
		
		ASheikTitleCardFrontendUtility_GetStatById_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutStat != nullptr)
			*OutStat = params.OutStat;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetPlayerTitles
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FIGTitleCardPlayerTitle>             OutTitles                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetPlayerTitles(TArray<struct FIGTitleCardPlayerTitle>* OutTitles)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetPlayerTitles");
		
		ASheikTitleCardFrontendUtility_GetPlayerTitles_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutTitles != nullptr)
			*OutTitles = params.OutTitles;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetPlayerTitleById
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FIGTitleCardPlayerTitle                     OutPlayerTitle                                             (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetPlayerTitleById(const class FName& ID, struct FIGTitleCardPlayerTitle* OutPlayerTitle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetPlayerTitleById");
		
		ASheikTitleCardFrontendUtility_GetPlayerTitleById_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPlayerTitle != nullptr)
			*OutPlayerTitle = params.OutPlayerTitle;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetPlayerPoses
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FIGTitleCardPlayerPose>              OutPlayerPoses                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetPlayerPoses(TArray<struct FIGTitleCardPlayerPose>* OutPlayerPoses)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetPlayerPoses");
		
		ASheikTitleCardFrontendUtility_GetPlayerPoses_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPlayerPoses != nullptr)
			*OutPlayerPoses = params.OutPlayerPoses;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetPlayerPoseById
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FIGTitleCardPlayerPose                      OutPlayerPoses                                             (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetPlayerPoseById(const class FName& ID, struct FIGTitleCardPlayerPose* OutPlayerPoses)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetPlayerPoseById");
		
		ASheikTitleCardFrontendUtility_GetPlayerPoseById_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPlayerPoses != nullptr)
			*OutPlayerPoses = params.OutPlayerPoses;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetMedals
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FIGTitleCardMedal>                   OutMedals                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetMedals(TArray<struct FIGTitleCardMedal>* OutMedals)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetMedals");
		
		ASheikTitleCardFrontendUtility_GetMedals_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutMedals != nullptr)
			*OutMedals = params.OutMedals;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetMedalById
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FIGTitleCardMedal                           OutMedal                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetMedalById(const class FName& ID, struct FIGTitleCardMedal* OutMedal)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetMedalById");
		
		ASheikTitleCardFrontendUtility_GetMedalById_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutMedal != nullptr)
			*OutMedal = params.OutMedal;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetDesiredLoadout
	 * 		Flags  -> ()
	 */
	struct FTitleCardLoadout ASheikTitleCardFrontendUtility::GetDesiredLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetDesiredLoadout");
		
		ASheikTitleCardFrontendUtility_GetDesiredLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetCurrentlyEquippedStats
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TMap<ETitleCardStackOrder, struct FIGTitleCardStat> OutStats                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetCurrentlyEquippedStats(TMap<ETitleCardStackOrder, struct FIGTitleCardStat>* OutStats)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetCurrentlyEquippedStats");
		
		ASheikTitleCardFrontendUtility_GetCurrentlyEquippedStats_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutStats != nullptr)
			*OutStats = params.OutStats;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetCurrentlyEquippedPlayerTitle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGTitleCardPlayerTitle                     OutPlayerTitle                                             (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetCurrentlyEquippedPlayerTitle(struct FIGTitleCardPlayerTitle* OutPlayerTitle)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetCurrentlyEquippedPlayerTitle");
		
		ASheikTitleCardFrontendUtility_GetCurrentlyEquippedPlayerTitle_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPlayerTitle != nullptr)
			*OutPlayerTitle = params.OutPlayerTitle;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetCurrentlyEquippedPlayerPose
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGTitleCardPlayerPose                      OutPlayerPose                                              (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetCurrentlyEquippedPlayerPose(struct FIGTitleCardPlayerPose* OutPlayerPose)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetCurrentlyEquippedPlayerPose");
		
		ASheikTitleCardFrontendUtility_GetCurrentlyEquippedPlayerPose_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPlayerPose != nullptr)
			*OutPlayerPose = params.OutPlayerPose;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetCurrentlyEquippedMedals
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TMap<ETitleCardStackOrder, struct FIGTitleCardMedal> OutPlayerMedals                                            (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetCurrentlyEquippedMedals(TMap<ETitleCardStackOrder, struct FIGTitleCardMedal>* OutPlayerMedals)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetCurrentlyEquippedMedals");
		
		ASheikTitleCardFrontendUtility_GetCurrentlyEquippedMedals_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutPlayerMedals != nullptr)
			*OutPlayerMedals = params.OutPlayerMedals;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetCurrentlyEquippedLoadout
	 * 		Flags  -> ()
	 */
	struct FTitleCardLoadout ASheikTitleCardFrontendUtility::GetCurrentlyEquippedLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetCurrentlyEquippedLoadout");
		
		ASheikTitleCardFrontendUtility_GetCurrentlyEquippedLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetCurrentlyEquippedBorder
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGTitleCardBorder                          OutBorder                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetCurrentlyEquippedBorder(struct FIGTitleCardBorder* OutBorder)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetCurrentlyEquippedBorder");
		
		ASheikTitleCardFrontendUtility_GetCurrentlyEquippedBorder_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBorder != nullptr)
			*OutBorder = params.OutBorder;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetCurrentlyEquippedBackground
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FIGTitleCardBackground                      OutBackground                                              (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetCurrentlyEquippedBackground(struct FIGTitleCardBackground* OutBackground)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetCurrentlyEquippedBackground");
		
		ASheikTitleCardFrontendUtility_GetCurrentlyEquippedBackground_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBackground != nullptr)
			*OutBackground = params.OutBackground;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetCurrentlyEquipped
	 * 		Flags  -> ()
	 */
	struct FTitleCardLoadoutIds ASheikTitleCardFrontendUtility::GetCurrentlyEquipped()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetCurrentlyEquipped");
		
		ASheikTitleCardFrontendUtility_GetCurrentlyEquipped_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetBorders
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FIGTitleCardBorder>                  OutBorders                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetBorders(TArray<struct FIGTitleCardBorder>* OutBorders)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetBorders");
		
		ASheikTitleCardFrontendUtility_GetBorders_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBorders != nullptr)
			*OutBorders = params.OutBorders;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetBorderById
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FIGTitleCardBorder                          OutBorder                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetBorderById(const class FName& ID, struct FIGTitleCardBorder* OutBorder)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetBorderById");
		
		ASheikTitleCardFrontendUtility_GetBorderById_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBorder != nullptr)
			*OutBorder = params.OutBorder;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetBackgrounds
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FIGTitleCardBackground>              OutBackgrounds                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetBackgrounds(TArray<struct FIGTitleCardBackground>* OutBackgrounds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetBackgrounds");
		
		ASheikTitleCardFrontendUtility_GetBackgrounds_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBackgrounds != nullptr)
			*OutBackgrounds = params.OutBackgrounds;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.GetBackgroundById
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        ID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FIGTitleCardBackground                      OutBackground                                              (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool ASheikTitleCardFrontendUtility::GetBackgroundById(const class FName& ID, struct FIGTitleCardBackground* OutBackground)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.GetBackgroundById");
		
		ASheikTitleCardFrontendUtility_GetBackgroundById_Params params {};
		params.ID = ID;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutBackground != nullptr)
			*OutBackground = params.OutBackground;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.EquipPreviewedReward
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::EquipPreviewedReward()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.EquipPreviewedReward");
		
		ASheikTitleCardFrontendUtility_EquipPreviewedReward_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikTitleCardFrontendUtility.DebugOnlyRefreshTitleCardContent__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::DebugOnlyRefreshTitleCardContent__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikTitleCardFrontendUtility.DebugOnlyRefreshTitleCardContent__DelegateSignature");
		
		ASheikTitleCardFrontendUtility_DebugOnlyRefreshTitleCardContent__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.DebugOnly_UpdateCurrentlyEquippedWithRandom
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::DebugOnly_UpdateCurrentlyEquippedWithRandom()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.DebugOnly_UpdateCurrentlyEquippedWithRandom");
		
		ASheikTitleCardFrontendUtility_DebugOnly_UpdateCurrentlyEquippedWithRandom_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.DebugOnly_UpdateCurrentlyEquippedWithDefaults
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::DebugOnly_UpdateCurrentlyEquippedWithDefaults()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.DebugOnly_UpdateCurrentlyEquippedWithDefaults");
		
		ASheikTitleCardFrontendUtility_DebugOnly_UpdateCurrentlyEquippedWithDefaults_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.ClearPreview
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::ClearPreview()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.ClearPreview");
		
		ASheikTitleCardFrontendUtility_ClearPreview_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikTitleCardFrontendUtility.ApplyCharacterPreviewLoadout
	 * 		Flags  -> ()
	 */
	void ASheikTitleCardFrontendUtility::ApplyCharacterPreviewLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikTitleCardFrontendUtility.ApplyCharacterPreviewLoadout");
		
		ASheikTitleCardFrontendUtility_ApplyCharacterPreviewLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikTitleCardFrontendUtility.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikTitleCardFrontendUtility::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikTitleCardFrontendUtility");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.ToggleInputControl
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bAllowInput                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikUIActor::ToggleInputControl(bool bAllowInput)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.ToggleInputControl");
		
		ASheikUIActor_ToggleInputControl_Params params {};
		params.bAllowInput = bAllowInput;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.StopMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              BlendOutTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikUIActor::StopMontage(float BlendOutTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.StopMontage");
		
		ASheikUIActor_StopMontage_Params params {};
		params.BlendOutTime = BlendOutTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.SetRotationAppliesToCharacter
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               RotationAppliesToCharacter                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikUIActor::SetRotationAppliesToCharacter(bool RotationAppliesToCharacter)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.SetRotationAppliesToCharacter");
		
		ASheikUIActor_SetRotationAppliesToCharacter_Params params {};
		params.RotationAppliesToCharacter = RotationAppliesToCharacter;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.SetInputThresholdByBody
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikAccessoryInfo                         BodyInfo                                                   (Parm, NativeAccessSpecifierPublic)
	 * 		float                                              CameraHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikUIActor::SetInputThresholdByBody(const struct FSheikAccessoryInfo& BodyInfo, float CameraHeight)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.SetInputThresholdByBody");
		
		ASheikUIActor_SetInputThresholdByBody_Params params {};
		params.BodyInfo = BodyInfo;
		params.CameraHeight = CameraHeight;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.SetFixedCamera
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FVector                                     CamLocation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FQuat                                       CamRotation                                                (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void ASheikUIActor::SetFixedCamera(const struct FVector& CamLocation, const struct FQuat& CamRotation)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.SetFixedCamera");
		
		ASheikUIActor_SetFixedCamera_Params params {};
		params.CamLocation = CamLocation;
		params.CamRotation = CamRotation;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.SetCameraToRegion
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikBodyRegionInfo                        FocusRegionInfo                                            (Parm, NativeAccessSpecifierPublic)
	 */
	void ASheikUIActor::SetCameraToRegion(const struct FSheikBodyRegionInfo& FocusRegionInfo)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.SetCameraToRegion");
		
		ASheikUIActor_SetCameraToRegion_Params params {};
		params.FocusRegionInfo = FocusRegionInfo;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.SetAllowZoomInput
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bAllowZoomInput                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikUIActor::SetAllowZoomInput(bool bAllowZoomInput)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.SetAllowZoomInput");
		
		ASheikUIActor_SetAllowZoomInput_Params params {};
		params.bAllowZoomInput = bAllowZoomInput;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.SetAllowRotationInput
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bAllowRotationInput                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikUIActor::SetAllowRotationInput(bool bAllowRotationInput)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.SetAllowRotationInput");
		
		ASheikUIActor_SetAllowRotationInput_Params params {};
		params.bAllowRotationInput = bAllowRotationInput;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.SetAllowFocusWithoutInput
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bAllowFocus                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikUIActor::SetAllowFocusWithoutInput(bool bAllowFocus)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.SetAllowFocusWithoutInput");
		
		ASheikUIActor_SetAllowFocusWithoutInput_Params params {};
		params.bAllowFocus = bAllowFocus;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.PlayOrStopMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class UAnimMontage*                                MontageToPlay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              BlendOutTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikUIActor::PlayOrStopMontage(class UAnimMontage* MontageToPlay, float BlendOutTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.PlayOrStopMontage");
		
		ASheikUIActor_PlayOrStopMontage_Params params {};
		params.MontageToPlay = MontageToPlay;
		params.BlendOutTime = BlendOutTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.OnZoomOutReleased
	 * 		Flags  -> ()
	 */
	void ASheikUIActor::OnZoomOutReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.OnZoomOutReleased");
		
		ASheikUIActor_OnZoomOutReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.OnZoomOutPressed
	 * 		Flags  -> ()
	 */
	void ASheikUIActor::OnZoomOutPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.OnZoomOutPressed");
		
		ASheikUIActor_OnZoomOutPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.OnZoomInReleased
	 * 		Flags  -> ()
	 */
	void ASheikUIActor::OnZoomInReleased()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.OnZoomInReleased");
		
		ASheikUIActor_OnZoomInReleased_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.OnZoomInPressed
	 * 		Flags  -> ()
	 */
	void ASheikUIActor::OnZoomInPressed()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.OnZoomInPressed");
		
		ASheikUIActor_OnZoomInPressed_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikUIActor.OnSkinAssetLoadComplete__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikUIActor::OnSkinAssetLoadComplete__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikUIActor.OnSkinAssetLoadComplete__DelegateSignature");
		
		ASheikUIActor_OnSkinAssetLoadComplete__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikUIActor.OnEyeColorAssetLoadComplete__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikUIActor::OnEyeColorAssetLoadComplete__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikUIActor.OnEyeColorAssetLoadComplete__DelegateSignature");
		
		ASheikUIActor_OnEyeColorAssetLoadComplete__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikUIActor.OnEyebrowAssetLoadComplete__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikUIActor::OnEyebrowAssetLoadComplete__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikUIActor.OnEyebrowAssetLoadComplete__DelegateSignature");
		
		ASheikUIActor_OnEyebrowAssetLoadComplete__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikUIActor.OnBodyAssetsLoadComplete__DelegateSignature
	 * 		Flags  -> ()
	 */
	void ASheikUIActor::OnBodyAssetsLoadComplete__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikUIActor.OnBodyAssetsLoadComplete__DelegateSignature");
		
		ASheikUIActor_OnBodyAssetsLoadComplete__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.HideSkinByZone
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<EIGSkinZones>                               SkinZoneList                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void ASheikUIActor::HideSkinByZone(TArray<EIGSkinZones> SkinZoneList)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.HideSkinByZone");
		
		ASheikUIActor_HideSkinByZone_Params params {};
		params.SkinZoneList = SkinZoneList;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.ForceSetCameraToDefaultPosition
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              CameraHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              CameraPan                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikUIActor::ForceSetCameraToDefaultPosition(float CameraHeight, float CameraPan)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.ForceSetCameraToDefaultPosition");
		
		ASheikUIActor_ForceSetCameraToDefaultPosition_Params params {};
		params.CameraHeight = CameraHeight;
		params.CameraPan = CameraPan;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActor.FocusCameraToRegion
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikBodyRegionInfo                        FocusRegionInfo                                            (Parm, NativeAccessSpecifierPublic)
	 * 		float                                              InLerpSpeed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void ASheikUIActor::FocusCameraToRegion(const struct FSheikBodyRegionInfo& FocusRegionInfo, float InLerpSpeed)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActor.FocusCameraToRegion");
		
		ASheikUIActor_FocusCameraToRegion_Params params {};
		params.FocusRegionInfo = FocusRegionInfo;
		params.InLerpSpeed = InLerpSpeed;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikUIActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikUIActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikUIActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikUIActorAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikUIActorAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikUIActorAnimInstance");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.WillAccessoryExceedMaxBudget
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikAccessoryInfo                         Accessory                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikUIActorCustomizer::WillAccessoryExceedMaxBudget(const struct FSheikAccessoryInfo& Accessory)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.WillAccessoryExceedMaxBudget");
		
		USheikUIActorCustomizer_WillAccessoryExceedMaxBudget_Params params {};
		params.Accessory = Accessory;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.UpdateModel
	 * 		Flags  -> ()
	 */
	void USheikUIActorCustomizer::UpdateModel()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.UpdateModel");
		
		USheikUIActorCustomizer_UpdateModel_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.UnSetAccessory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikAccessoryInfo                         Accessory                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bUpdateModel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikUIActorCustomizer::UnSetAccessory(const struct FSheikAccessoryInfo& Accessory, bool bUpdateModel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.UnSetAccessory");
		
		USheikUIActorCustomizer_UnSetAccessory_Params params {};
		params.Accessory = Accessory;
		params.bUpdateModel = bUpdateModel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.StopAccessoryMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              BlendOutTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikUIActorCustomizer::StopAccessoryMontage(float BlendOutTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.StopAccessoryMontage");
		
		USheikUIActorCustomizer_StopAccessoryMontage_Params params {};
		params.BlendOutTime = BlendOutTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.SetModelVisible
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bVisible                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               AllowInput                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikUIActorCustomizer::SetModelVisible(bool bVisible, bool AllowInput)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.SetModelVisible");
		
		USheikUIActorCustomizer_SetModelVisible_Params params {};
		params.bVisible = bVisible;
		params.AllowInput = AllowInput;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.SetCamera
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              ZoomDistance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              CameraHeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              CameraPan                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              FOV                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Pitch                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikUIActorCustomizer::SetCamera(float ZoomDistance, float CameraHeight, float CameraPan, float FOV, float Pitch)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.SetCamera");
		
		USheikUIActorCustomizer_SetCamera_Params params {};
		params.ZoomDistance = ZoomDistance;
		params.CameraHeight = CameraHeight;
		params.CameraPan = CameraPan;
		params.FOV = FOV;
		params.Pitch = Pitch;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.SetBaseLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterLoadout                           InBaseLoadout                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikUIActorCustomizer::SetBaseLoadout(const struct FCharacterLoadout& InBaseLoadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.SetBaseLoadout");
		
		USheikUIActorCustomizer_SetBaseLoadout_Params params {};
		params.InBaseLoadout = InBaseLoadout;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.SetAccessory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikAccessoryInfo                         Accessory                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bUpdateModel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikUIActorCustomizer::SetAccessory(const struct FSheikAccessoryInfo& Accessory, bool bUpdateModel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.SetAccessory");
		
		USheikUIActorCustomizer_SetAccessory_Params params {};
		params.Accessory = Accessory;
		params.bUpdateModel = bUpdateModel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.SaveDesiredLoadoutAsPreset
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            AddedIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		int32_t                                            PresetSlotIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikUIActorCustomizer::SaveDesiredLoadoutAsPreset(int32_t AddedIndex, int32_t PresetSlotIndex)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.SaveDesiredLoadoutAsPreset");
		
		USheikUIActorCustomizer_SaveDesiredLoadoutAsPreset_Params params {};
		params.AddedIndex = AddedIndex;
		params.PresetSlotIndex = PresetSlotIndex;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.SaveBaseLoadout
	 * 		Flags  -> ()
	 */
	void USheikUIActorCustomizer::SaveBaseLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.SaveBaseLoadout");
		
		USheikUIActorCustomizer_SaveBaseLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.ResetLoadouts
	 * 		Flags  -> ()
	 */
	void USheikUIActorCustomizer::ResetLoadouts()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.ResetLoadouts");
		
		USheikUIActorCustomizer_ResetLoadouts_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.ResetCamera
	 * 		Flags  -> ()
	 * Parameters:
	 * 		float                                              Pitch                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Height                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              FOV                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		float                                              Pan                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikUIActorCustomizer::ResetCamera(float Pitch, float Height, float FOV, float Pan)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.ResetCamera");
		
		USheikUIActorCustomizer_ResetCamera_Params params {};
		params.Pitch = Pitch;
		params.Height = Height;
		params.FOV = FOV;
		params.Pan = Pan;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.PlayOrStopAccessoryMontage
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikAccessoryInfo                         Accessory                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		float                                              BlendOutTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikUIActorCustomizer::PlayOrStopAccessoryMontage(const struct FSheikAccessoryInfo& Accessory, float BlendOutTime)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.PlayOrStopAccessoryMontage");
		
		USheikUIActorCustomizer_PlayOrStopAccessoryMontage_Params params {};
		params.Accessory = Accessory;
		params.BlendOutTime = BlendOutTime;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikUIActorCustomizer.OnUpdateComplete__DelegateSignature
	 * 		Flags  -> ()
	 */
	void USheikUIActorCustomizer::OnUpdateComplete__DelegateSignature()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikUIActorCustomizer.OnUpdateComplete__DelegateSignature");
		
		USheikUIActorCustomizer_OnUpdateComplete__DelegateSignature_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.OnTattooLoadedComplete
	 * 		Flags  -> ()
	 */
	void USheikUIActorCustomizer::OnTattooLoadedComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.OnTattooLoadedComplete");
		
		USheikUIActorCustomizer_OnTattooLoadedComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.OnSkinColorLoadedComplete
	 * 		Flags  -> ()
	 */
	void USheikUIActorCustomizer::OnSkinColorLoadedComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.OnSkinColorLoadedComplete");
		
		USheikUIActorCustomizer_OnSkinColorLoadedComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.OnMakeupLoadedComplete
	 * 		Flags  -> ()
	 */
	void USheikUIActorCustomizer::OnMakeupLoadedComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.OnMakeupLoadedComplete");
		
		USheikUIActorCustomizer_OnMakeupLoadedComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.OnHeadShapeLoadedComplete
	 * 		Flags  -> ()
	 */
	void USheikUIActorCustomizer::OnHeadShapeLoadedComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.OnHeadShapeLoadedComplete");
		
		USheikUIActorCustomizer_OnHeadShapeLoadedComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.OnEyeColorLoadedComplete
	 * 		Flags  -> ()
	 */
	void USheikUIActorCustomizer::OnEyeColorLoadedComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.OnEyeColorLoadedComplete");
		
		USheikUIActorCustomizer_OnEyeColorLoadedComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.OnEyebrowLoadedComplete
	 * 		Flags  -> ()
	 */
	void USheikUIActorCustomizer::OnEyebrowLoadedComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.OnEyebrowLoadedComplete");
		
		USheikUIActorCustomizer_OnEyebrowLoadedComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.OnBodyShapeLoadedComplete
	 * 		Flags  -> ()
	 */
	void USheikUIActorCustomizer::OnBodyShapeLoadedComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.OnBodyShapeLoadedComplete");
		
		USheikUIActorCustomizer_OnBodyShapeLoadedComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.OnApparelLoadedComplete
	 * 		Flags  -> ()
	 */
	void USheikUIActorCustomizer::OnApparelLoadedComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.OnApparelLoadedComplete");
		
		USheikUIActorCustomizer_OnApparelLoadedComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.MakeDesiredLoadoutBase
	 * 		Flags  -> ()
	 */
	void USheikUIActorCustomizer::MakeDesiredLoadoutBase()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.MakeDesiredLoadoutBase");
		
		USheikUIActorCustomizer_MakeDesiredLoadoutBase_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.LoadoutWithoutApparel
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterLoadout                           Loadout                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FCharacterLoadout                           OutLoadout                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	void USheikUIActorCustomizer::LoadoutWithoutApparel(const struct FCharacterLoadout& Loadout, struct FCharacterLoadout* OutLoadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.LoadoutWithoutApparel");
		
		USheikUIActorCustomizer_LoadoutWithoutApparel_Params params {};
		params.Loadout = Loadout;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutLoadout != nullptr)
			*OutLoadout = params.OutLoadout;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.IsUpdateInProgress
	 * 		Flags  -> ()
	 */
	bool USheikUIActorCustomizer::IsUpdateInProgress()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.IsUpdateInProgress");
		
		USheikUIActorCustomizer_IsUpdateInProgress_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.IsLoadoutEqualToBase
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterLoadout                           InLoadout                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikUIActorCustomizer::IsLoadoutEqualToBase(const struct FCharacterLoadout& InLoadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.IsLoadoutEqualToBase");
		
		USheikUIActorCustomizer_IsLoadoutEqualToBase_Params params {};
		params.InLoadout = InLoadout;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.IsEquippedOnLoadout
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterLoadout                           Loadout                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		struct FSheikAccessoryInfo                         Accessory                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikUIActorCustomizer::IsEquippedOnLoadout(const struct FCharacterLoadout& Loadout, const struct FSheikAccessoryInfo& Accessory)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.IsEquippedOnLoadout");
		
		USheikUIActorCustomizer_IsEquippedOnLoadout_Params params {};
		params.Loadout = Loadout;
		params.Accessory = Accessory;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.IsEquippedOnDesired
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikAccessoryInfo                         Accessory                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikUIActorCustomizer::IsEquippedOnDesired(const struct FSheikAccessoryInfo& Accessory)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.IsEquippedOnDesired");
		
		USheikUIActorCustomizer_IsEquippedOnDesired_Params params {};
		params.Accessory = Accessory;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.IsEquippedOnBase
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikAccessoryInfo                         Accessory                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikUIActorCustomizer::IsEquippedOnBase(const struct FSheikAccessoryInfo& Accessory)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.IsEquippedOnBase");
		
		USheikUIActorCustomizer_IsEquippedOnBase_Params params {};
		params.Accessory = Accessory;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.IsDesiredOverBudget
	 * 		Flags  -> ()
	 */
	bool USheikUIActorCustomizer::IsDesiredOverBudget()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.IsDesiredOverBudget");
		
		USheikUIActorCustomizer_IsDesiredOverBudget_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.GetPartySlot
	 * 		Flags  -> ()
	 */
	int32_t USheikUIActorCustomizer::GetPartySlot()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.GetPartySlot");
		
		USheikUIActorCustomizer_GetPartySlot_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.GetMaxPerfCost
	 * 		Flags  -> ()
	 */
	int32_t USheikUIActorCustomizer::GetMaxPerfCost()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.GetMaxPerfCost");
		
		USheikUIActorCustomizer_GetMaxPerfCost_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.GetLoadoutClothingAccessories
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FCharacterLoadout                           Loadout                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	TArray<struct FSheikAccessoryInfo> USheikUIActorCustomizer::GetLoadoutClothingAccessories(const struct FCharacterLoadout& Loadout)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.GetLoadoutClothingAccessories");
		
		USheikUIActorCustomizer_GetLoadoutClothingAccessories_Params params {};
		params.Loadout = Loadout;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.GetDesiredLoadoutPerfCost
	 * 		Flags  -> ()
	 */
	int32_t USheikUIActorCustomizer::GetDesiredLoadoutPerfCost()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.GetDesiredLoadoutPerfCost");
		
		USheikUIActorCustomizer_GetDesiredLoadoutPerfCost_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.GetDesiredLoadout
	 * 		Flags  -> ()
	 */
	struct FCharacterLoadout USheikUIActorCustomizer::GetDesiredLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.GetDesiredLoadout");
		
		USheikUIActorCustomizer_GetDesiredLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.GetConflictingDesiredItemsForAccessory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikAccessoryInfo                         ApparelAccessory                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		TArray<struct FSheikAccessoryInfo>                 Conflicts                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	void USheikUIActorCustomizer::GetConflictingDesiredItemsForAccessory(const struct FSheikAccessoryInfo& ApparelAccessory, TArray<struct FSheikAccessoryInfo>* Conflicts)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.GetConflictingDesiredItemsForAccessory");
		
		USheikUIActorCustomizer_GetConflictingDesiredItemsForAccessory_Params params {};
		params.ApparelAccessory = ApparelAccessory;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Conflicts != nullptr)
			*Conflicts = params.Conflicts;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.GetBaseLoadoutPerfCost
	 * 		Flags  -> ()
	 */
	int32_t USheikUIActorCustomizer::GetBaseLoadoutPerfCost()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.GetBaseLoadoutPerfCost");
		
		USheikUIActorCustomizer_GetBaseLoadoutPerfCost_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.GetBaseLoadout
	 * 		Flags  -> ()
	 */
	struct FCharacterLoadout USheikUIActorCustomizer::GetBaseLoadout()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.GetBaseLoadout");
		
		USheikUIActorCustomizer_GetBaseLoadout_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.GetBaseAccessoryByWalletId
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        WalletId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikAccessoryInfo                         Accessory                                                  (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikUIActorCustomizer::GetBaseAccessoryByWalletId(const class FName& WalletId, struct FSheikAccessoryInfo* Accessory)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.GetBaseAccessoryByWalletId");
		
		USheikUIActorCustomizer_GetBaseAccessoryByWalletId_Params params {};
		params.WalletId = WalletId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Accessory != nullptr)
			*Accessory = params.Accessory;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.GetActor
	 * 		Flags  -> ()
	 */
	class ASheikUIActor* USheikUIActorCustomizer::GetActor()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.GetActor");
		
		USheikUIActorCustomizer_GetActor_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.BulkSetAccessory
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FSheikAccessoryInfo>                 InAccessories                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 * 		bool                                               bUpdateModel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikUIActorCustomizer::BulkSetAccessory(TArray<struct FSheikAccessoryInfo> InAccessories, bool bUpdateModel)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.BulkSetAccessory");
		
		USheikUIActorCustomizer_BulkSetAccessory_Params params {};
		params.InAccessories = InAccessories;
		params.bUpdateModel = bUpdateModel;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUIActorCustomizer.ApplyEmoteChanges
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<class FName>                                InEmoteAccessoryIds                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikUIActorCustomizer::ApplyEmoteChanges(TArray<class FName> InEmoteAccessoryIds)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUIActorCustomizer.ApplyEmoteChanges");
		
		USheikUIActorCustomizer_ApplyEmoteChanges_Params params {};
		params.InEmoteAccessoryIds = InEmoteAccessoryIds;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikUIActorCustomizer.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikUIActorCustomizer::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikUIActorCustomizer");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.RequestUIData
	 * 		Flags  -> ()
	 * Parameters:
	 * 		struct FSheikError                                 Error                                                      (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool USheikUITitleStorageInterface::RequestUIData(struct FSheikError* Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.RequestUIData");
		
		USheikUITitleStorageInterface_RequestUIData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Error != nullptr)
			*Error = params.Error;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikUITitleStorageInterface.OnGetRequiredLegalDocs__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bWasSuccessful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 * 		TArray<class FString>                              DocumentPaths                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	void USheikUITitleStorageInterface::OnGetRequiredLegalDocs__DelegateSignature(bool bWasSuccessful, const struct FSheikError& Error, TArray<class FString> DocumentPaths)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikUITitleStorageInterface.OnGetRequiredLegalDocs__DelegateSignature");
		
		USheikUITitleStorageInterface_OnGetRequiredLegalDocs__DelegateSignature_Params params {};
		params.bWasSuccessful = bWasSuccessful;
		params.Error = Error;
		params.DocumentPaths = DocumentPaths;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikUITitleStorageInterface.OnDataRetrieved__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bSuccessful                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikUITitleStorageInterface::OnDataRetrieved__DelegateSignature(bool bSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikUITitleStorageInterface.OnDataRetrieved__DelegateSignature");
		
		USheikUITitleStorageInterface_OnDataRetrieved__DelegateSignature_Params params {};
		params.bSuccessful = bSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> DelegateFunction Sheik.SheikUITitleStorageInterface.OnAcceptLegalDocument__DelegateSignature
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bWasSuccessful                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikUITitleStorageInterface::OnAcceptLegalDocument__DelegateSignature(bool bWasSuccessful, const struct FSheikError& Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("DelegateFunction Sheik.SheikUITitleStorageInterface.OnAcceptLegalDocument__DelegateSignature");
		
		USheikUITitleStorageInterface_OnAcceptLegalDocument__DelegateSignature_Params params {};
		params.bWasSuccessful = bWasSuccessful;
		params.Error = Error;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.LoadImageForRMTEntitlement
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      RMTOfferId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class UTexture2D*                                  Texture                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		bool                                               LoadSucceeded                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikUITitleStorageInterface::LoadImageForRMTEntitlement(const class FString& RMTOfferId, class UTexture2D** Texture, bool* LoadSucceeded)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.LoadImageForRMTEntitlement");
		
		USheikUITitleStorageInterface_LoadImageForRMTEntitlement_Params params {};
		params.RMTOfferId = RMTOfferId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Texture != nullptr)
			*Texture = params.Texture;
		if (LoadSucceeded != nullptr)
			*LoadSucceeded = params.LoadSucceeded;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.IsVCOffer
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      RMTOfferId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikUITitleStorageInterface::IsVCOffer(const class FString& RMTOfferId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.IsVCOffer");
		
		USheikUITitleStorageInterface_IsVCOffer_Params params {};
		params.RMTOfferId = RMTOfferId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.IsFeatureEntitlementEnabled
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      FeatureEntitlementName                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikUITitleStorageInterface::IsFeatureEntitlementEnabled(const class FString& FeatureEntitlementName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.IsFeatureEntitlementEnabled");
		
		USheikUITitleStorageInterface_IsFeatureEntitlementEnabled_Params params {};
		params.FeatureEntitlementName = FeatureEntitlementName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.IsDevGameModeModule
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FText                                        GameModeModuleName                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	 */
	bool USheikUITitleStorageInterface::IsDevGameModeModule(const class FText& GameModeModuleName)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.IsDevGameModeModule");
		
		USheikUITitleStorageInterface_IsDevGameModeModule_Params params {};
		params.GameModeModuleName = GameModeModuleName;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.IsDataRetrievalComplete
	 * 		Flags  -> ()
	 */
	bool USheikUITitleStorageInterface::IsDataRetrievalComplete()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.IsDataRetrievalComplete");
		
		USheikUITitleStorageInterface_IsDataRetrievalComplete_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.GetVirtualCurrencyDisplayTitle
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      RMTOfferId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText USheikUITitleStorageInterface::GetVirtualCurrencyDisplayTitle(const class FString& RMTOfferId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.GetVirtualCurrencyDisplayTitle");
		
		USheikUITitleStorageInterface_GetVirtualCurrencyDisplayTitle_Params params {};
		params.RMTOfferId = RMTOfferId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.GetRMTOfferPromoText
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      RMTOfferId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	class FText USheikUITitleStorageInterface::GetRMTOfferPromoText(const class FString& RMTOfferId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.GetRMTOfferPromoText");
		
		USheikUITitleStorageInterface_GetRMTOfferPromoText_Params params {};
		params.RMTOfferId = RMTOfferId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.GetRMTEntitlementImageData
	 * 		Flags  -> ()
	 */
	TArray<struct FSheikRMTEntitlementImageRow> USheikUITitleStorageInterface::GetRMTEntitlementImageData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.GetRMTEntitlementImageData");
		
		USheikUITitleStorageInterface_GetRMTEntitlementImageData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.GetRMTCategoryDefinitionData
	 * 		Flags  -> ()
	 */
	TArray<struct FSheikRMTCategoryDefinition> USheikUITitleStorageInterface::GetRMTCategoryDefinitionData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.GetRMTCategoryDefinitionData");
		
		USheikUITitleStorageInterface_GetRMTCategoryDefinitionData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.GetRequiredLegalDocs
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      CountryCode                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      LanguageCode                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikUITitleStorageInterface::GetRequiredLegalDocs(const class FString& CountryCode, const class FString& LanguageCode, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.GetRequiredLegalDocs");
		
		USheikUITitleStorageInterface_GetRequiredLegalDocs_Params params {};
		params.CountryCode = CountryCode;
		params.LanguageCode = LanguageCode;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.GetNoticesDataList
	 * 		Flags  -> ()
	 */
	TArray<struct FNoticesUIData> USheikUITitleStorageInterface::GetNoticesDataList()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.GetNoticesDataList");
		
		USheikUITitleStorageInterface_GetNoticesDataList_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.GetMaxPartySize
	 * 		Flags  -> ()
	 */
	int32_t USheikUITitleStorageInterface::GetMaxPartySize()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.GetMaxPartySize");
		
		USheikUITitleStorageInterface_GetMaxPartySize_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.GetLegalDocument
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FString                                      Document                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FSheikError                                 Error                                                      (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	bool USheikUITitleStorageInterface::GetLegalDocument(const class FString& Filename, class FString* Document, struct FSheikError* Error)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.GetLegalDocument");
		
		USheikUITitleStorageInterface_GetLegalDocument_Params params {};
		params.Filename = Filename;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (Document != nullptr)
			*Document = params.Document;
		if (Error != nullptr)
			*Error = params.Error;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.GetGlobalNoticeControls
	 * 		Flags  -> ()
	 */
	TArray<struct FGlobalNoticeControl> USheikUITitleStorageInterface::GetGlobalNoticeControls()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.GetGlobalNoticeControls");
		
		USheikUITitleStorageInterface_GetGlobalNoticeControls_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.GetGameModeModuleData
	 * 		Flags  -> ()
	 */
	TArray<struct FSheikGameModeModuleData> USheikUITitleStorageInterface::GetGameModeModuleData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.GetGameModeModuleData");
		
		USheikUITitleStorageInterface_GetGameModeModuleData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.GetFeatureEntitlementData
	 * 		Flags  -> ()
	 */
	TArray<struct FSheikFeatureEntitlementRow> USheikUITitleStorageInterface::GetFeatureEntitlementData()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.GetFeatureEntitlementData");
		
		USheikUITitleStorageInterface_GetFeatureEntitlementData_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikUITitleStorageInterface.AcceptLegalDocument
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FString                                      Filename                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		class FScriptDelegate                              Delegate                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	 */
	void USheikUITitleStorageInterface::AcceptLegalDocument(const class FString& Filename, const class FScriptDelegate& Delegate)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikUITitleStorageInterface.AcceptLegalDocument");
		
		USheikUITitleStorageInterface_AcceptLegalDocument_Params params {};
		params.Filename = Filename;
		params.Delegate = Delegate;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikUITitleStorageInterface.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikUITitleStorageInterface::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikUITitleStorageInterface");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikRequiredStringTables.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikRequiredStringTables::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikRequiredStringTables");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikVFXDepthVolume.GetTopOfVolume
	 * 		Flags  -> ()
	 */
	float ASheikVFXDepthVolume::GetTopOfVolume()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikVFXDepthVolume.GetTopOfVolume");
		
		ASheikVFXDepthVolume_GetTopOfVolume_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikVFXDepthVolume.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikVFXDepthVolume::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikVFXDepthVolume");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ASheikVFXHandlerActor.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ASheikVFXHandlerActor::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikVFXHandlerActor");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikViewportClient.Internal_OnToggleFullscreen
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bIsFullscreen                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikViewportClient::Internal_OnToggleFullscreen(bool bIsFullscreen)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikViewportClient.Internal_OnToggleFullscreen");
		
		USheikViewportClient_Internal_OnToggleFullscreen_Params params {};
		params.bIsFullscreen = bIsFullscreen;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikViewportClient.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikViewportClient::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikViewportClient");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikVirtualCurrencyScreen.SetCanNavigateBack
	 * 		Flags  -> ()
	 * Parameters:
	 * 		bool                                               bCanNavigateBack                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikVirtualCurrencyScreen::SetCanNavigateBack(bool bCanNavigateBack)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikVirtualCurrencyScreen.SetCanNavigateBack");
		
		USheikVirtualCurrencyScreen_SetCanNavigateBack_Params params {};
		params.bCanNavigateBack = bCanNavigateBack;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikVirtualCurrencyScreen.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikVirtualCurrencyScreen::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikVirtualCurrencyScreen");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikWalletSystem.IsWalletAssetUnlocked
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        InWalletId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	bool USheikWalletSystem::IsWalletAssetUnlocked(const class FName& InWalletId)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikWalletSystem.IsWalletAssetUnlocked");
		
		USheikWalletSystem_IsWalletAssetUnlocked_Params params {};
		params.InWalletId = InWalletId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikWalletSystem.GetWalletAssetById
	 * 		Flags  -> ()
	 * Parameters:
	 * 		class FName                                        WalletId                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 * 		struct FIGWalletAssetInfo                          OutWalletAsset                                             (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikWalletSystem::GetWalletAssetById(const class FName& WalletId, struct FIGWalletAssetInfo* OutWalletAsset)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikWalletSystem.GetWalletAssetById");
		
		USheikWalletSystem_GetWalletAssetById_Params params {};
		params.WalletId = WalletId;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutWalletAsset != nullptr)
			*OutWalletAsset = params.OutWalletAsset;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikWalletSystem.GetUnlockedWalletAssetsOfType
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FIGWalletAssetInfo>                  OutOwnedWalletAssets                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 * 		TArray<EIGWalletAssetType>                         IncludesAssetType                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool USheikWalletSystem::GetUnlockedWalletAssetsOfType(TArray<struct FIGWalletAssetInfo>* OutOwnedWalletAssets, TArray<EIGWalletAssetType> IncludesAssetType)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikWalletSystem.GetUnlockedWalletAssetsOfType");
		
		USheikWalletSystem_GetUnlockedWalletAssetsOfType_Params params {};
		params.IncludesAssetType = IncludesAssetType;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutOwnedWalletAssets != nullptr)
			*OutOwnedWalletAssets = params.OutOwnedWalletAssets;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikWalletSystem.GetUnlockedWalletAssets
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FIGWalletAssetInfo>                  OutOwnedWalletAssets                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool USheikWalletSystem::GetUnlockedWalletAssets(TArray<struct FIGWalletAssetInfo>* OutOwnedWalletAssets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikWalletSystem.GetUnlockedWalletAssets");
		
		USheikWalletSystem_GetUnlockedWalletAssets_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutOwnedWalletAssets != nullptr)
			*OutOwnedWalletAssets = params.OutOwnedWalletAssets;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikWalletSystem.GetDefaultEntitlementAssets
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TArray<struct FIGWalletAssetInfo>                  OutWalletAssets                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	 */
	bool USheikWalletSystem::GetDefaultEntitlementAssets(TArray<struct FIGWalletAssetInfo>* OutWalletAssets)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikWalletSystem.GetDefaultEntitlementAssets");
		
		USheikWalletSystem_GetDefaultEntitlementAssets_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutWalletAssets != nullptr)
			*OutWalletAssets = params.OutWalletAssets;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikWalletSystem.BuildMapping
	 * 		Flags  -> ()
	 */
	void USheikWalletSystem::BuildMapping()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikWalletSystem.BuildMapping");
		
		USheikWalletSystem_BuildMapping_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikWalletSystem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikWalletSystem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikWalletSystem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikWaterCollisionComponent.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikWaterCollisionComponent::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikWaterCollisionComponent");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikWeeklyRepStrategy.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikWeeklyRepStrategy::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikWeeklyRepStrategy");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikXpSystem.GetMatchXpContributions
	 * 		Flags  -> ()
	 * Parameters:
	 * 		TMap<class FName, float>                           OutXpContributions                                         (Parm, OutParm, NativeAccessSpecifierPublic)
	 */
	bool USheikXpSystem::GetMatchXpContributions(TMap<class FName, float>* OutXpContributions)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikXpSystem.GetMatchXpContributions");
		
		USheikXpSystem_GetMatchXpContributions_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		if (OutXpContributions != nullptr)
			*OutXpContributions = params.OutXpContributions;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikXpSystem.GetMatchXp
	 * 		Flags  -> ()
	 */
	float USheikXpSystem::GetMatchXp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikXpSystem.GetMatchXp");
		
		USheikXpSystem_GetMatchXp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikXpSystem.GetLifetimeXp
	 * 		Flags  -> ()
	 */
	float USheikXpSystem::GetLifetimeXp()
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikXpSystem.GetLifetimeXp");
		
		USheikXpSystem_GetLifetimeXp_Params params {};
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
		
		return params.ReturnValue;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> Function Sheik.SheikXpSystem.CalculateMatchXp
	 * 		Flags  -> ()
	 * Parameters:
	 * 		int32_t                                            Placement                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	 */
	void USheikXpSystem::CalculateMatchXp(int32_t Placement)
	{
		static UFunction* fn = nullptr;
		if (!fn)
			fn = UObject::FindObject<UFunction>("Function Sheik.SheikXpSystem.CalculateMatchXp");
		
		USheikXpSystem_CalculateMatchXp_Params params {};
		params.Placement = Placement;
		
		auto flags = fn->FunctionFlags;
		UObject::ProcessEvent(fn, &params);
		fn->FunctionFlags = flags;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction USheikXpSystem.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* USheikXpSystem::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.SheikXpSystem");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction ATeleportLocation.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* ATeleportLocation::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.TeleportLocation");
		return ptr;
	}

	/**
	 * Function:
	 * 		RVA    -> 0x00000000
	 * 		Name   -> PredefinedFunction UUISkeletalMeshToAnimInstance.StaticClass
	 * 		Flags  -> (Predefined, Static)
	 */
	UClass* UUISkeletalMeshToAnimInstance::StaticClass()
	{
		static UClass* ptr = nullptr;
		if (!ptr)
			ptr = UObject::FindClass("Class Sheik.UISkeletalMeshToAnimInstance");
		return ptr;
	}

}


